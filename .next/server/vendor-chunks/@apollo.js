"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@apollo";
exports.ids = ["vendor-chunks/@apollo"];
exports.modules = {

/***/ "(ssr)/./node_modules/@apollo/client/cache/core/cache.js":
/*!*********************************************************!*\
  !*** ./node_modules/@apollo/client/cache/core/cache.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ApolloCache: () => (/* binding */ ApolloCache)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.mjs\");\n/* harmony import */ var optimism__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! optimism */ \"(ssr)/./node_modules/optimism/lib/index.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/graphql/fragments.js\");\n\n\n\nvar ApolloCache = function() {\n    function ApolloCache() {\n        this.assumeImmutableResults = false;\n        this.getFragmentDoc = (0,optimism__WEBPACK_IMPORTED_MODULE_0__.wrap)(_utilities_index_js__WEBPACK_IMPORTED_MODULE_1__.getFragmentQueryDocument);\n    }\n    ApolloCache.prototype.batch = function(options) {\n        var _this = this;\n        var optimisticId = typeof options.optimistic === \"string\" ? options.optimistic : options.optimistic === false ? null : void 0;\n        var updateResult;\n        this.performTransaction(function() {\n            return updateResult = options.update(_this);\n        }, optimisticId);\n        return updateResult;\n    };\n    ApolloCache.prototype.recordOptimisticTransaction = function(transaction, optimisticId) {\n        this.performTransaction(transaction, optimisticId);\n    };\n    ApolloCache.prototype.transformDocument = function(document) {\n        return document;\n    };\n    ApolloCache.prototype.transformForLink = function(document) {\n        return document;\n    };\n    ApolloCache.prototype.identify = function(object) {\n        return;\n    };\n    ApolloCache.prototype.gc = function() {\n        return [];\n    };\n    ApolloCache.prototype.modify = function(options) {\n        return false;\n    };\n    ApolloCache.prototype.readQuery = function(options, optimistic) {\n        if (optimistic === void 0) {\n            optimistic = !!options.optimistic;\n        }\n        return this.read((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, options), {\n            rootId: options.id || \"ROOT_QUERY\",\n            optimistic: optimistic\n        }));\n    };\n    ApolloCache.prototype.readFragment = function(options, optimistic) {\n        if (optimistic === void 0) {\n            optimistic = !!options.optimistic;\n        }\n        return this.read((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, options), {\n            query: this.getFragmentDoc(options.fragment, options.fragmentName),\n            rootId: options.id,\n            optimistic: optimistic\n        }));\n    };\n    ApolloCache.prototype.writeQuery = function(_a) {\n        var id = _a.id, data = _a.data, options = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__rest)(_a, [\n            \"id\",\n            \"data\"\n        ]);\n        return this.write(Object.assign(options, {\n            dataId: id || \"ROOT_QUERY\",\n            result: data\n        }));\n    };\n    ApolloCache.prototype.writeFragment = function(_a) {\n        var id = _a.id, data = _a.data, fragment = _a.fragment, fragmentName = _a.fragmentName, options = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__rest)(_a, [\n            \"id\",\n            \"data\",\n            \"fragment\",\n            \"fragmentName\"\n        ]);\n        return this.write(Object.assign(options, {\n            query: this.getFragmentDoc(fragment, fragmentName),\n            dataId: id,\n            result: data\n        }));\n    };\n    ApolloCache.prototype.updateQuery = function(options, update) {\n        return this.batch({\n            update: function(cache) {\n                var value = cache.readQuery(options);\n                var data = update(value);\n                if (data === void 0 || data === null) return value;\n                cache.writeQuery((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, options), {\n                    data: data\n                }));\n                return data;\n            }\n        });\n    };\n    ApolloCache.prototype.updateFragment = function(options, update) {\n        return this.batch({\n            update: function(cache) {\n                var value = cache.readFragment(options);\n                var data = update(value);\n                if (data === void 0 || data === null) return value;\n                cache.writeFragment((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, options), {\n                    data: data\n                }));\n                return data;\n            }\n        });\n    };\n    return ApolloCache;\n}();\n //# sourceMappingURL=cache.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/cache/core/cache.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/cache/core/types/common.js":
/*!****************************************************************!*\
  !*** ./node_modules/@apollo/client/cache/core/types/common.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MissingFieldError: () => (/* binding */ MissingFieldError)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.mjs\");\n\nvar MissingFieldError = function(_super) {\n    (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__extends)(MissingFieldError, _super);\n    function MissingFieldError(message, path, query, variables) {\n        var _a;\n        var _this = _super.call(this, message) || this;\n        _this.message = message;\n        _this.path = path;\n        _this.query = query;\n        _this.variables = variables;\n        if (Array.isArray(_this.path)) {\n            _this.missing = _this.message;\n            for(var i = _this.path.length - 1; i >= 0; --i){\n                _this.missing = (_a = {}, _a[_this.path[i]] = _this.missing, _a);\n            }\n        } else {\n            _this.missing = _this.path;\n        }\n        _this.__proto__ = MissingFieldError.prototype;\n        return _this;\n    }\n    return MissingFieldError;\n}(Error);\n //# sourceMappingURL=common.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFwb2xsby9jbGllbnQvY2FjaGUvY29yZS90eXBlcy9jb21tb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBa0M7QUFDbEMsSUFBSUMsb0JBQXFCLFNBQVVDLE1BQU07SUFDckNGLGdEQUFTQSxDQUFDQyxtQkFBbUJDO0lBQzdCLFNBQVNELGtCQUFrQkUsT0FBTyxFQUFFQyxJQUFJLEVBQUVDLEtBQUssRUFBRUMsU0FBUztRQUN0RCxJQUFJQztRQUNKLElBQUlDLFFBQVFOLE9BQU9PLElBQUksQ0FBQyxJQUFJLEVBQUVOLFlBQVksSUFBSTtRQUM5Q0ssTUFBTUwsT0FBTyxHQUFHQTtRQUNoQkssTUFBTUosSUFBSSxHQUFHQTtRQUNiSSxNQUFNSCxLQUFLLEdBQUdBO1FBQ2RHLE1BQU1GLFNBQVMsR0FBR0E7UUFDbEIsSUFBSUksTUFBTUMsT0FBTyxDQUFDSCxNQUFNSixJQUFJLEdBQUc7WUFDM0JJLE1BQU1JLE9BQU8sR0FBR0osTUFBTUwsT0FBTztZQUM3QixJQUFLLElBQUlVLElBQUlMLE1BQU1KLElBQUksQ0FBQ1UsTUFBTSxHQUFHLEdBQUdELEtBQUssR0FBRyxFQUFFQSxFQUFHO2dCQUM3Q0wsTUFBTUksT0FBTyxHQUFJTCxDQUFBQSxLQUFLLENBQUMsR0FBR0EsRUFBRSxDQUFDQyxNQUFNSixJQUFJLENBQUNTLEVBQUUsQ0FBQyxHQUFHTCxNQUFNSSxPQUFPLEVBQUVMLEVBQUM7WUFDbEU7UUFDSixPQUNLO1lBQ0RDLE1BQU1JLE9BQU8sR0FBR0osTUFBTUosSUFBSTtRQUM5QjtRQUNBSSxNQUFNTyxTQUFTLEdBQUdkLGtCQUFrQmUsU0FBUztRQUM3QyxPQUFPUjtJQUNYO0lBQ0EsT0FBT1A7QUFDWCxFQUFFZ0I7QUFDMkIsQ0FDN0Isa0NBQWtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVybmktYXBwLy4vbm9kZV9tb2R1bGVzL0BhcG9sbG8vY2xpZW50L2NhY2hlL2NvcmUvdHlwZXMvY29tbW9uLmpzPzZhYTIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgX19leHRlbmRzIH0gZnJvbSBcInRzbGliXCI7XG52YXIgTWlzc2luZ0ZpZWxkRXJyb3IgPSAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhNaXNzaW5nRmllbGRFcnJvciwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBNaXNzaW5nRmllbGRFcnJvcihtZXNzYWdlLCBwYXRoLCBxdWVyeSwgdmFyaWFibGVzKSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgdmFyIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcywgbWVzc2FnZSkgfHwgdGhpcztcbiAgICAgICAgX3RoaXMubWVzc2FnZSA9IG1lc3NhZ2U7XG4gICAgICAgIF90aGlzLnBhdGggPSBwYXRoO1xuICAgICAgICBfdGhpcy5xdWVyeSA9IHF1ZXJ5O1xuICAgICAgICBfdGhpcy52YXJpYWJsZXMgPSB2YXJpYWJsZXM7XG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KF90aGlzLnBhdGgpKSB7XG4gICAgICAgICAgICBfdGhpcy5taXNzaW5nID0gX3RoaXMubWVzc2FnZTtcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSBfdGhpcy5wYXRoLmxlbmd0aCAtIDE7IGkgPj0gMDsgLS1pKSB7XG4gICAgICAgICAgICAgICAgX3RoaXMubWlzc2luZyA9IChfYSA9IHt9LCBfYVtfdGhpcy5wYXRoW2ldXSA9IF90aGlzLm1pc3NpbmcsIF9hKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIF90aGlzLm1pc3NpbmcgPSBfdGhpcy5wYXRoO1xuICAgICAgICB9XG4gICAgICAgIF90aGlzLl9fcHJvdG9fXyA9IE1pc3NpbmdGaWVsZEVycm9yLnByb3RvdHlwZTtcbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cbiAgICByZXR1cm4gTWlzc2luZ0ZpZWxkRXJyb3I7XG59KEVycm9yKSk7XG5leHBvcnQgeyBNaXNzaW5nRmllbGRFcnJvciB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29tbW9uLmpzLm1hcCJdLCJuYW1lcyI6WyJfX2V4dGVuZHMiLCJNaXNzaW5nRmllbGRFcnJvciIsIl9zdXBlciIsIm1lc3NhZ2UiLCJwYXRoIiwicXVlcnkiLCJ2YXJpYWJsZXMiLCJfYSIsIl90aGlzIiwiY2FsbCIsIkFycmF5IiwiaXNBcnJheSIsIm1pc3NpbmciLCJpIiwibGVuZ3RoIiwiX19wcm90b19fIiwicHJvdG90eXBlIiwiRXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/cache/core/types/common.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/cache/inmemory/entityStore.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@apollo/client/cache/inmemory/entityStore.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EntityStore: () => (/* binding */ EntityStore),\n/* harmony export */   maybeDependOnExistenceOfEntity: () => (/* binding */ maybeDependOnExistenceOfEntity),\n/* harmony export */   supportsResultCaching: () => (/* binding */ supportsResultCaching)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.mjs\");\n/* harmony import */ var _utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utilities/globals/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/globals/index.js\");\n/* harmony import */ var optimism__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! optimism */ \"(ssr)/./node_modules/optimism/lib/index.js\");\n/* harmony import */ var _wry_equality__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @wry/equality */ \"(ssr)/./node_modules/@wry/equality/lib/index.js\");\n/* harmony import */ var _wry_trie__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @wry/trie */ \"(ssr)/./node_modules/@wry/trie/lib/index.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/common/maybeDeepFreeze.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/graphql/storeUtils.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/common/mergeDeep.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/common/objects.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/common/canUse.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./helpers.js */ \"(ssr)/./node_modules/@apollo/client/cache/inmemory/helpers.js\");\n\n\n\n\n\n\n\nvar DELETE = Object.create(null);\nvar delModifier = function() {\n    return DELETE;\n};\nvar INVALIDATE = Object.create(null);\nvar EntityStore = function() {\n    function EntityStore(policies, group) {\n        var _this = this;\n        this.policies = policies;\n        this.group = group;\n        this.data = Object.create(null);\n        this.rootIds = Object.create(null);\n        this.refs = Object.create(null);\n        this.getFieldValue = function(objectOrReference, storeFieldName) {\n            return (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_4__.maybeDeepFreeze)((0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_5__.isReference)(objectOrReference) ? _this.get(objectOrReference.__ref, storeFieldName) : objectOrReference && objectOrReference[storeFieldName]);\n        };\n        this.canRead = function(objOrRef) {\n            return (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_5__.isReference)(objOrRef) ? _this.has(objOrRef.__ref) : typeof objOrRef === \"object\";\n        };\n        this.toReference = function(objOrIdOrRef, mergeIntoStore) {\n            if (typeof objOrIdOrRef === \"string\") {\n                return (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_5__.makeReference)(objOrIdOrRef);\n            }\n            if ((0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_5__.isReference)(objOrIdOrRef)) {\n                return objOrIdOrRef;\n            }\n            var id = _this.policies.identify(objOrIdOrRef)[0];\n            if (id) {\n                var ref = (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_5__.makeReference)(id);\n                if (mergeIntoStore) {\n                    _this.merge(id, objOrIdOrRef);\n                }\n                return ref;\n            }\n        };\n    }\n    EntityStore.prototype.toObject = function() {\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__assign)({}, this.data);\n    };\n    EntityStore.prototype.has = function(dataId) {\n        return this.lookup(dataId, true) !== void 0;\n    };\n    EntityStore.prototype.get = function(dataId, fieldName) {\n        this.group.depend(dataId, fieldName);\n        if (_helpers_js__WEBPACK_IMPORTED_MODULE_7__.hasOwn.call(this.data, dataId)) {\n            var storeObject = this.data[dataId];\n            if (storeObject && _helpers_js__WEBPACK_IMPORTED_MODULE_7__.hasOwn.call(storeObject, fieldName)) {\n                return storeObject[fieldName];\n            }\n        }\n        if (fieldName === \"__typename\" && _helpers_js__WEBPACK_IMPORTED_MODULE_7__.hasOwn.call(this.policies.rootTypenamesById, dataId)) {\n            return this.policies.rootTypenamesById[dataId];\n        }\n        if (this instanceof Layer) {\n            return this.parent.get(dataId, fieldName);\n        }\n    };\n    EntityStore.prototype.lookup = function(dataId, dependOnExistence) {\n        if (dependOnExistence) this.group.depend(dataId, \"__exists\");\n        if (_helpers_js__WEBPACK_IMPORTED_MODULE_7__.hasOwn.call(this.data, dataId)) {\n            return this.data[dataId];\n        }\n        if (this instanceof Layer) {\n            return this.parent.lookup(dataId, dependOnExistence);\n        }\n        if (this.policies.rootTypenamesById[dataId]) {\n            return Object.create(null);\n        }\n    };\n    EntityStore.prototype.merge = function(older, newer) {\n        var _this = this;\n        var dataId;\n        if ((0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_5__.isReference)(older)) older = older.__ref;\n        if ((0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_5__.isReference)(newer)) newer = newer.__ref;\n        var existing = typeof older === \"string\" ? this.lookup(dataId = older) : older;\n        var incoming = typeof newer === \"string\" ? this.lookup(dataId = newer) : newer;\n        if (!incoming) return;\n        (0,_utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.invariant)(typeof dataId === \"string\", 1);\n        var merged = new _utilities_index_js__WEBPACK_IMPORTED_MODULE_8__.DeepMerger(storeObjectReconciler).merge(existing, incoming);\n        this.data[dataId] = merged;\n        if (merged !== existing) {\n            delete this.refs[dataId];\n            if (this.group.caching) {\n                var fieldsToDirty_1 = Object.create(null);\n                if (!existing) fieldsToDirty_1.__exists = 1;\n                Object.keys(incoming).forEach(function(storeFieldName) {\n                    if (!existing || existing[storeFieldName] !== merged[storeFieldName]) {\n                        fieldsToDirty_1[storeFieldName] = 1;\n                        var fieldName = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_7__.fieldNameFromStoreName)(storeFieldName);\n                        if (fieldName !== storeFieldName && !_this.policies.hasKeyArgs(merged.__typename, fieldName)) {\n                            fieldsToDirty_1[fieldName] = 1;\n                        }\n                        if (merged[storeFieldName] === void 0 && !(_this instanceof Layer)) {\n                            delete merged[storeFieldName];\n                        }\n                    }\n                });\n                if (fieldsToDirty_1.__typename && !(existing && existing.__typename) && this.policies.rootTypenamesById[dataId] === merged.__typename) {\n                    delete fieldsToDirty_1.__typename;\n                }\n                Object.keys(fieldsToDirty_1).forEach(function(fieldName) {\n                    return _this.group.dirty(dataId, fieldName);\n                });\n            }\n        }\n    };\n    EntityStore.prototype.modify = function(dataId, fields) {\n        var _this = this;\n        var storeObject = this.lookup(dataId);\n        if (storeObject) {\n            var changedFields_1 = Object.create(null);\n            var needToMerge_1 = false;\n            var allDeleted_1 = true;\n            var sharedDetails_1 = {\n                DELETE: DELETE,\n                INVALIDATE: INVALIDATE,\n                isReference: _utilities_index_js__WEBPACK_IMPORTED_MODULE_5__.isReference,\n                toReference: this.toReference,\n                canRead: this.canRead,\n                readField: function(fieldNameOrOptions, from) {\n                    return _this.policies.readField(typeof fieldNameOrOptions === \"string\" ? {\n                        fieldName: fieldNameOrOptions,\n                        from: from || (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_5__.makeReference)(dataId)\n                    } : fieldNameOrOptions, {\n                        store: _this\n                    });\n                }\n            };\n            Object.keys(storeObject).forEach(function(storeFieldName) {\n                var fieldName = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_7__.fieldNameFromStoreName)(storeFieldName);\n                var fieldValue = storeObject[storeFieldName];\n                if (fieldValue === void 0) return;\n                var modify = typeof fields === \"function\" ? fields : fields[storeFieldName] || fields[fieldName];\n                if (modify) {\n                    var newValue = modify === delModifier ? DELETE : modify((0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_4__.maybeDeepFreeze)(fieldValue), (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_6__.__assign)({}, sharedDetails_1), {\n                        fieldName: fieldName,\n                        storeFieldName: storeFieldName,\n                        storage: _this.getStorage(dataId, storeFieldName)\n                    }));\n                    if (newValue === INVALIDATE) {\n                        _this.group.dirty(dataId, storeFieldName);\n                    } else {\n                        if (newValue === DELETE) newValue = void 0;\n                        if (newValue !== fieldValue) {\n                            changedFields_1[storeFieldName] = newValue;\n                            needToMerge_1 = true;\n                            fieldValue = newValue;\n                            if (globalThis.__DEV__ !== false) {\n                                var checkReference = function(ref) {\n                                    if (_this.lookup(ref.__ref) === undefined) {\n                                        globalThis.__DEV__ !== false && _utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.invariant.warn(2, ref);\n                                        return true;\n                                    }\n                                };\n                                if ((0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_5__.isReference)(newValue)) {\n                                    checkReference(newValue);\n                                } else if (Array.isArray(newValue)) {\n                                    var seenReference = false;\n                                    var someNonReference = void 0;\n                                    for(var _i = 0, newValue_1 = newValue; _i < newValue_1.length; _i++){\n                                        var value = newValue_1[_i];\n                                        if ((0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_5__.isReference)(value)) {\n                                            seenReference = true;\n                                            if (checkReference(value)) break;\n                                        } else {\n                                            if (typeof value === \"object\" && !!value) {\n                                                var id = _this.policies.identify(value)[0];\n                                                if (id) {\n                                                    someNonReference = value;\n                                                }\n                                            }\n                                        }\n                                        if (seenReference && someNonReference !== undefined) {\n                                            globalThis.__DEV__ !== false && _utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.invariant.warn(3, someNonReference);\n                                            break;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                if (fieldValue !== void 0) {\n                    allDeleted_1 = false;\n                }\n            });\n            if (needToMerge_1) {\n                this.merge(dataId, changedFields_1);\n                if (allDeleted_1) {\n                    if (this instanceof Layer) {\n                        this.data[dataId] = void 0;\n                    } else {\n                        delete this.data[dataId];\n                    }\n                    this.group.dirty(dataId, \"__exists\");\n                }\n                return true;\n            }\n        }\n        return false;\n    };\n    EntityStore.prototype.delete = function(dataId, fieldName, args) {\n        var _a;\n        var storeObject = this.lookup(dataId);\n        if (storeObject) {\n            var typename = this.getFieldValue(storeObject, \"__typename\");\n            var storeFieldName = fieldName && args ? this.policies.getStoreFieldName({\n                typename: typename,\n                fieldName: fieldName,\n                args: args\n            }) : fieldName;\n            return this.modify(dataId, storeFieldName ? (_a = {}, _a[storeFieldName] = delModifier, _a) : delModifier);\n        }\n        return false;\n    };\n    EntityStore.prototype.evict = function(options, limit) {\n        var evicted = false;\n        if (options.id) {\n            if (_helpers_js__WEBPACK_IMPORTED_MODULE_7__.hasOwn.call(this.data, options.id)) {\n                evicted = this.delete(options.id, options.fieldName, options.args);\n            }\n            if (this instanceof Layer && this !== limit) {\n                evicted = this.parent.evict(options, limit) || evicted;\n            }\n            if (options.fieldName || evicted) {\n                this.group.dirty(options.id, options.fieldName || \"__exists\");\n            }\n        }\n        return evicted;\n    };\n    EntityStore.prototype.clear = function() {\n        this.replace(null);\n    };\n    EntityStore.prototype.extract = function() {\n        var _this = this;\n        var obj = this.toObject();\n        var extraRootIds = [];\n        this.getRootIdSet().forEach(function(id) {\n            if (!_helpers_js__WEBPACK_IMPORTED_MODULE_7__.hasOwn.call(_this.policies.rootTypenamesById, id)) {\n                extraRootIds.push(id);\n            }\n        });\n        if (extraRootIds.length) {\n            obj.__META = {\n                extraRootIds: extraRootIds.sort()\n            };\n        }\n        return obj;\n    };\n    EntityStore.prototype.replace = function(newData) {\n        var _this = this;\n        Object.keys(this.data).forEach(function(dataId) {\n            if (!(newData && _helpers_js__WEBPACK_IMPORTED_MODULE_7__.hasOwn.call(newData, dataId))) {\n                _this.delete(dataId);\n            }\n        });\n        if (newData) {\n            var __META = newData.__META, rest_1 = (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__rest)(newData, [\n                \"__META\"\n            ]);\n            Object.keys(rest_1).forEach(function(dataId) {\n                _this.merge(dataId, rest_1[dataId]);\n            });\n            if (__META) {\n                __META.extraRootIds.forEach(this.retain, this);\n            }\n        }\n    };\n    EntityStore.prototype.retain = function(rootId) {\n        return this.rootIds[rootId] = (this.rootIds[rootId] || 0) + 1;\n    };\n    EntityStore.prototype.release = function(rootId) {\n        if (this.rootIds[rootId] > 0) {\n            var count = --this.rootIds[rootId];\n            if (!count) delete this.rootIds[rootId];\n            return count;\n        }\n        return 0;\n    };\n    EntityStore.prototype.getRootIdSet = function(ids) {\n        if (ids === void 0) {\n            ids = new Set();\n        }\n        Object.keys(this.rootIds).forEach(ids.add, ids);\n        if (this instanceof Layer) {\n            this.parent.getRootIdSet(ids);\n        } else {\n            Object.keys(this.policies.rootTypenamesById).forEach(ids.add, ids);\n        }\n        return ids;\n    };\n    EntityStore.prototype.gc = function() {\n        var _this = this;\n        var ids = this.getRootIdSet();\n        var snapshot = this.toObject();\n        ids.forEach(function(id) {\n            if (_helpers_js__WEBPACK_IMPORTED_MODULE_7__.hasOwn.call(snapshot, id)) {\n                Object.keys(_this.findChildRefIds(id)).forEach(ids.add, ids);\n                delete snapshot[id];\n            }\n        });\n        var idsToRemove = Object.keys(snapshot);\n        if (idsToRemove.length) {\n            var root_1 = this;\n            while(root_1 instanceof Layer)root_1 = root_1.parent;\n            idsToRemove.forEach(function(id) {\n                return root_1.delete(id);\n            });\n        }\n        return idsToRemove;\n    };\n    EntityStore.prototype.findChildRefIds = function(dataId) {\n        if (!_helpers_js__WEBPACK_IMPORTED_MODULE_7__.hasOwn.call(this.refs, dataId)) {\n            var found_1 = this.refs[dataId] = Object.create(null);\n            var root = this.data[dataId];\n            if (!root) return found_1;\n            var workSet_1 = new Set([\n                root\n            ]);\n            workSet_1.forEach(function(obj) {\n                if ((0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_5__.isReference)(obj)) {\n                    found_1[obj.__ref] = true;\n                }\n                if ((0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_9__.isNonNullObject)(obj)) {\n                    Object.keys(obj).forEach(function(key) {\n                        var child = obj[key];\n                        if ((0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_9__.isNonNullObject)(child)) {\n                            workSet_1.add(child);\n                        }\n                    });\n                }\n            });\n        }\n        return this.refs[dataId];\n    };\n    EntityStore.prototype.makeCacheKey = function() {\n        return this.group.keyMaker.lookupArray(arguments);\n    };\n    return EntityStore;\n}();\n\nvar CacheGroup = function() {\n    function CacheGroup(caching, parent) {\n        if (parent === void 0) {\n            parent = null;\n        }\n        this.caching = caching;\n        this.parent = parent;\n        this.d = null;\n        this.resetCaching();\n    }\n    CacheGroup.prototype.resetCaching = function() {\n        this.d = this.caching ? (0,optimism__WEBPACK_IMPORTED_MODULE_1__.dep)() : null;\n        this.keyMaker = new _wry_trie__WEBPACK_IMPORTED_MODULE_3__.Trie(_utilities_index_js__WEBPACK_IMPORTED_MODULE_10__.canUseWeakMap);\n    };\n    CacheGroup.prototype.depend = function(dataId, storeFieldName) {\n        if (this.d) {\n            this.d(makeDepKey(dataId, storeFieldName));\n            var fieldName = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_7__.fieldNameFromStoreName)(storeFieldName);\n            if (fieldName !== storeFieldName) {\n                this.d(makeDepKey(dataId, fieldName));\n            }\n            if (this.parent) {\n                this.parent.depend(dataId, storeFieldName);\n            }\n        }\n    };\n    CacheGroup.prototype.dirty = function(dataId, storeFieldName) {\n        if (this.d) {\n            this.d.dirty(makeDepKey(dataId, storeFieldName), storeFieldName === \"__exists\" ? \"forget\" : \"setDirty\");\n        }\n    };\n    return CacheGroup;\n}();\nfunction makeDepKey(dataId, storeFieldName) {\n    return storeFieldName + \"#\" + dataId;\n}\nfunction maybeDependOnExistenceOfEntity(store, entityId) {\n    if (supportsResultCaching(store)) {\n        store.group.depend(entityId, \"__exists\");\n    }\n}\n(function(EntityStore) {\n    var Root = function(_super) {\n        (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__extends)(Root, _super);\n        function Root(_a) {\n            var policies = _a.policies, _b = _a.resultCaching, resultCaching = _b === void 0 ? true : _b, seed = _a.seed;\n            var _this = _super.call(this, policies, new CacheGroup(resultCaching)) || this;\n            _this.stump = new Stump(_this);\n            _this.storageTrie = new _wry_trie__WEBPACK_IMPORTED_MODULE_3__.Trie(_utilities_index_js__WEBPACK_IMPORTED_MODULE_10__.canUseWeakMap);\n            if (seed) _this.replace(seed);\n            return _this;\n        }\n        Root.prototype.addLayer = function(layerId, replay) {\n            return this.stump.addLayer(layerId, replay);\n        };\n        Root.prototype.removeLayer = function() {\n            return this;\n        };\n        Root.prototype.getStorage = function() {\n            return this.storageTrie.lookupArray(arguments);\n        };\n        return Root;\n    }(EntityStore);\n    EntityStore.Root = Root;\n})(EntityStore || (EntityStore = {}));\nvar Layer = function(_super) {\n    (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__extends)(Layer, _super);\n    function Layer(id, parent, replay, group) {\n        var _this = _super.call(this, parent.policies, group) || this;\n        _this.id = id;\n        _this.parent = parent;\n        _this.replay = replay;\n        _this.group = group;\n        replay(_this);\n        return _this;\n    }\n    Layer.prototype.addLayer = function(layerId, replay) {\n        return new Layer(layerId, this, replay, this.group);\n    };\n    Layer.prototype.removeLayer = function(layerId) {\n        var _this = this;\n        var parent = this.parent.removeLayer(layerId);\n        if (layerId === this.id) {\n            if (this.group.caching) {\n                Object.keys(this.data).forEach(function(dataId) {\n                    var ownStoreObject = _this.data[dataId];\n                    var parentStoreObject = parent[\"lookup\"](dataId);\n                    if (!parentStoreObject) {\n                        _this.delete(dataId);\n                    } else if (!ownStoreObject) {\n                        _this.group.dirty(dataId, \"__exists\");\n                        Object.keys(parentStoreObject).forEach(function(storeFieldName) {\n                            _this.group.dirty(dataId, storeFieldName);\n                        });\n                    } else if (ownStoreObject !== parentStoreObject) {\n                        Object.keys(ownStoreObject).forEach(function(storeFieldName) {\n                            if (!(0,_wry_equality__WEBPACK_IMPORTED_MODULE_2__.equal)(ownStoreObject[storeFieldName], parentStoreObject[storeFieldName])) {\n                                _this.group.dirty(dataId, storeFieldName);\n                            }\n                        });\n                    }\n                });\n            }\n            return parent;\n        }\n        if (parent === this.parent) return this;\n        return parent.addLayer(this.id, this.replay);\n    };\n    Layer.prototype.toObject = function() {\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_6__.__assign)({}, this.parent.toObject()), this.data);\n    };\n    Layer.prototype.findChildRefIds = function(dataId) {\n        var fromParent = this.parent.findChildRefIds(dataId);\n        return _helpers_js__WEBPACK_IMPORTED_MODULE_7__.hasOwn.call(this.data, dataId) ? (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_6__.__assign)({}, fromParent), _super.prototype.findChildRefIds.call(this, dataId)) : fromParent;\n    };\n    Layer.prototype.getStorage = function() {\n        var p = this.parent;\n        while(p.parent)p = p.parent;\n        return p.getStorage.apply(p, arguments);\n    };\n    return Layer;\n}(EntityStore);\nvar Stump = function(_super) {\n    (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__extends)(Stump, _super);\n    function Stump(root) {\n        return _super.call(this, \"EntityStore.Stump\", root, function() {}, new CacheGroup(root.group.caching, root.group)) || this;\n    }\n    Stump.prototype.removeLayer = function() {\n        return this;\n    };\n    Stump.prototype.merge = function() {\n        return this.parent.merge.apply(this.parent, arguments);\n    };\n    return Stump;\n}(Layer);\nfunction storeObjectReconciler(existingObject, incomingObject, property) {\n    var existingValue = existingObject[property];\n    var incomingValue = incomingObject[property];\n    return (0,_wry_equality__WEBPACK_IMPORTED_MODULE_2__.equal)(existingValue, incomingValue) ? existingValue : incomingValue;\n}\nfunction supportsResultCaching(store) {\n    return !!(store instanceof EntityStore && store.group.caching);\n} //# sourceMappingURL=entityStore.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/cache/inmemory/entityStore.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/cache/inmemory/helpers.js":
/*!***************************************************************!*\
  !*** ./node_modules/@apollo/client/cache/inmemory/helpers.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TypeOrFieldNameRegExp: () => (/* binding */ TypeOrFieldNameRegExp),\n/* harmony export */   defaultDataIdFromObject: () => (/* binding */ defaultDataIdFromObject),\n/* harmony export */   extractFragmentContext: () => (/* binding */ extractFragmentContext),\n/* harmony export */   fieldNameFromStoreName: () => (/* binding */ fieldNameFromStoreName),\n/* harmony export */   getTypenameFromStoreObject: () => (/* binding */ getTypenameFromStoreObject),\n/* harmony export */   hasOwn: () => (/* binding */ hasOwn),\n/* harmony export */   isArray: () => (/* reexport safe */ _utilities_index_js__WEBPACK_IMPORTED_MODULE_0__.isArray),\n/* harmony export */   isNullish: () => (/* binding */ isNullish),\n/* harmony export */   makeProcessedFieldsMerger: () => (/* binding */ makeProcessedFieldsMerger),\n/* harmony export */   normalizeConfig: () => (/* binding */ normalizeConfig),\n/* harmony export */   selectionSetMatchesResult: () => (/* binding */ selectionSetMatchesResult),\n/* harmony export */   shouldCanonizeResults: () => (/* binding */ shouldCanonizeResults),\n/* harmony export */   storeValueIsStoreObject: () => (/* binding */ storeValueIsStoreObject)\n/* harmony export */ });\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/common/arrays.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/common/compact.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/graphql/storeUtils.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/common/objects.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/graphql/directives.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/common/mergeDeep.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/graphql/fragments.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/graphql/getFromAST.js\");\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nfunction isNullish(value) {\n    return value === null || value === void 0;\n}\n\nfunction defaultDataIdFromObject(_a, context) {\n    var __typename = _a.__typename, id = _a.id, _id = _a._id;\n    if (typeof __typename === \"string\") {\n        if (context) {\n            context.keyObject = !isNullish(id) ? {\n                id: id\n            } : !isNullish(_id) ? {\n                _id: _id\n            } : void 0;\n        }\n        if (isNullish(id) && !isNullish(_id)) {\n            id = _id;\n        }\n        if (!isNullish(id)) {\n            return \"\".concat(__typename, \":\").concat(typeof id === \"number\" || typeof id === \"string\" ? id : JSON.stringify(id));\n        }\n    }\n}\nvar defaultConfig = {\n    dataIdFromObject: defaultDataIdFromObject,\n    addTypename: true,\n    resultCaching: true,\n    canonizeResults: false\n};\nfunction normalizeConfig(config) {\n    return (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_1__.compact)(defaultConfig, config);\n}\nfunction shouldCanonizeResults(config) {\n    var value = config.canonizeResults;\n    return value === void 0 ? defaultConfig.canonizeResults : value;\n}\nfunction getTypenameFromStoreObject(store, objectOrReference) {\n    return (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_2__.isReference)(objectOrReference) ? store.get(objectOrReference.__ref, \"__typename\") : objectOrReference && objectOrReference.__typename;\n}\nvar TypeOrFieldNameRegExp = /^[_a-z][_0-9a-z]*/i;\nfunction fieldNameFromStoreName(storeFieldName) {\n    var match = storeFieldName.match(TypeOrFieldNameRegExp);\n    return match ? match[0] : storeFieldName;\n}\nfunction selectionSetMatchesResult(selectionSet, result, variables) {\n    if ((0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_3__.isNonNullObject)(result)) {\n        return (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_0__.isArray)(result) ? result.every(function(item) {\n            return selectionSetMatchesResult(selectionSet, item, variables);\n        }) : selectionSet.selections.every(function(field) {\n            if ((0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_2__.isField)(field) && (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_4__.shouldInclude)(field, variables)) {\n                var key = (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_2__.resultKeyNameFromField)(field);\n                return hasOwn.call(result, key) && (!field.selectionSet || selectionSetMatchesResult(field.selectionSet, result[key], variables));\n            }\n            return true;\n        });\n    }\n    return false;\n}\nfunction storeValueIsStoreObject(value) {\n    return (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_3__.isNonNullObject)(value) && !(0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_2__.isReference)(value) && !(0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_0__.isArray)(value);\n}\nfunction makeProcessedFieldsMerger() {\n    return new _utilities_index_js__WEBPACK_IMPORTED_MODULE_5__.DeepMerger();\n}\nfunction extractFragmentContext(document, fragments) {\n    var fragmentMap = (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_6__.createFragmentMap)((0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_7__.getFragmentDefinitions)(document));\n    return {\n        fragmentMap: fragmentMap,\n        lookupFragment: function(name) {\n            var def = fragmentMap[name];\n            if (!def && fragments) {\n                def = fragments.lookup(name);\n            }\n            return def || null;\n        }\n    };\n} //# sourceMappingURL=helpers.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/cache/inmemory/helpers.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/cache/inmemory/inMemoryCache.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@apollo/client/cache/inmemory/inMemoryCache.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InMemoryCache: () => (/* binding */ InMemoryCache)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.mjs\");\n/* harmony import */ var _utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utilities/globals/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/globals/index.js\");\n/* harmony import */ var optimism__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! optimism */ \"(ssr)/./node_modules/optimism/lib/index.js\");\n/* harmony import */ var _wry_equality__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @wry/equality */ \"(ssr)/./node_modules/@wry/equality/lib/index.js\");\n/* harmony import */ var _core_cache_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../core/cache.js */ \"(ssr)/./node_modules/@apollo/client/cache/core/cache.js\");\n/* harmony import */ var _core_types_common_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../core/types/common.js */ \"(ssr)/./node_modules/@apollo/client/cache/core/types/common.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/graphql/DocumentTransform.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/graphql/transform.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/graphql/storeUtils.js\");\n/* harmony import */ var _readFromStore_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./readFromStore.js */ \"(ssr)/./node_modules/@apollo/client/cache/inmemory/readFromStore.js\");\n/* harmony import */ var _writeToStore_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./writeToStore.js */ \"(ssr)/./node_modules/@apollo/client/cache/inmemory/writeToStore.js\");\n/* harmony import */ var _entityStore_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./entityStore.js */ \"(ssr)/./node_modules/@apollo/client/cache/inmemory/entityStore.js\");\n/* harmony import */ var _reactiveVars_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./reactiveVars.js */ \"(ssr)/./node_modules/@apollo/client/cache/inmemory/reactiveVars.js\");\n/* harmony import */ var _policies_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./policies.js */ \"(ssr)/./node_modules/@apollo/client/cache/inmemory/policies.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./helpers.js */ \"(ssr)/./node_modules/@apollo/client/cache/inmemory/helpers.js\");\n/* harmony import */ var _object_canon_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./object-canon.js */ \"(ssr)/./node_modules/@apollo/client/cache/inmemory/object-canon.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar InMemoryCache = function(_super) {\n    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(InMemoryCache, _super);\n    function InMemoryCache(config) {\n        if (config === void 0) {\n            config = {};\n        }\n        var _this = _super.call(this) || this;\n        _this.watches = new Set();\n        _this.addTypenameTransform = new _utilities_index_js__WEBPACK_IMPORTED_MODULE_4__.DocumentTransform(_utilities_index_js__WEBPACK_IMPORTED_MODULE_5__.addTypenameToDocument);\n        _this.assumeImmutableResults = true;\n        _this.makeVar = _reactiveVars_js__WEBPACK_IMPORTED_MODULE_6__.makeVar;\n        _this.txCount = 0;\n        _this.config = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_7__.normalizeConfig)(config);\n        _this.addTypename = !!_this.config.addTypename;\n        _this.policies = new _policies_js__WEBPACK_IMPORTED_MODULE_8__.Policies({\n            cache: _this,\n            dataIdFromObject: _this.config.dataIdFromObject,\n            possibleTypes: _this.config.possibleTypes,\n            typePolicies: _this.config.typePolicies\n        });\n        _this.init();\n        return _this;\n    }\n    InMemoryCache.prototype.init = function() {\n        var rootStore = this.data = new _entityStore_js__WEBPACK_IMPORTED_MODULE_9__.EntityStore.Root({\n            policies: this.policies,\n            resultCaching: this.config.resultCaching\n        });\n        this.optimisticData = rootStore.stump;\n        this.resetResultCache();\n    };\n    InMemoryCache.prototype.resetResultCache = function(resetResultIdentities) {\n        var _this = this;\n        var previousReader = this.storeReader;\n        var fragments = this.config.fragments;\n        this.storeWriter = new _writeToStore_js__WEBPACK_IMPORTED_MODULE_10__.StoreWriter(this, this.storeReader = new _readFromStore_js__WEBPACK_IMPORTED_MODULE_11__.StoreReader({\n            cache: this,\n            addTypename: this.addTypename,\n            resultCacheMaxSize: this.config.resultCacheMaxSize,\n            canonizeResults: (0,_helpers_js__WEBPACK_IMPORTED_MODULE_7__.shouldCanonizeResults)(this.config),\n            canon: resetResultIdentities ? void 0 : previousReader && previousReader.canon,\n            fragments: fragments\n        }), fragments);\n        this.maybeBroadcastWatch = (0,optimism__WEBPACK_IMPORTED_MODULE_1__.wrap)(function(c, options) {\n            return _this.broadcastWatch(c, options);\n        }, {\n            max: this.config.resultCacheMaxSize,\n            makeCacheKey: function(c) {\n                var store = c.optimistic ? _this.optimisticData : _this.data;\n                if ((0,_entityStore_js__WEBPACK_IMPORTED_MODULE_9__.supportsResultCaching)(store)) {\n                    var optimistic = c.optimistic, id = c.id, variables = c.variables;\n                    return store.makeCacheKey(c.query, c.callback, (0,_object_canon_js__WEBPACK_IMPORTED_MODULE_12__.canonicalStringify)({\n                        optimistic: optimistic,\n                        id: id,\n                        variables: variables\n                    }));\n                }\n            }\n        });\n        new Set([\n            this.data.group,\n            this.optimisticData.group\n        ]).forEach(function(group) {\n            return group.resetCaching();\n        });\n    };\n    InMemoryCache.prototype.restore = function(data) {\n        this.init();\n        if (data) this.data.replace(data);\n        return this;\n    };\n    InMemoryCache.prototype.extract = function(optimistic) {\n        if (optimistic === void 0) {\n            optimistic = false;\n        }\n        return (optimistic ? this.optimisticData : this.data).extract();\n    };\n    InMemoryCache.prototype.read = function(options) {\n        var _a = options.returnPartialData, returnPartialData = _a === void 0 ? false : _a;\n        try {\n            return this.storeReader.diffQueryAgainstStore((0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({}, options), {\n                store: options.optimistic ? this.optimisticData : this.data,\n                config: this.config,\n                returnPartialData: returnPartialData\n            })).result || null;\n        } catch (e) {\n            if (e instanceof _core_types_common_js__WEBPACK_IMPORTED_MODULE_13__.MissingFieldError) {\n                return null;\n            }\n            throw e;\n        }\n    };\n    InMemoryCache.prototype.write = function(options) {\n        try {\n            ++this.txCount;\n            return this.storeWriter.writeToStore(this.data, options);\n        } finally{\n            if (!--this.txCount && options.broadcast !== false) {\n                this.broadcastWatches();\n            }\n        }\n    };\n    InMemoryCache.prototype.modify = function(options) {\n        if (_helpers_js__WEBPACK_IMPORTED_MODULE_7__.hasOwn.call(options, \"id\") && !options.id) {\n            return false;\n        }\n        var store = options.optimistic ? this.optimisticData : this.data;\n        try {\n            ++this.txCount;\n            return store.modify(options.id || \"ROOT_QUERY\", options.fields);\n        } finally{\n            if (!--this.txCount && options.broadcast !== false) {\n                this.broadcastWatches();\n            }\n        }\n    };\n    InMemoryCache.prototype.diff = function(options) {\n        return this.storeReader.diffQueryAgainstStore((0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({}, options), {\n            store: options.optimistic ? this.optimisticData : this.data,\n            rootId: options.id || \"ROOT_QUERY\",\n            config: this.config\n        }));\n    };\n    InMemoryCache.prototype.watch = function(watch) {\n        var _this = this;\n        if (!this.watches.size) {\n            (0,_reactiveVars_js__WEBPACK_IMPORTED_MODULE_6__.recallCache)(this);\n        }\n        this.watches.add(watch);\n        if (watch.immediate) {\n            this.maybeBroadcastWatch(watch);\n        }\n        return function() {\n            if (_this.watches.delete(watch) && !_this.watches.size) {\n                (0,_reactiveVars_js__WEBPACK_IMPORTED_MODULE_6__.forgetCache)(_this);\n            }\n            _this.maybeBroadcastWatch.forget(watch);\n        };\n    };\n    InMemoryCache.prototype.gc = function(options) {\n        _object_canon_js__WEBPACK_IMPORTED_MODULE_12__.canonicalStringify.reset();\n        var ids = this.optimisticData.gc();\n        if (options && !this.txCount) {\n            if (options.resetResultCache) {\n                this.resetResultCache(options.resetResultIdentities);\n            } else if (options.resetResultIdentities) {\n                this.storeReader.resetCanon();\n            }\n        }\n        return ids;\n    };\n    InMemoryCache.prototype.retain = function(rootId, optimistic) {\n        return (optimistic ? this.optimisticData : this.data).retain(rootId);\n    };\n    InMemoryCache.prototype.release = function(rootId, optimistic) {\n        return (optimistic ? this.optimisticData : this.data).release(rootId);\n    };\n    InMemoryCache.prototype.identify = function(object) {\n        if ((0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_14__.isReference)(object)) return object.__ref;\n        try {\n            return this.policies.identify(object)[0];\n        } catch (e) {\n            globalThis.__DEV__ !== false && _utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.invariant.warn(e);\n        }\n    };\n    InMemoryCache.prototype.evict = function(options) {\n        if (!options.id) {\n            if (_helpers_js__WEBPACK_IMPORTED_MODULE_7__.hasOwn.call(options, \"id\")) {\n                return false;\n            }\n            options = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({}, options), {\n                id: \"ROOT_QUERY\"\n            });\n        }\n        try {\n            ++this.txCount;\n            return this.optimisticData.evict(options, this.data);\n        } finally{\n            if (!--this.txCount && options.broadcast !== false) {\n                this.broadcastWatches();\n            }\n        }\n    };\n    InMemoryCache.prototype.reset = function(options) {\n        var _this = this;\n        this.init();\n        _object_canon_js__WEBPACK_IMPORTED_MODULE_12__.canonicalStringify.reset();\n        if (options && options.discardWatches) {\n            this.watches.forEach(function(watch) {\n                return _this.maybeBroadcastWatch.forget(watch);\n            });\n            this.watches.clear();\n            (0,_reactiveVars_js__WEBPACK_IMPORTED_MODULE_6__.forgetCache)(this);\n        } else {\n            this.broadcastWatches();\n        }\n        return Promise.resolve();\n    };\n    InMemoryCache.prototype.removeOptimistic = function(idToRemove) {\n        var newOptimisticData = this.optimisticData.removeLayer(idToRemove);\n        if (newOptimisticData !== this.optimisticData) {\n            this.optimisticData = newOptimisticData;\n            this.broadcastWatches();\n        }\n    };\n    InMemoryCache.prototype.batch = function(options) {\n        var _this = this;\n        var update = options.update, _a = options.optimistic, optimistic = _a === void 0 ? true : _a, removeOptimistic = options.removeOptimistic, onWatchUpdated = options.onWatchUpdated;\n        var updateResult;\n        var perform = function(layer) {\n            var _a = _this, data = _a.data, optimisticData = _a.optimisticData;\n            ++_this.txCount;\n            if (layer) {\n                _this.data = _this.optimisticData = layer;\n            }\n            try {\n                return updateResult = update(_this);\n            } finally{\n                --_this.txCount;\n                _this.data = data;\n                _this.optimisticData = optimisticData;\n            }\n        };\n        var alreadyDirty = new Set();\n        if (onWatchUpdated && !this.txCount) {\n            this.broadcastWatches((0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({}, options), {\n                onWatchUpdated: function(watch) {\n                    alreadyDirty.add(watch);\n                    return false;\n                }\n            }));\n        }\n        if (typeof optimistic === \"string\") {\n            this.optimisticData = this.optimisticData.addLayer(optimistic, perform);\n        } else if (optimistic === false) {\n            perform(this.data);\n        } else {\n            perform();\n        }\n        if (typeof removeOptimistic === \"string\") {\n            this.optimisticData = this.optimisticData.removeLayer(removeOptimistic);\n        }\n        if (onWatchUpdated && alreadyDirty.size) {\n            this.broadcastWatches((0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({}, options), {\n                onWatchUpdated: function(watch, diff) {\n                    var result = onWatchUpdated.call(this, watch, diff);\n                    if (result !== false) {\n                        alreadyDirty.delete(watch);\n                    }\n                    return result;\n                }\n            }));\n            if (alreadyDirty.size) {\n                alreadyDirty.forEach(function(watch) {\n                    return _this.maybeBroadcastWatch.dirty(watch);\n                });\n            }\n        } else {\n            this.broadcastWatches(options);\n        }\n        return updateResult;\n    };\n    InMemoryCache.prototype.performTransaction = function(update, optimisticId) {\n        return this.batch({\n            update: update,\n            optimistic: optimisticId || optimisticId !== null\n        });\n    };\n    InMemoryCache.prototype.transformDocument = function(document) {\n        return this.addTypenameToDocument(this.addFragmentsToDocument(document));\n    };\n    InMemoryCache.prototype.broadcastWatches = function(options) {\n        var _this = this;\n        if (!this.txCount) {\n            this.watches.forEach(function(c) {\n                return _this.maybeBroadcastWatch(c, options);\n            });\n        }\n    };\n    InMemoryCache.prototype.addFragmentsToDocument = function(document) {\n        var fragments = this.config.fragments;\n        return fragments ? fragments.transform(document) : document;\n    };\n    InMemoryCache.prototype.addTypenameToDocument = function(document) {\n        if (this.addTypename) {\n            return this.addTypenameTransform.transformDocument(document);\n        }\n        return document;\n    };\n    InMemoryCache.prototype.broadcastWatch = function(c, options) {\n        var lastDiff = c.lastDiff;\n        var diff = this.diff(c);\n        if (options) {\n            if (c.optimistic && typeof options.optimistic === \"string\") {\n                diff.fromOptimisticTransaction = true;\n            }\n            if (options.onWatchUpdated && options.onWatchUpdated.call(this, c, diff, lastDiff) === false) {\n                return;\n            }\n        }\n        if (!lastDiff || !(0,_wry_equality__WEBPACK_IMPORTED_MODULE_2__.equal)(lastDiff.result, diff.result)) {\n            c.callback(c.lastDiff = diff, lastDiff);\n        }\n    };\n    return InMemoryCache;\n}(_core_cache_js__WEBPACK_IMPORTED_MODULE_15__.ApolloCache);\n //# sourceMappingURL=inMemoryCache.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/cache/inmemory/inMemoryCache.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/cache/inmemory/key-extractor.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@apollo/client/cache/inmemory/key-extractor.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   collectSpecifierPaths: () => (/* binding */ collectSpecifierPaths),\n/* harmony export */   extractKeyPath: () => (/* binding */ extractKeyPath),\n/* harmony export */   getSpecifierPaths: () => (/* binding */ getSpecifierPaths),\n/* harmony export */   keyArgsFnFromSpecifier: () => (/* binding */ keyArgsFnFromSpecifier),\n/* harmony export */   keyFieldsFnFromSpecifier: () => (/* binding */ keyFieldsFnFromSpecifier)\n/* harmony export */ });\n/* harmony import */ var _utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utilities/globals/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/globals/index.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./helpers.js */ \"(ssr)/./node_modules/@apollo/client/utilities/common/arrays.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/graphql/storeUtils.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/common/mergeDeep.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/common/objects.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helpers.js */ \"(ssr)/./node_modules/@apollo/client/cache/inmemory/helpers.js\");\n\n\n\nvar specifierInfoCache = Object.create(null);\nfunction lookupSpecifierInfo(spec) {\n    var cacheKey = JSON.stringify(spec);\n    return specifierInfoCache[cacheKey] || (specifierInfoCache[cacheKey] = Object.create(null));\n}\nfunction keyFieldsFnFromSpecifier(specifier) {\n    var info = lookupSpecifierInfo(specifier);\n    return info.keyFieldsFn || (info.keyFieldsFn = function(object, context) {\n        var extract = function(from, key) {\n            return context.readField(key, from);\n        };\n        var keyObject = context.keyObject = collectSpecifierPaths(specifier, function(schemaKeyPath) {\n            var extracted = extractKeyPath(context.storeObject, schemaKeyPath, extract);\n            if (extracted === void 0 && object !== context.storeObject && _helpers_js__WEBPACK_IMPORTED_MODULE_1__.hasOwn.call(object, schemaKeyPath[0])) {\n                extracted = extractKeyPath(object, schemaKeyPath, extractKey);\n            }\n            (0,_utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.invariant)(extracted !== void 0, 4, schemaKeyPath.join(\".\"), object);\n            return extracted;\n        });\n        return \"\".concat(context.typename, \":\").concat(JSON.stringify(keyObject));\n    });\n}\nfunction keyArgsFnFromSpecifier(specifier) {\n    var info = lookupSpecifierInfo(specifier);\n    return info.keyArgsFn || (info.keyArgsFn = function(args, _a) {\n        var field = _a.field, variables = _a.variables, fieldName = _a.fieldName;\n        var collected = collectSpecifierPaths(specifier, function(keyPath) {\n            var firstKey = keyPath[0];\n            var firstChar = firstKey.charAt(0);\n            if (firstChar === \"@\") {\n                if (field && (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_2__.isNonEmptyArray)(field.directives)) {\n                    var directiveName_1 = firstKey.slice(1);\n                    var d = field.directives.find(function(d) {\n                        return d.name.value === directiveName_1;\n                    });\n                    var directiveArgs = d && (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_3__.argumentsObjectFromField)(d, variables);\n                    return directiveArgs && extractKeyPath(directiveArgs, keyPath.slice(1));\n                }\n                return;\n            }\n            if (firstChar === \"$\") {\n                var variableName = firstKey.slice(1);\n                if (variables && _helpers_js__WEBPACK_IMPORTED_MODULE_1__.hasOwn.call(variables, variableName)) {\n                    var varKeyPath = keyPath.slice(0);\n                    varKeyPath[0] = variableName;\n                    return extractKeyPath(variables, varKeyPath);\n                }\n                return;\n            }\n            if (args) {\n                return extractKeyPath(args, keyPath);\n            }\n        });\n        var suffix = JSON.stringify(collected);\n        if (args || suffix !== \"{}\") {\n            fieldName += \":\" + suffix;\n        }\n        return fieldName;\n    });\n}\nfunction collectSpecifierPaths(specifier, extractor) {\n    var merger = new _utilities_index_js__WEBPACK_IMPORTED_MODULE_4__.DeepMerger();\n    return getSpecifierPaths(specifier).reduce(function(collected, path) {\n        var _a;\n        var toMerge = extractor(path);\n        if (toMerge !== void 0) {\n            for(var i = path.length - 1; i >= 0; --i){\n                toMerge = (_a = {}, _a[path[i]] = toMerge, _a);\n            }\n            collected = merger.merge(collected, toMerge);\n        }\n        return collected;\n    }, Object.create(null));\n}\nfunction getSpecifierPaths(spec) {\n    var info = lookupSpecifierInfo(spec);\n    if (!info.paths) {\n        var paths_1 = info.paths = [];\n        var currentPath_1 = [];\n        spec.forEach(function(s, i) {\n            if ((0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_2__.isArray)(s)) {\n                getSpecifierPaths(s).forEach(function(p) {\n                    return paths_1.push(currentPath_1.concat(p));\n                });\n                currentPath_1.length = 0;\n            } else {\n                currentPath_1.push(s);\n                if (!(0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_2__.isArray)(spec[i + 1])) {\n                    paths_1.push(currentPath_1.slice(0));\n                    currentPath_1.length = 0;\n                }\n            }\n        });\n    }\n    return info.paths;\n}\nfunction extractKey(object, key) {\n    return object[key];\n}\nfunction extractKeyPath(object, path, extract) {\n    extract = extract || extractKey;\n    return normalize(path.reduce(function reducer(obj, key) {\n        return (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_2__.isArray)(obj) ? obj.map(function(child) {\n            return reducer(child, key);\n        }) : obj && extract(obj, key);\n    }, object));\n}\nfunction normalize(value) {\n    if ((0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_5__.isNonNullObject)(value)) {\n        if ((0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_2__.isArray)(value)) {\n            return value.map(normalize);\n        }\n        return collectSpecifierPaths(Object.keys(value).sort(), function(path) {\n            return extractKeyPath(value, path);\n        });\n    }\n    return value;\n} //# sourceMappingURL=key-extractor.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/cache/inmemory/key-extractor.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/cache/inmemory/object-canon.js":
/*!********************************************************************!*\
  !*** ./node_modules/@apollo/client/cache/inmemory/object-canon.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ObjectCanon: () => (/* binding */ ObjectCanon),\n/* harmony export */   canonicalStringify: () => (/* binding */ canonicalStringify)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.mjs\");\n/* harmony import */ var _wry_trie__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wry/trie */ \"(ssr)/./node_modules/@wry/trie/lib/index.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/common/objects.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/common/canUse.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./helpers.js */ \"(ssr)/./node_modules/@apollo/client/utilities/common/arrays.js\");\n\n\n\n\nfunction shallowCopy(value) {\n    if ((0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_1__.isNonNullObject)(value)) {\n        return (0,_helpers_js__WEBPACK_IMPORTED_MODULE_2__.isArray)(value) ? value.slice(0) : (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({\n            __proto__: Object.getPrototypeOf(value)\n        }, value);\n    }\n    return value;\n}\nvar ObjectCanon = function() {\n    function ObjectCanon() {\n        this.known = new (_utilities_index_js__WEBPACK_IMPORTED_MODULE_4__.canUseWeakSet ? WeakSet : Set)();\n        this.pool = new _wry_trie__WEBPACK_IMPORTED_MODULE_0__.Trie(_utilities_index_js__WEBPACK_IMPORTED_MODULE_4__.canUseWeakMap);\n        this.passes = new WeakMap();\n        this.keysByJSON = new Map();\n        this.empty = this.admit({});\n    }\n    ObjectCanon.prototype.isKnown = function(value) {\n        return (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_1__.isNonNullObject)(value) && this.known.has(value);\n    };\n    ObjectCanon.prototype.pass = function(value) {\n        if ((0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_1__.isNonNullObject)(value)) {\n            var copy = shallowCopy(value);\n            this.passes.set(copy, value);\n            return copy;\n        }\n        return value;\n    };\n    ObjectCanon.prototype.admit = function(value) {\n        var _this = this;\n        if ((0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_1__.isNonNullObject)(value)) {\n            var original = this.passes.get(value);\n            if (original) return original;\n            var proto = Object.getPrototypeOf(value);\n            switch(proto){\n                case Array.prototype:\n                    {\n                        if (this.known.has(value)) return value;\n                        var array = value.map(this.admit, this);\n                        var node = this.pool.lookupArray(array);\n                        if (!node.array) {\n                            this.known.add(node.array = array);\n                            if (globalThis.__DEV__ !== false) {\n                                Object.freeze(array);\n                            }\n                        }\n                        return node.array;\n                    }\n                case null:\n                case Object.prototype:\n                    {\n                        if (this.known.has(value)) return value;\n                        var proto_1 = Object.getPrototypeOf(value);\n                        var array_1 = [\n                            proto_1\n                        ];\n                        var keys = this.sortedKeys(value);\n                        array_1.push(keys.json);\n                        var firstValueIndex_1 = array_1.length;\n                        keys.sorted.forEach(function(key) {\n                            array_1.push(_this.admit(value[key]));\n                        });\n                        var node = this.pool.lookupArray(array_1);\n                        if (!node.object) {\n                            var obj_1 = node.object = Object.create(proto_1);\n                            this.known.add(obj_1);\n                            keys.sorted.forEach(function(key, i) {\n                                obj_1[key] = array_1[firstValueIndex_1 + i];\n                            });\n                            if (globalThis.__DEV__ !== false) {\n                                Object.freeze(obj_1);\n                            }\n                        }\n                        return node.object;\n                    }\n            }\n        }\n        return value;\n    };\n    ObjectCanon.prototype.sortedKeys = function(obj) {\n        var keys = Object.keys(obj);\n        var node = this.pool.lookupArray(keys);\n        if (!node.keys) {\n            keys.sort();\n            var json = JSON.stringify(keys);\n            if (!(node.keys = this.keysByJSON.get(json))) {\n                this.keysByJSON.set(json, node.keys = {\n                    sorted: keys,\n                    json: json\n                });\n            }\n        }\n        return node.keys;\n    };\n    return ObjectCanon;\n}();\n\nvar canonicalStringify = Object.assign(function(value) {\n    if ((0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_1__.isNonNullObject)(value)) {\n        if (stringifyCanon === void 0) {\n            resetCanonicalStringify();\n        }\n        var canonical = stringifyCanon.admit(value);\n        var json = stringifyCache.get(canonical);\n        if (json === void 0) {\n            stringifyCache.set(canonical, json = JSON.stringify(canonical));\n        }\n        return json;\n    }\n    return JSON.stringify(value);\n}, {\n    reset: resetCanonicalStringify\n});\nvar stringifyCanon;\nvar stringifyCache;\nfunction resetCanonicalStringify() {\n    stringifyCanon = new ObjectCanon();\n    stringifyCache = new (_utilities_index_js__WEBPACK_IMPORTED_MODULE_4__.canUseWeakMap ? WeakMap : Map)();\n} //# sourceMappingURL=object-canon.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/cache/inmemory/object-canon.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/cache/inmemory/policies.js":
/*!****************************************************************!*\
  !*** ./node_modules/@apollo/client/cache/inmemory/policies.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Policies: () => (/* binding */ Policies),\n/* harmony export */   normalizeReadFieldOptions: () => (/* binding */ normalizeReadFieldOptions)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.mjs\");\n/* harmony import */ var _utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utilities/globals/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/globals/index.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/graphql/storeUtils.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/common/stringifyForDisplay.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/common/objects.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./helpers.js */ \"(ssr)/./node_modules/@apollo/client/cache/inmemory/helpers.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./helpers.js */ \"(ssr)/./node_modules/@apollo/client/utilities/common/arrays.js\");\n/* harmony import */ var _reactiveVars_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./reactiveVars.js */ \"(ssr)/./node_modules/@apollo/client/cache/inmemory/reactiveVars.js\");\n/* harmony import */ var _object_canon_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./object-canon.js */ \"(ssr)/./node_modules/@apollo/client/cache/inmemory/object-canon.js\");\n/* harmony import */ var _key_extractor_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./key-extractor.js */ \"(ssr)/./node_modules/@apollo/client/cache/inmemory/key-extractor.js\");\n\n\n\n\n\n\n\n_utilities_index_js__WEBPACK_IMPORTED_MODULE_1__.getStoreKeyName.setStringify(_object_canon_js__WEBPACK_IMPORTED_MODULE_2__.canonicalStringify);\nfunction argsFromFieldSpecifier(spec) {\n    return spec.args !== void 0 ? spec.args : spec.field ? (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_1__.argumentsObjectFromField)(spec.field, spec.variables) : null;\n}\nvar nullKeyFieldsFn = function() {\n    return void 0;\n};\nvar simpleKeyArgsFn = function(_args, context) {\n    return context.fieldName;\n};\nvar mergeTrueFn = function(existing, incoming, _a) {\n    var mergeObjects = _a.mergeObjects;\n    return mergeObjects(existing, incoming);\n};\nvar mergeFalseFn = function(_, incoming) {\n    return incoming;\n};\nvar Policies = function() {\n    function Policies(config) {\n        this.config = config;\n        this.typePolicies = Object.create(null);\n        this.toBeAdded = Object.create(null);\n        this.supertypeMap = new Map();\n        this.fuzzySubtypes = new Map();\n        this.rootIdsByTypename = Object.create(null);\n        this.rootTypenamesById = Object.create(null);\n        this.usingPossibleTypes = false;\n        this.config = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({\n            dataIdFromObject: _helpers_js__WEBPACK_IMPORTED_MODULE_4__.defaultDataIdFromObject\n        }, config);\n        this.cache = this.config.cache;\n        this.setRootTypename(\"Query\");\n        this.setRootTypename(\"Mutation\");\n        this.setRootTypename(\"Subscription\");\n        if (config.possibleTypes) {\n            this.addPossibleTypes(config.possibleTypes);\n        }\n        if (config.typePolicies) {\n            this.addTypePolicies(config.typePolicies);\n        }\n    }\n    Policies.prototype.identify = function(object, partialContext) {\n        var _a;\n        var policies = this;\n        var typename = partialContext && (partialContext.typename || ((_a = partialContext.storeObject) === null || _a === void 0 ? void 0 : _a.__typename)) || object.__typename;\n        if (typename === this.rootTypenamesById.ROOT_QUERY) {\n            return [\n                \"ROOT_QUERY\"\n            ];\n        }\n        var storeObject = partialContext && partialContext.storeObject || object;\n        var context = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({}, partialContext), {\n            typename: typename,\n            storeObject: storeObject,\n            readField: partialContext && partialContext.readField || function() {\n                var options = normalizeReadFieldOptions(arguments, storeObject);\n                return policies.readField(options, {\n                    store: policies.cache[\"data\"],\n                    variables: options.variables\n                });\n            }\n        });\n        var id;\n        var policy = typename && this.getTypePolicy(typename);\n        var keyFn = policy && policy.keyFn || this.config.dataIdFromObject;\n        while(keyFn){\n            var specifierOrId = keyFn((0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({}, object), storeObject), context);\n            if ((0,_helpers_js__WEBPACK_IMPORTED_MODULE_5__.isArray)(specifierOrId)) {\n                keyFn = (0,_key_extractor_js__WEBPACK_IMPORTED_MODULE_6__.keyFieldsFnFromSpecifier)(specifierOrId);\n            } else {\n                id = specifierOrId;\n                break;\n            }\n        }\n        id = id ? String(id) : void 0;\n        return context.keyObject ? [\n            id,\n            context.keyObject\n        ] : [\n            id\n        ];\n    };\n    Policies.prototype.addTypePolicies = function(typePolicies) {\n        var _this = this;\n        Object.keys(typePolicies).forEach(function(typename) {\n            var _a = typePolicies[typename], queryType = _a.queryType, mutationType = _a.mutationType, subscriptionType = _a.subscriptionType, incoming = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__rest)(_a, [\n                \"queryType\",\n                \"mutationType\",\n                \"subscriptionType\"\n            ]);\n            if (queryType) _this.setRootTypename(\"Query\", typename);\n            if (mutationType) _this.setRootTypename(\"Mutation\", typename);\n            if (subscriptionType) _this.setRootTypename(\"Subscription\", typename);\n            if (_helpers_js__WEBPACK_IMPORTED_MODULE_4__.hasOwn.call(_this.toBeAdded, typename)) {\n                _this.toBeAdded[typename].push(incoming);\n            } else {\n                _this.toBeAdded[typename] = [\n                    incoming\n                ];\n            }\n        });\n    };\n    Policies.prototype.updateTypePolicy = function(typename, incoming) {\n        var _this = this;\n        var existing = this.getTypePolicy(typename);\n        var keyFields = incoming.keyFields, fields = incoming.fields;\n        function setMerge(existing, merge) {\n            existing.merge = typeof merge === \"function\" ? merge : merge === true ? mergeTrueFn : merge === false ? mergeFalseFn : existing.merge;\n        }\n        setMerge(existing, incoming.merge);\n        existing.keyFn = keyFields === false ? nullKeyFieldsFn : (0,_helpers_js__WEBPACK_IMPORTED_MODULE_5__.isArray)(keyFields) ? (0,_key_extractor_js__WEBPACK_IMPORTED_MODULE_6__.keyFieldsFnFromSpecifier)(keyFields) : typeof keyFields === \"function\" ? keyFields : existing.keyFn;\n        if (fields) {\n            Object.keys(fields).forEach(function(fieldName) {\n                var existing = _this.getFieldPolicy(typename, fieldName, true);\n                var incoming = fields[fieldName];\n                if (typeof incoming === \"function\") {\n                    existing.read = incoming;\n                } else {\n                    var keyArgs = incoming.keyArgs, read = incoming.read, merge = incoming.merge;\n                    existing.keyFn = keyArgs === false ? simpleKeyArgsFn : (0,_helpers_js__WEBPACK_IMPORTED_MODULE_5__.isArray)(keyArgs) ? (0,_key_extractor_js__WEBPACK_IMPORTED_MODULE_6__.keyArgsFnFromSpecifier)(keyArgs) : typeof keyArgs === \"function\" ? keyArgs : existing.keyFn;\n                    if (typeof read === \"function\") {\n                        existing.read = read;\n                    }\n                    setMerge(existing, merge);\n                }\n                if (existing.read && existing.merge) {\n                    existing.keyFn = existing.keyFn || simpleKeyArgsFn;\n                }\n            });\n        }\n    };\n    Policies.prototype.setRootTypename = function(which, typename) {\n        if (typename === void 0) {\n            typename = which;\n        }\n        var rootId = \"ROOT_\" + which.toUpperCase();\n        var old = this.rootTypenamesById[rootId];\n        if (typename !== old) {\n            (0,_utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.invariant)(!old || old === which, 5, which);\n            if (old) delete this.rootIdsByTypename[old];\n            this.rootIdsByTypename[typename] = rootId;\n            this.rootTypenamesById[rootId] = typename;\n        }\n    };\n    Policies.prototype.addPossibleTypes = function(possibleTypes) {\n        var _this = this;\n        this.usingPossibleTypes = true;\n        Object.keys(possibleTypes).forEach(function(supertype) {\n            _this.getSupertypeSet(supertype, true);\n            possibleTypes[supertype].forEach(function(subtype) {\n                _this.getSupertypeSet(subtype, true).add(supertype);\n                var match = subtype.match(_helpers_js__WEBPACK_IMPORTED_MODULE_4__.TypeOrFieldNameRegExp);\n                if (!match || match[0] !== subtype) {\n                    _this.fuzzySubtypes.set(subtype, new RegExp(subtype));\n                }\n            });\n        });\n    };\n    Policies.prototype.getTypePolicy = function(typename) {\n        var _this = this;\n        if (!_helpers_js__WEBPACK_IMPORTED_MODULE_4__.hasOwn.call(this.typePolicies, typename)) {\n            var policy_1 = this.typePolicies[typename] = Object.create(null);\n            policy_1.fields = Object.create(null);\n            var supertypes_1 = this.supertypeMap.get(typename);\n            if (!supertypes_1 && this.fuzzySubtypes.size) {\n                supertypes_1 = this.getSupertypeSet(typename, true);\n                this.fuzzySubtypes.forEach(function(regExp, fuzzy) {\n                    if (regExp.test(typename)) {\n                        var fuzzySupertypes = _this.supertypeMap.get(fuzzy);\n                        if (fuzzySupertypes) {\n                            fuzzySupertypes.forEach(function(supertype) {\n                                return supertypes_1.add(supertype);\n                            });\n                        }\n                    }\n                });\n            }\n            if (supertypes_1 && supertypes_1.size) {\n                supertypes_1.forEach(function(supertype) {\n                    var _a = _this.getTypePolicy(supertype), fields = _a.fields, rest = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__rest)(_a, [\n                        \"fields\"\n                    ]);\n                    Object.assign(policy_1, rest);\n                    Object.assign(policy_1.fields, fields);\n                });\n            }\n        }\n        var inbox = this.toBeAdded[typename];\n        if (inbox && inbox.length) {\n            inbox.splice(0).forEach(function(policy) {\n                _this.updateTypePolicy(typename, policy);\n            });\n        }\n        return this.typePolicies[typename];\n    };\n    Policies.prototype.getFieldPolicy = function(typename, fieldName, createIfMissing) {\n        if (typename) {\n            var fieldPolicies = this.getTypePolicy(typename).fields;\n            return fieldPolicies[fieldName] || createIfMissing && (fieldPolicies[fieldName] = Object.create(null));\n        }\n    };\n    Policies.prototype.getSupertypeSet = function(subtype, createIfMissing) {\n        var supertypeSet = this.supertypeMap.get(subtype);\n        if (!supertypeSet && createIfMissing) {\n            this.supertypeMap.set(subtype, supertypeSet = new Set());\n        }\n        return supertypeSet;\n    };\n    Policies.prototype.fragmentMatches = function(fragment, typename, result, variables) {\n        var _this = this;\n        if (!fragment.typeCondition) return true;\n        if (!typename) return false;\n        var supertype = fragment.typeCondition.name.value;\n        if (typename === supertype) return true;\n        if (this.usingPossibleTypes && this.supertypeMap.has(supertype)) {\n            var typenameSupertypeSet = this.getSupertypeSet(typename, true);\n            var workQueue_1 = [\n                typenameSupertypeSet\n            ];\n            var maybeEnqueue_1 = function(subtype) {\n                var supertypeSet = _this.getSupertypeSet(subtype, false);\n                if (supertypeSet && supertypeSet.size && workQueue_1.indexOf(supertypeSet) < 0) {\n                    workQueue_1.push(supertypeSet);\n                }\n            };\n            var needToCheckFuzzySubtypes = !!(result && this.fuzzySubtypes.size);\n            var checkingFuzzySubtypes = false;\n            for(var i = 0; i < workQueue_1.length; ++i){\n                var supertypeSet = workQueue_1[i];\n                if (supertypeSet.has(supertype)) {\n                    if (!typenameSupertypeSet.has(supertype)) {\n                        if (checkingFuzzySubtypes) {\n                            globalThis.__DEV__ !== false && _utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.invariant.warn(6, typename, supertype);\n                        }\n                        typenameSupertypeSet.add(supertype);\n                    }\n                    return true;\n                }\n                supertypeSet.forEach(maybeEnqueue_1);\n                if (needToCheckFuzzySubtypes && i === workQueue_1.length - 1 && (0,_helpers_js__WEBPACK_IMPORTED_MODULE_4__.selectionSetMatchesResult)(fragment.selectionSet, result, variables)) {\n                    needToCheckFuzzySubtypes = false;\n                    checkingFuzzySubtypes = true;\n                    this.fuzzySubtypes.forEach(function(regExp, fuzzyString) {\n                        var match = typename.match(regExp);\n                        if (match && match[0] === typename) {\n                            maybeEnqueue_1(fuzzyString);\n                        }\n                    });\n                }\n            }\n        }\n        return false;\n    };\n    Policies.prototype.hasKeyArgs = function(typename, fieldName) {\n        var policy = this.getFieldPolicy(typename, fieldName, false);\n        return !!(policy && policy.keyFn);\n    };\n    Policies.prototype.getStoreFieldName = function(fieldSpec) {\n        var typename = fieldSpec.typename, fieldName = fieldSpec.fieldName;\n        var policy = this.getFieldPolicy(typename, fieldName, false);\n        var storeFieldName;\n        var keyFn = policy && policy.keyFn;\n        if (keyFn && typename) {\n            var context = {\n                typename: typename,\n                fieldName: fieldName,\n                field: fieldSpec.field || null,\n                variables: fieldSpec.variables\n            };\n            var args = argsFromFieldSpecifier(fieldSpec);\n            while(keyFn){\n                var specifierOrString = keyFn(args, context);\n                if ((0,_helpers_js__WEBPACK_IMPORTED_MODULE_5__.isArray)(specifierOrString)) {\n                    keyFn = (0,_key_extractor_js__WEBPACK_IMPORTED_MODULE_6__.keyArgsFnFromSpecifier)(specifierOrString);\n                } else {\n                    storeFieldName = specifierOrString || fieldName;\n                    break;\n                }\n            }\n        }\n        if (storeFieldName === void 0) {\n            storeFieldName = fieldSpec.field ? (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_1__.storeKeyNameFromField)(fieldSpec.field, fieldSpec.variables) : (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_1__.getStoreKeyName)(fieldName, argsFromFieldSpecifier(fieldSpec));\n        }\n        if (storeFieldName === false) {\n            return fieldName;\n        }\n        return fieldName === (0,_helpers_js__WEBPACK_IMPORTED_MODULE_4__.fieldNameFromStoreName)(storeFieldName) ? storeFieldName : fieldName + \":\" + storeFieldName;\n    };\n    Policies.prototype.readField = function(options, context) {\n        var objectOrReference = options.from;\n        if (!objectOrReference) return;\n        var nameOrField = options.field || options.fieldName;\n        if (!nameOrField) return;\n        if (options.typename === void 0) {\n            var typename = context.store.getFieldValue(objectOrReference, \"__typename\");\n            if (typename) options.typename = typename;\n        }\n        var storeFieldName = this.getStoreFieldName(options);\n        var fieldName = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_4__.fieldNameFromStoreName)(storeFieldName);\n        var existing = context.store.getFieldValue(objectOrReference, storeFieldName);\n        var policy = this.getFieldPolicy(options.typename, fieldName, false);\n        var read = policy && policy.read;\n        if (read) {\n            var readOptions = makeFieldFunctionOptions(this, objectOrReference, options, context, context.store.getStorage((0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_1__.isReference)(objectOrReference) ? objectOrReference.__ref : objectOrReference, storeFieldName));\n            return _reactiveVars_js__WEBPACK_IMPORTED_MODULE_7__.cacheSlot.withValue(this.cache, read, [\n                existing,\n                readOptions\n            ]);\n        }\n        return existing;\n    };\n    Policies.prototype.getReadFunction = function(typename, fieldName) {\n        var policy = this.getFieldPolicy(typename, fieldName, false);\n        return policy && policy.read;\n    };\n    Policies.prototype.getMergeFunction = function(parentTypename, fieldName, childTypename) {\n        var policy = this.getFieldPolicy(parentTypename, fieldName, false);\n        var merge = policy && policy.merge;\n        if (!merge && childTypename) {\n            policy = this.getTypePolicy(childTypename);\n            merge = policy && policy.merge;\n        }\n        return merge;\n    };\n    Policies.prototype.runMergeFunction = function(existing, incoming, _a, context, storage) {\n        var field = _a.field, typename = _a.typename, merge = _a.merge;\n        if (merge === mergeTrueFn) {\n            return makeMergeObjectsFunction(context.store)(existing, incoming);\n        }\n        if (merge === mergeFalseFn) {\n            return incoming;\n        }\n        if (context.overwrite) {\n            existing = void 0;\n        }\n        return merge(existing, incoming, makeFieldFunctionOptions(this, void 0, {\n            typename: typename,\n            fieldName: field.name.value,\n            field: field,\n            variables: context.variables\n        }, context, storage || Object.create(null)));\n    };\n    return Policies;\n}();\n\nfunction makeFieldFunctionOptions(policies, objectOrReference, fieldSpec, context, storage) {\n    var storeFieldName = policies.getStoreFieldName(fieldSpec);\n    var fieldName = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_4__.fieldNameFromStoreName)(storeFieldName);\n    var variables = fieldSpec.variables || context.variables;\n    var _a = context.store, toReference = _a.toReference, canRead = _a.canRead;\n    return {\n        args: argsFromFieldSpecifier(fieldSpec),\n        field: fieldSpec.field || null,\n        fieldName: fieldName,\n        storeFieldName: storeFieldName,\n        variables: variables,\n        isReference: _utilities_index_js__WEBPACK_IMPORTED_MODULE_1__.isReference,\n        toReference: toReference,\n        storage: storage,\n        cache: policies.cache,\n        canRead: canRead,\n        readField: function() {\n            return policies.readField(normalizeReadFieldOptions(arguments, objectOrReference, variables), context);\n        },\n        mergeObjects: makeMergeObjectsFunction(context.store)\n    };\n}\nfunction normalizeReadFieldOptions(readFieldArgs, objectOrReference, variables) {\n    var fieldNameOrOptions = readFieldArgs[0], from = readFieldArgs[1], argc = readFieldArgs.length;\n    var options;\n    if (typeof fieldNameOrOptions === \"string\") {\n        options = {\n            fieldName: fieldNameOrOptions,\n            from: argc > 1 ? from : objectOrReference\n        };\n    } else {\n        options = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({}, fieldNameOrOptions);\n        if (!_helpers_js__WEBPACK_IMPORTED_MODULE_4__.hasOwn.call(options, \"from\")) {\n            options.from = objectOrReference;\n        }\n    }\n    if (globalThis.__DEV__ !== false && options.from === void 0) {\n        globalThis.__DEV__ !== false && _utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.invariant.warn(7, (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_8__.stringifyForDisplay)(Array.from(readFieldArgs)));\n    }\n    if (void 0 === options.variables) {\n        options.variables = variables;\n    }\n    return options;\n}\nfunction makeMergeObjectsFunction(store) {\n    return function mergeObjects(existing, incoming) {\n        if ((0,_helpers_js__WEBPACK_IMPORTED_MODULE_5__.isArray)(existing) || (0,_helpers_js__WEBPACK_IMPORTED_MODULE_5__.isArray)(incoming)) {\n            throw (0,_utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.newInvariantError)(8);\n        }\n        if ((0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_9__.isNonNullObject)(existing) && (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_9__.isNonNullObject)(incoming)) {\n            var eType = store.getFieldValue(existing, \"__typename\");\n            var iType = store.getFieldValue(incoming, \"__typename\");\n            var typesDiffer = eType && iType && eType !== iType;\n            if (typesDiffer) {\n                return incoming;\n            }\n            if ((0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_1__.isReference)(existing) && (0,_helpers_js__WEBPACK_IMPORTED_MODULE_4__.storeValueIsStoreObject)(incoming)) {\n                store.merge(existing.__ref, incoming);\n                return existing;\n            }\n            if ((0,_helpers_js__WEBPACK_IMPORTED_MODULE_4__.storeValueIsStoreObject)(existing) && (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_1__.isReference)(incoming)) {\n                store.merge(existing, incoming.__ref);\n                return incoming;\n            }\n            if ((0,_helpers_js__WEBPACK_IMPORTED_MODULE_4__.storeValueIsStoreObject)(existing) && (0,_helpers_js__WEBPACK_IMPORTED_MODULE_4__.storeValueIsStoreObject)(incoming)) {\n                return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({}, existing), incoming);\n            }\n        }\n        return incoming;\n    };\n} //# sourceMappingURL=policies.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/cache/inmemory/policies.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/cache/inmemory/reactiveVars.js":
/*!********************************************************************!*\
  !*** ./node_modules/@apollo/client/cache/inmemory/reactiveVars.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cacheSlot: () => (/* binding */ cacheSlot),\n/* harmony export */   forgetCache: () => (/* binding */ forgetCache),\n/* harmony export */   makeVar: () => (/* binding */ makeVar),\n/* harmony export */   recallCache: () => (/* binding */ recallCache)\n/* harmony export */ });\n/* harmony import */ var optimism__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! optimism */ \"(ssr)/./node_modules/optimism/lib/index.js\");\n/* harmony import */ var _wry_context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wry/context */ \"(ssr)/./node_modules/@wry/context/lib/index.js\");\n\n\nvar cacheSlot = new _wry_context__WEBPACK_IMPORTED_MODULE_1__.Slot();\nvar cacheInfoMap = new WeakMap();\nfunction getCacheInfo(cache) {\n    var info = cacheInfoMap.get(cache);\n    if (!info) {\n        cacheInfoMap.set(cache, info = {\n            vars: new Set(),\n            dep: (0,optimism__WEBPACK_IMPORTED_MODULE_0__.dep)()\n        });\n    }\n    return info;\n}\nfunction forgetCache(cache) {\n    getCacheInfo(cache).vars.forEach(function(rv) {\n        return rv.forgetCache(cache);\n    });\n}\nfunction recallCache(cache) {\n    getCacheInfo(cache).vars.forEach(function(rv) {\n        return rv.attachCache(cache);\n    });\n}\nfunction makeVar(value) {\n    var caches = new Set();\n    var listeners = new Set();\n    var rv = function(newValue) {\n        if (arguments.length > 0) {\n            if (value !== newValue) {\n                value = newValue;\n                caches.forEach(function(cache) {\n                    getCacheInfo(cache).dep.dirty(rv);\n                    broadcast(cache);\n                });\n                var oldListeners = Array.from(listeners);\n                listeners.clear();\n                oldListeners.forEach(function(listener) {\n                    return listener(value);\n                });\n            }\n        } else {\n            var cache = cacheSlot.getValue();\n            if (cache) {\n                attach(cache);\n                getCacheInfo(cache).dep(rv);\n            }\n        }\n        return value;\n    };\n    rv.onNextChange = function(listener) {\n        listeners.add(listener);\n        return function() {\n            listeners.delete(listener);\n        };\n    };\n    var attach = rv.attachCache = function(cache) {\n        caches.add(cache);\n        getCacheInfo(cache).vars.add(rv);\n        return rv;\n    };\n    rv.forgetCache = function(cache) {\n        return caches.delete(cache);\n    };\n    return rv;\n}\nfunction broadcast(cache) {\n    if (cache.broadcastWatches) {\n        cache.broadcastWatches();\n    }\n} //# sourceMappingURL=reactiveVars.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFwb2xsby9jbGllbnQvY2FjaGUvaW5tZW1vcnkvcmVhY3RpdmVWYXJzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUErQjtBQUNLO0FBQzdCLElBQUlFLFlBQVksSUFBSUQsOENBQUlBLEdBQUc7QUFDbEMsSUFBSUUsZUFBZSxJQUFJQztBQUN2QixTQUFTQyxhQUFhQyxLQUFLO0lBQ3ZCLElBQUlDLE9BQU9KLGFBQWFLLEdBQUcsQ0FBQ0Y7SUFDNUIsSUFBSSxDQUFDQyxNQUFNO1FBQ1BKLGFBQWFNLEdBQUcsQ0FBQ0gsT0FBUUMsT0FBTztZQUM1QkcsTUFBTSxJQUFJQztZQUNWWCxLQUFLQSw2Q0FBR0E7UUFDWjtJQUNKO0lBQ0EsT0FBT087QUFDWDtBQUNPLFNBQVNLLFlBQVlOLEtBQUs7SUFDN0JELGFBQWFDLE9BQU9JLElBQUksQ0FBQ0csT0FBTyxDQUFDLFNBQVVDLEVBQUU7UUFBSSxPQUFPQSxHQUFHRixXQUFXLENBQUNOO0lBQVE7QUFDbkY7QUFDTyxTQUFTUyxZQUFZVCxLQUFLO0lBQzdCRCxhQUFhQyxPQUFPSSxJQUFJLENBQUNHLE9BQU8sQ0FBQyxTQUFVQyxFQUFFO1FBQUksT0FBT0EsR0FBR0UsV0FBVyxDQUFDVjtJQUFRO0FBQ25GO0FBQ08sU0FBU1csUUFBUUMsS0FBSztJQUN6QixJQUFJQyxTQUFTLElBQUlSO0lBQ2pCLElBQUlTLFlBQVksSUFBSVQ7SUFDcEIsSUFBSUcsS0FBSyxTQUFVTyxRQUFRO1FBQ3ZCLElBQUlDLFVBQVVDLE1BQU0sR0FBRyxHQUFHO1lBQ3RCLElBQUlMLFVBQVVHLFVBQVU7Z0JBQ3BCSCxRQUFRRztnQkFDUkYsT0FBT04sT0FBTyxDQUFDLFNBQVVQLEtBQUs7b0JBQzFCRCxhQUFhQyxPQUFPTixHQUFHLENBQUN3QixLQUFLLENBQUNWO29CQUM5QlcsVUFBVW5CO2dCQUNkO2dCQUNBLElBQUlvQixlQUFlQyxNQUFNQyxJQUFJLENBQUNSO2dCQUM5QkEsVUFBVVMsS0FBSztnQkFDZkgsYUFBYWIsT0FBTyxDQUFDLFNBQVVpQixRQUFRO29CQUFJLE9BQU9BLFNBQVNaO2dCQUFRO1lBQ3ZFO1FBQ0osT0FDSztZQUNELElBQUlaLFFBQVFKLFVBQVU2QixRQUFRO1lBQzlCLElBQUl6QixPQUFPO2dCQUNQMEIsT0FBTzFCO2dCQUNQRCxhQUFhQyxPQUFPTixHQUFHLENBQUNjO1lBQzVCO1FBQ0o7UUFDQSxPQUFPSTtJQUNYO0lBQ0FKLEdBQUdtQixZQUFZLEdBQUcsU0FBVUgsUUFBUTtRQUNoQ1YsVUFBVWMsR0FBRyxDQUFDSjtRQUNkLE9BQU87WUFDSFYsVUFBVWUsTUFBTSxDQUFDTDtRQUNyQjtJQUNKO0lBQ0EsSUFBSUUsU0FBVWxCLEdBQUdFLFdBQVcsR0FBRyxTQUFVVixLQUFLO1FBQzFDYSxPQUFPZSxHQUFHLENBQUM1QjtRQUNYRCxhQUFhQyxPQUFPSSxJQUFJLENBQUN3QixHQUFHLENBQUNwQjtRQUM3QixPQUFPQTtJQUNYO0lBQ0FBLEdBQUdGLFdBQVcsR0FBRyxTQUFVTixLQUFLO1FBQUksT0FBT2EsT0FBT2dCLE1BQU0sQ0FBQzdCO0lBQVE7SUFDakUsT0FBT1E7QUFDWDtBQUNBLFNBQVNXLFVBQVVuQixLQUFLO0lBQ3BCLElBQUlBLE1BQU04QixnQkFBZ0IsRUFBRTtRQUN4QjlCLE1BQU04QixnQkFBZ0I7SUFDMUI7QUFDSixFQUNBLHdDQUF3QyIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1cm5pLWFwcC8uL25vZGVfbW9kdWxlcy9AYXBvbGxvL2NsaWVudC9jYWNoZS9pbm1lbW9yeS9yZWFjdGl2ZVZhcnMuanM/ZDczYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBkZXAgfSBmcm9tIFwib3B0aW1pc21cIjtcbmltcG9ydCB7IFNsb3QgfSBmcm9tIFwiQHdyeS9jb250ZXh0XCI7XG5leHBvcnQgdmFyIGNhY2hlU2xvdCA9IG5ldyBTbG90KCk7XG52YXIgY2FjaGVJbmZvTWFwID0gbmV3IFdlYWtNYXAoKTtcbmZ1bmN0aW9uIGdldENhY2hlSW5mbyhjYWNoZSkge1xuICAgIHZhciBpbmZvID0gY2FjaGVJbmZvTWFwLmdldChjYWNoZSk7XG4gICAgaWYgKCFpbmZvKSB7XG4gICAgICAgIGNhY2hlSW5mb01hcC5zZXQoY2FjaGUsIChpbmZvID0ge1xuICAgICAgICAgICAgdmFyczogbmV3IFNldCgpLFxuICAgICAgICAgICAgZGVwOiBkZXAoKSxcbiAgICAgICAgfSkpO1xuICAgIH1cbiAgICByZXR1cm4gaW5mbztcbn1cbmV4cG9ydCBmdW5jdGlvbiBmb3JnZXRDYWNoZShjYWNoZSkge1xuICAgIGdldENhY2hlSW5mbyhjYWNoZSkudmFycy5mb3JFYWNoKGZ1bmN0aW9uIChydikgeyByZXR1cm4gcnYuZm9yZ2V0Q2FjaGUoY2FjaGUpOyB9KTtcbn1cbmV4cG9ydCBmdW5jdGlvbiByZWNhbGxDYWNoZShjYWNoZSkge1xuICAgIGdldENhY2hlSW5mbyhjYWNoZSkudmFycy5mb3JFYWNoKGZ1bmN0aW9uIChydikgeyByZXR1cm4gcnYuYXR0YWNoQ2FjaGUoY2FjaGUpOyB9KTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBtYWtlVmFyKHZhbHVlKSB7XG4gICAgdmFyIGNhY2hlcyA9IG5ldyBTZXQoKTtcbiAgICB2YXIgbGlzdGVuZXJzID0gbmV3IFNldCgpO1xuICAgIHZhciBydiA9IGZ1bmN0aW9uIChuZXdWYWx1ZSkge1xuICAgICAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIGlmICh2YWx1ZSAhPT0gbmV3VmFsdWUpIHtcbiAgICAgICAgICAgICAgICB2YWx1ZSA9IG5ld1ZhbHVlO1xuICAgICAgICAgICAgICAgIGNhY2hlcy5mb3JFYWNoKGZ1bmN0aW9uIChjYWNoZSkge1xuICAgICAgICAgICAgICAgICAgICBnZXRDYWNoZUluZm8oY2FjaGUpLmRlcC5kaXJ0eShydik7XG4gICAgICAgICAgICAgICAgICAgIGJyb2FkY2FzdChjYWNoZSk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgdmFyIG9sZExpc3RlbmVycyA9IEFycmF5LmZyb20obGlzdGVuZXJzKTtcbiAgICAgICAgICAgICAgICBsaXN0ZW5lcnMuY2xlYXIoKTtcbiAgICAgICAgICAgICAgICBvbGRMaXN0ZW5lcnMuZm9yRWFjaChmdW5jdGlvbiAobGlzdGVuZXIpIHsgcmV0dXJuIGxpc3RlbmVyKHZhbHVlKTsgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB2YXIgY2FjaGUgPSBjYWNoZVNsb3QuZ2V0VmFsdWUoKTtcbiAgICAgICAgICAgIGlmIChjYWNoZSkge1xuICAgICAgICAgICAgICAgIGF0dGFjaChjYWNoZSk7XG4gICAgICAgICAgICAgICAgZ2V0Q2FjaGVJbmZvKGNhY2hlKS5kZXAocnYpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9O1xuICAgIHJ2Lm9uTmV4dENoYW5nZSA9IGZ1bmN0aW9uIChsaXN0ZW5lcikge1xuICAgICAgICBsaXN0ZW5lcnMuYWRkKGxpc3RlbmVyKTtcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGxpc3RlbmVycy5kZWxldGUobGlzdGVuZXIpO1xuICAgICAgICB9O1xuICAgIH07XG4gICAgdmFyIGF0dGFjaCA9IChydi5hdHRhY2hDYWNoZSA9IGZ1bmN0aW9uIChjYWNoZSkge1xuICAgICAgICBjYWNoZXMuYWRkKGNhY2hlKTtcbiAgICAgICAgZ2V0Q2FjaGVJbmZvKGNhY2hlKS52YXJzLmFkZChydik7XG4gICAgICAgIHJldHVybiBydjtcbiAgICB9KTtcbiAgICBydi5mb3JnZXRDYWNoZSA9IGZ1bmN0aW9uIChjYWNoZSkgeyByZXR1cm4gY2FjaGVzLmRlbGV0ZShjYWNoZSk7IH07XG4gICAgcmV0dXJuIHJ2O1xufVxuZnVuY3Rpb24gYnJvYWRjYXN0KGNhY2hlKSB7XG4gICAgaWYgKGNhY2hlLmJyb2FkY2FzdFdhdGNoZXMpIHtcbiAgICAgICAgY2FjaGUuYnJvYWRjYXN0V2F0Y2hlcygpO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlYWN0aXZlVmFycy5qcy5tYXAiXSwibmFtZXMiOlsiZGVwIiwiU2xvdCIsImNhY2hlU2xvdCIsImNhY2hlSW5mb01hcCIsIldlYWtNYXAiLCJnZXRDYWNoZUluZm8iLCJjYWNoZSIsImluZm8iLCJnZXQiLCJzZXQiLCJ2YXJzIiwiU2V0IiwiZm9yZ2V0Q2FjaGUiLCJmb3JFYWNoIiwicnYiLCJyZWNhbGxDYWNoZSIsImF0dGFjaENhY2hlIiwibWFrZVZhciIsInZhbHVlIiwiY2FjaGVzIiwibGlzdGVuZXJzIiwibmV3VmFsdWUiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJkaXJ0eSIsImJyb2FkY2FzdCIsIm9sZExpc3RlbmVycyIsIkFycmF5IiwiZnJvbSIsImNsZWFyIiwibGlzdGVuZXIiLCJnZXRWYWx1ZSIsImF0dGFjaCIsIm9uTmV4dENoYW5nZSIsImFkZCIsImRlbGV0ZSIsImJyb2FkY2FzdFdhdGNoZXMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/cache/inmemory/reactiveVars.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/cache/inmemory/readFromStore.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@apollo/client/cache/inmemory/readFromStore.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StoreReader: () => (/* binding */ StoreReader)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.mjs\");\n/* harmony import */ var _utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utilities/globals/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/globals/index.js\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! graphql */ \"(ssr)/./node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var optimism__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! optimism */ \"(ssr)/./node_modules/optimism/lib/index.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/common/canUse.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/common/compact.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/graphql/storeUtils.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/graphql/getFromAST.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/common/mergeDeep.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/graphql/directives.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/graphql/transform.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/graphql/fragments.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/common/maybeDeepFreeze.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/common/objects.js\");\n/* harmony import */ var _entityStore_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./entityStore.js */ \"(ssr)/./node_modules/@apollo/client/cache/inmemory/entityStore.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./helpers.js */ \"(ssr)/./node_modules/@apollo/client/cache/inmemory/helpers.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./helpers.js */ \"(ssr)/./node_modules/@apollo/client/utilities/common/arrays.js\");\n/* harmony import */ var _core_types_common_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../core/types/common.js */ \"(ssr)/./node_modules/@apollo/client/cache/core/types/common.js\");\n/* harmony import */ var _object_canon_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./object-canon.js */ \"(ssr)/./node_modules/@apollo/client/cache/inmemory/object-canon.js\");\n\n\n\n\n\n\n\n\n\nfunction execSelectionSetKeyArgs(options) {\n    return [\n        options.selectionSet,\n        options.objectOrReference,\n        options.context,\n        options.context.canonizeResults\n    ];\n}\nvar StoreReader = function() {\n    function StoreReader(config) {\n        var _this = this;\n        this.knownResults = new (_utilities_index_js__WEBPACK_IMPORTED_MODULE_2__.canUseWeakMap ? WeakMap : Map)();\n        this.config = (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_3__.compact)(config, {\n            addTypename: config.addTypename !== false,\n            canonizeResults: (0,_helpers_js__WEBPACK_IMPORTED_MODULE_4__.shouldCanonizeResults)(config)\n        });\n        this.canon = config.canon || new _object_canon_js__WEBPACK_IMPORTED_MODULE_5__.ObjectCanon();\n        this.executeSelectionSet = (0,optimism__WEBPACK_IMPORTED_MODULE_1__.wrap)(function(options) {\n            var _a;\n            var canonizeResults = options.context.canonizeResults;\n            var peekArgs = execSelectionSetKeyArgs(options);\n            peekArgs[3] = !canonizeResults;\n            var other = (_a = _this.executeSelectionSet).peek.apply(_a, peekArgs);\n            if (other) {\n                if (canonizeResults) {\n                    return (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_6__.__assign)({}, other), {\n                        result: _this.canon.admit(other.result)\n                    });\n                }\n                return other;\n            }\n            (0,_entityStore_js__WEBPACK_IMPORTED_MODULE_7__.maybeDependOnExistenceOfEntity)(options.context.store, options.enclosingRef.__ref);\n            return _this.execSelectionSetImpl(options);\n        }, {\n            max: this.config.resultCacheMaxSize,\n            keyArgs: execSelectionSetKeyArgs,\n            makeCacheKey: function(selectionSet, parent, context, canonizeResults) {\n                if ((0,_entityStore_js__WEBPACK_IMPORTED_MODULE_7__.supportsResultCaching)(context.store)) {\n                    return context.store.makeCacheKey(selectionSet, (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_8__.isReference)(parent) ? parent.__ref : parent, context.varString, canonizeResults);\n                }\n            }\n        });\n        this.executeSubSelectedArray = (0,optimism__WEBPACK_IMPORTED_MODULE_1__.wrap)(function(options) {\n            (0,_entityStore_js__WEBPACK_IMPORTED_MODULE_7__.maybeDependOnExistenceOfEntity)(options.context.store, options.enclosingRef.__ref);\n            return _this.execSubSelectedArrayImpl(options);\n        }, {\n            max: this.config.resultCacheMaxSize,\n            makeCacheKey: function(_a) {\n                var field = _a.field, array = _a.array, context = _a.context;\n                if ((0,_entityStore_js__WEBPACK_IMPORTED_MODULE_7__.supportsResultCaching)(context.store)) {\n                    return context.store.makeCacheKey(field, array, context.varString);\n                }\n            }\n        });\n    }\n    StoreReader.prototype.resetCanon = function() {\n        this.canon = new _object_canon_js__WEBPACK_IMPORTED_MODULE_5__.ObjectCanon();\n    };\n    StoreReader.prototype.diffQueryAgainstStore = function(_a) {\n        var store = _a.store, query = _a.query, _b = _a.rootId, rootId = _b === void 0 ? \"ROOT_QUERY\" : _b, variables = _a.variables, _c = _a.returnPartialData, returnPartialData = _c === void 0 ? true : _c, _d = _a.canonizeResults, canonizeResults = _d === void 0 ? this.config.canonizeResults : _d;\n        var policies = this.config.cache.policies;\n        variables = (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_6__.__assign)({}, (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_9__.getDefaultValues)((0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_9__.getQueryDefinition)(query))), variables);\n        var rootRef = (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_8__.makeReference)(rootId);\n        var execResult = this.executeSelectionSet({\n            selectionSet: (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_9__.getMainDefinition)(query).selectionSet,\n            objectOrReference: rootRef,\n            enclosingRef: rootRef,\n            context: (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__assign)({\n                store: store,\n                query: query,\n                policies: policies,\n                variables: variables,\n                varString: (0,_object_canon_js__WEBPACK_IMPORTED_MODULE_5__.canonicalStringify)(variables),\n                canonizeResults: canonizeResults\n            }, (0,_helpers_js__WEBPACK_IMPORTED_MODULE_4__.extractFragmentContext)(query, this.config.fragments))\n        });\n        var missing;\n        if (execResult.missing) {\n            missing = [\n                new _core_types_common_js__WEBPACK_IMPORTED_MODULE_10__.MissingFieldError(firstMissing(execResult.missing), execResult.missing, query, variables)\n            ];\n            if (!returnPartialData) {\n                throw missing[0];\n            }\n        }\n        return {\n            result: execResult.result,\n            complete: !missing,\n            missing: missing\n        };\n    };\n    StoreReader.prototype.isFresh = function(result, parent, selectionSet, context) {\n        if ((0,_entityStore_js__WEBPACK_IMPORTED_MODULE_7__.supportsResultCaching)(context.store) && this.knownResults.get(result) === selectionSet) {\n            var latest = this.executeSelectionSet.peek(selectionSet, parent, context, this.canon.isKnown(result));\n            if (latest && result === latest.result) {\n                return true;\n            }\n        }\n        return false;\n    };\n    StoreReader.prototype.execSelectionSetImpl = function(_a) {\n        var _this = this;\n        var selectionSet = _a.selectionSet, objectOrReference = _a.objectOrReference, enclosingRef = _a.enclosingRef, context = _a.context;\n        if ((0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_8__.isReference)(objectOrReference) && !context.policies.rootTypenamesById[objectOrReference.__ref] && !context.store.has(objectOrReference.__ref)) {\n            return {\n                result: this.canon.empty,\n                missing: \"Dangling reference to missing \".concat(objectOrReference.__ref, \" object\")\n            };\n        }\n        var variables = context.variables, policies = context.policies, store = context.store;\n        var typename = store.getFieldValue(objectOrReference, \"__typename\");\n        var objectsToMerge = [];\n        var missing;\n        var missingMerger = new _utilities_index_js__WEBPACK_IMPORTED_MODULE_11__.DeepMerger();\n        if (this.config.addTypename && typeof typename === \"string\" && !policies.rootIdsByTypename[typename]) {\n            objectsToMerge.push({\n                __typename: typename\n            });\n        }\n        function handleMissing(result, resultName) {\n            var _a;\n            if (result.missing) {\n                missing = missingMerger.merge(missing, (_a = {}, _a[resultName] = result.missing, _a));\n            }\n            return result.result;\n        }\n        var workSet = new Set(selectionSet.selections);\n        workSet.forEach(function(selection) {\n            var _a, _b;\n            if (!(0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_12__.shouldInclude)(selection, variables)) return;\n            if ((0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_8__.isField)(selection)) {\n                var fieldValue = policies.readField({\n                    fieldName: selection.name.value,\n                    field: selection,\n                    variables: context.variables,\n                    from: objectOrReference\n                }, context);\n                var resultName = (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_8__.resultKeyNameFromField)(selection);\n                if (fieldValue === void 0) {\n                    if (!_utilities_index_js__WEBPACK_IMPORTED_MODULE_13__.addTypenameToDocument.added(selection)) {\n                        missing = missingMerger.merge(missing, (_a = {}, _a[resultName] = \"Can't find field '\".concat(selection.name.value, \"' on \").concat((0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_8__.isReference)(objectOrReference) ? objectOrReference.__ref + \" object\" : \"object \" + JSON.stringify(objectOrReference, null, 2)), _a));\n                    }\n                } else if ((0,_helpers_js__WEBPACK_IMPORTED_MODULE_14__.isArray)(fieldValue)) {\n                    fieldValue = handleMissing(_this.executeSubSelectedArray({\n                        field: selection,\n                        array: fieldValue,\n                        enclosingRef: enclosingRef,\n                        context: context\n                    }), resultName);\n                } else if (!selection.selectionSet) {\n                    if (context.canonizeResults) {\n                        fieldValue = _this.canon.pass(fieldValue);\n                    }\n                } else if (fieldValue != null) {\n                    fieldValue = handleMissing(_this.executeSelectionSet({\n                        selectionSet: selection.selectionSet,\n                        objectOrReference: fieldValue,\n                        enclosingRef: (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_8__.isReference)(fieldValue) ? fieldValue : enclosingRef,\n                        context: context\n                    }), resultName);\n                }\n                if (fieldValue !== void 0) {\n                    objectsToMerge.push((_b = {}, _b[resultName] = fieldValue, _b));\n                }\n            } else {\n                var fragment = (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_15__.getFragmentFromSelection)(selection, context.lookupFragment);\n                if (!fragment && selection.kind === graphql__WEBPACK_IMPORTED_MODULE_16__.Kind.FRAGMENT_SPREAD) {\n                    throw (0,_utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.newInvariantError)(9, selection.name.value);\n                }\n                if (fragment && policies.fragmentMatches(fragment, typename)) {\n                    fragment.selectionSet.selections.forEach(workSet.add, workSet);\n                }\n            }\n        });\n        var result = (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_11__.mergeDeepArray)(objectsToMerge);\n        var finalResult = {\n            result: result,\n            missing: missing\n        };\n        var frozen = context.canonizeResults ? this.canon.admit(finalResult) : (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_17__.maybeDeepFreeze)(finalResult);\n        if (frozen.result) {\n            this.knownResults.set(frozen.result, selectionSet);\n        }\n        return frozen;\n    };\n    StoreReader.prototype.execSubSelectedArrayImpl = function(_a) {\n        var _this = this;\n        var field = _a.field, array = _a.array, enclosingRef = _a.enclosingRef, context = _a.context;\n        var missing;\n        var missingMerger = new _utilities_index_js__WEBPACK_IMPORTED_MODULE_11__.DeepMerger();\n        function handleMissing(childResult, i) {\n            var _a;\n            if (childResult.missing) {\n                missing = missingMerger.merge(missing, (_a = {}, _a[i] = childResult.missing, _a));\n            }\n            return childResult.result;\n        }\n        if (field.selectionSet) {\n            array = array.filter(context.store.canRead);\n        }\n        array = array.map(function(item, i) {\n            if (item === null) {\n                return null;\n            }\n            if ((0,_helpers_js__WEBPACK_IMPORTED_MODULE_14__.isArray)(item)) {\n                return handleMissing(_this.executeSubSelectedArray({\n                    field: field,\n                    array: item,\n                    enclosingRef: enclosingRef,\n                    context: context\n                }), i);\n            }\n            if (field.selectionSet) {\n                return handleMissing(_this.executeSelectionSet({\n                    selectionSet: field.selectionSet,\n                    objectOrReference: item,\n                    enclosingRef: (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_8__.isReference)(item) ? item : enclosingRef,\n                    context: context\n                }), i);\n            }\n            if (globalThis.__DEV__ !== false) {\n                assertSelectionSetForIdValue(context.store, field, item);\n            }\n            return item;\n        });\n        return {\n            result: context.canonizeResults ? this.canon.admit(array) : array,\n            missing: missing\n        };\n    };\n    return StoreReader;\n}();\n\nfunction firstMissing(tree) {\n    try {\n        JSON.stringify(tree, function(_, value) {\n            if (typeof value === \"string\") throw value;\n            return value;\n        });\n    } catch (result) {\n        return result;\n    }\n}\nfunction assertSelectionSetForIdValue(store, field, fieldValue) {\n    if (!field.selectionSet) {\n        var workSet_1 = new Set([\n            fieldValue\n        ]);\n        workSet_1.forEach(function(value) {\n            if ((0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_18__.isNonNullObject)(value)) {\n                (0,_utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.invariant)(!(0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_8__.isReference)(value), 10, (0,_helpers_js__WEBPACK_IMPORTED_MODULE_4__.getTypenameFromStoreObject)(store, value), field.name.value);\n                Object.values(value).forEach(workSet_1.add, workSet_1);\n            }\n        });\n    }\n} //# sourceMappingURL=readFromStore.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/cache/inmemory/readFromStore.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/cache/inmemory/writeToStore.js":
/*!********************************************************************!*\
  !*** ./node_modules/@apollo/client/cache/inmemory/writeToStore.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StoreWriter: () => (/* binding */ StoreWriter)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.mjs\");\n/* harmony import */ var _utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utilities/globals/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/globals/index.js\");\n/* harmony import */ var _wry_equality__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wry/equality */ \"(ssr)/./node_modules/@wry/equality/lib/index.js\");\n/* harmony import */ var _wry_trie__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @wry/trie */ \"(ssr)/./node_modules/@wry/trie/lib/index.js\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! graphql */ \"(ssr)/./node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/graphql/getFromAST.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/graphql/storeUtils.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/graphql/transform.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/common/cloneDeep.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/graphql/directives.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./helpers.js */ \"(ssr)/./node_modules/@apollo/client/utilities/common/arrays.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/graphql/fragments.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./helpers.js */ \"(ssr)/./node_modules/@apollo/client/cache/inmemory/helpers.js\");\n/* harmony import */ var _object_canon_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./object-canon.js */ \"(ssr)/./node_modules/@apollo/client/cache/inmemory/object-canon.js\");\n/* harmony import */ var _policies_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./policies.js */ \"(ssr)/./node_modules/@apollo/client/cache/inmemory/policies.js\");\n\n\n\n\n\n\n\n\n\nfunction getContextFlavor(context, clientOnly, deferred) {\n    var key = \"\".concat(clientOnly).concat(deferred);\n    var flavored = context.flavors.get(key);\n    if (!flavored) {\n        context.flavors.set(key, flavored = context.clientOnly === clientOnly && context.deferred === deferred ? context : (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({}, context), {\n            clientOnly: clientOnly,\n            deferred: deferred\n        }));\n    }\n    return flavored;\n}\nvar StoreWriter = function() {\n    function StoreWriter(cache, reader, fragments) {\n        this.cache = cache;\n        this.reader = reader;\n        this.fragments = fragments;\n    }\n    StoreWriter.prototype.writeToStore = function(store, _a) {\n        var _this = this;\n        var query = _a.query, result = _a.result, dataId = _a.dataId, variables = _a.variables, overwrite = _a.overwrite;\n        var operationDefinition = (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_4__.getOperationDefinition)(query);\n        var merger = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_5__.makeProcessedFieldsMerger)();\n        variables = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({}, (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_4__.getDefaultValues)(operationDefinition)), variables);\n        var context = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({\n            store: store,\n            written: Object.create(null),\n            merge: function(existing, incoming) {\n                return merger.merge(existing, incoming);\n            },\n            variables: variables,\n            varString: (0,_object_canon_js__WEBPACK_IMPORTED_MODULE_6__.canonicalStringify)(variables)\n        }, (0,_helpers_js__WEBPACK_IMPORTED_MODULE_5__.extractFragmentContext)(query, this.fragments)), {\n            overwrite: !!overwrite,\n            incomingById: new Map(),\n            clientOnly: false,\n            deferred: false,\n            flavors: new Map()\n        });\n        var ref = this.processSelectionSet({\n            result: result || Object.create(null),\n            dataId: dataId,\n            selectionSet: operationDefinition.selectionSet,\n            mergeTree: {\n                map: new Map()\n            },\n            context: context\n        });\n        if (!(0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_7__.isReference)(ref)) {\n            throw (0,_utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.newInvariantError)(11, result);\n        }\n        context.incomingById.forEach(function(_a, dataId) {\n            var storeObject = _a.storeObject, mergeTree = _a.mergeTree, fieldNodeSet = _a.fieldNodeSet;\n            var entityRef = (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_7__.makeReference)(dataId);\n            if (mergeTree && mergeTree.map.size) {\n                var applied = _this.applyMerges(mergeTree, entityRef, storeObject, context);\n                if ((0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_7__.isReference)(applied)) {\n                    return;\n                }\n                storeObject = applied;\n            }\n            if (globalThis.__DEV__ !== false && !context.overwrite) {\n                var fieldsWithSelectionSets_1 = Object.create(null);\n                fieldNodeSet.forEach(function(field) {\n                    if (field.selectionSet) {\n                        fieldsWithSelectionSets_1[field.name.value] = true;\n                    }\n                });\n                var hasSelectionSet_1 = function(storeFieldName) {\n                    return fieldsWithSelectionSets_1[(0,_helpers_js__WEBPACK_IMPORTED_MODULE_5__.fieldNameFromStoreName)(storeFieldName)] === true;\n                };\n                var hasMergeFunction_1 = function(storeFieldName) {\n                    var childTree = mergeTree && mergeTree.map.get(storeFieldName);\n                    return Boolean(childTree && childTree.info && childTree.info.merge);\n                };\n                Object.keys(storeObject).forEach(function(storeFieldName) {\n                    if (hasSelectionSet_1(storeFieldName) && !hasMergeFunction_1(storeFieldName)) {\n                        warnAboutDataLoss(entityRef, storeObject, storeFieldName, context.store);\n                    }\n                });\n            }\n            store.merge(dataId, storeObject);\n        });\n        store.retain(ref.__ref);\n        return ref;\n    };\n    StoreWriter.prototype.processSelectionSet = function(_a) {\n        var _this = this;\n        var dataId = _a.dataId, result = _a.result, selectionSet = _a.selectionSet, context = _a.context, mergeTree = _a.mergeTree;\n        var policies = this.cache.policies;\n        var incoming = Object.create(null);\n        var typename = dataId && policies.rootTypenamesById[dataId] || (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_7__.getTypenameFromResult)(result, selectionSet, context.fragmentMap) || dataId && context.store.get(dataId, \"__typename\");\n        if (\"string\" === typeof typename) {\n            incoming.__typename = typename;\n        }\n        var readField = function() {\n            var options = (0,_policies_js__WEBPACK_IMPORTED_MODULE_8__.normalizeReadFieldOptions)(arguments, incoming, context.variables);\n            if ((0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_7__.isReference)(options.from)) {\n                var info = context.incomingById.get(options.from.__ref);\n                if (info) {\n                    var result_1 = policies.readField((0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({}, options), {\n                        from: info.storeObject\n                    }), context);\n                    if (result_1 !== void 0) {\n                        return result_1;\n                    }\n                }\n            }\n            return policies.readField(options, context);\n        };\n        var fieldNodeSet = new Set();\n        this.flattenFields(selectionSet, result, context, typename).forEach(function(context, field) {\n            var _a;\n            var resultFieldKey = (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_7__.resultKeyNameFromField)(field);\n            var value = result[resultFieldKey];\n            fieldNodeSet.add(field);\n            if (value !== void 0) {\n                var storeFieldName = policies.getStoreFieldName({\n                    typename: typename,\n                    fieldName: field.name.value,\n                    field: field,\n                    variables: context.variables\n                });\n                var childTree = getChildMergeTree(mergeTree, storeFieldName);\n                var incomingValue = _this.processFieldValue(value, field, field.selectionSet ? getContextFlavor(context, false, false) : context, childTree);\n                var childTypename = void 0;\n                if (field.selectionSet && ((0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_7__.isReference)(incomingValue) || (0,_helpers_js__WEBPACK_IMPORTED_MODULE_5__.storeValueIsStoreObject)(incomingValue))) {\n                    childTypename = readField(\"__typename\", incomingValue);\n                }\n                var merge = policies.getMergeFunction(typename, field.name.value, childTypename);\n                if (merge) {\n                    childTree.info = {\n                        field: field,\n                        typename: typename,\n                        merge: merge\n                    };\n                } else {\n                    maybeRecycleChildMergeTree(mergeTree, storeFieldName);\n                }\n                incoming = context.merge(incoming, (_a = {}, _a[storeFieldName] = incomingValue, _a));\n            } else if (globalThis.__DEV__ !== false && !context.clientOnly && !context.deferred && !_utilities_index_js__WEBPACK_IMPORTED_MODULE_9__.addTypenameToDocument.added(field) && !policies.getReadFunction(typename, field.name.value)) {\n                globalThis.__DEV__ !== false && _utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.invariant.error(12, (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_7__.resultKeyNameFromField)(field), result);\n            }\n        });\n        try {\n            var _b = policies.identify(result, {\n                typename: typename,\n                selectionSet: selectionSet,\n                fragmentMap: context.fragmentMap,\n                storeObject: incoming,\n                readField: readField\n            }), id = _b[0], keyObject = _b[1];\n            dataId = dataId || id;\n            if (keyObject) {\n                incoming = context.merge(incoming, keyObject);\n            }\n        } catch (e) {\n            if (!dataId) throw e;\n        }\n        if (\"string\" === typeof dataId) {\n            var dataRef = (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_7__.makeReference)(dataId);\n            var sets = context.written[dataId] || (context.written[dataId] = []);\n            if (sets.indexOf(selectionSet) >= 0) return dataRef;\n            sets.push(selectionSet);\n            if (this.reader && this.reader.isFresh(result, dataRef, selectionSet, context)) {\n                return dataRef;\n            }\n            var previous_1 = context.incomingById.get(dataId);\n            if (previous_1) {\n                previous_1.storeObject = context.merge(previous_1.storeObject, incoming);\n                previous_1.mergeTree = mergeMergeTrees(previous_1.mergeTree, mergeTree);\n                fieldNodeSet.forEach(function(field) {\n                    return previous_1.fieldNodeSet.add(field);\n                });\n            } else {\n                context.incomingById.set(dataId, {\n                    storeObject: incoming,\n                    mergeTree: mergeTreeIsEmpty(mergeTree) ? void 0 : mergeTree,\n                    fieldNodeSet: fieldNodeSet\n                });\n            }\n            return dataRef;\n        }\n        return incoming;\n    };\n    StoreWriter.prototype.processFieldValue = function(value, field, context, mergeTree) {\n        var _this = this;\n        if (!field.selectionSet || value === null) {\n            return globalThis.__DEV__ !== false ? (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_10__.cloneDeep)(value) : value;\n        }\n        if ((0,_helpers_js__WEBPACK_IMPORTED_MODULE_11__.isArray)(value)) {\n            return value.map(function(item, i) {\n                var value = _this.processFieldValue(item, field, context, getChildMergeTree(mergeTree, i));\n                maybeRecycleChildMergeTree(mergeTree, i);\n                return value;\n            });\n        }\n        return this.processSelectionSet({\n            result: value,\n            selectionSet: field.selectionSet,\n            context: context,\n            mergeTree: mergeTree\n        });\n    };\n    StoreWriter.prototype.flattenFields = function(selectionSet, result, context, typename) {\n        if (typename === void 0) {\n            typename = (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_7__.getTypenameFromResult)(result, selectionSet, context.fragmentMap);\n        }\n        var fieldMap = new Map();\n        var policies = this.cache.policies;\n        var limitingTrie = new _wry_trie__WEBPACK_IMPORTED_MODULE_2__.Trie(false);\n        (function flatten(selectionSet, inheritedContext) {\n            var visitedNode = limitingTrie.lookup(selectionSet, inheritedContext.clientOnly, inheritedContext.deferred);\n            if (visitedNode.visited) return;\n            visitedNode.visited = true;\n            selectionSet.selections.forEach(function(selection) {\n                if (!(0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_12__.shouldInclude)(selection, context.variables)) return;\n                var clientOnly = inheritedContext.clientOnly, deferred = inheritedContext.deferred;\n                if (!(clientOnly && deferred) && (0,_helpers_js__WEBPACK_IMPORTED_MODULE_11__.isNonEmptyArray)(selection.directives)) {\n                    selection.directives.forEach(function(dir) {\n                        var name = dir.name.value;\n                        if (name === \"client\") clientOnly = true;\n                        if (name === \"defer\") {\n                            var args = (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_7__.argumentsObjectFromField)(dir, context.variables);\n                            if (!args || args.if !== false) {\n                                deferred = true;\n                            }\n                        }\n                    });\n                }\n                if ((0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_7__.isField)(selection)) {\n                    var existing = fieldMap.get(selection);\n                    if (existing) {\n                        clientOnly = clientOnly && existing.clientOnly;\n                        deferred = deferred && existing.deferred;\n                    }\n                    fieldMap.set(selection, getContextFlavor(context, clientOnly, deferred));\n                } else {\n                    var fragment = (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_13__.getFragmentFromSelection)(selection, context.lookupFragment);\n                    if (!fragment && selection.kind === graphql__WEBPACK_IMPORTED_MODULE_14__.Kind.FRAGMENT_SPREAD) {\n                        throw (0,_utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.newInvariantError)(13, selection.name.value);\n                    }\n                    if (fragment && policies.fragmentMatches(fragment, typename, result, context.variables)) {\n                        flatten(fragment.selectionSet, getContextFlavor(context, clientOnly, deferred));\n                    }\n                }\n            });\n        })(selectionSet, context);\n        return fieldMap;\n    };\n    StoreWriter.prototype.applyMerges = function(mergeTree, existing, incoming, context, getStorageArgs) {\n        var _a;\n        var _this = this;\n        if (mergeTree.map.size && !(0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_7__.isReference)(incoming)) {\n            var e_1 = !(0,_helpers_js__WEBPACK_IMPORTED_MODULE_11__.isArray)(incoming) && ((0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_7__.isReference)(existing) || (0,_helpers_js__WEBPACK_IMPORTED_MODULE_5__.storeValueIsStoreObject)(existing)) ? existing : void 0;\n            var i_1 = incoming;\n            if (e_1 && !getStorageArgs) {\n                getStorageArgs = [\n                    (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_7__.isReference)(e_1) ? e_1.__ref : e_1\n                ];\n            }\n            var changedFields_1;\n            var getValue_1 = function(from, name) {\n                return (0,_helpers_js__WEBPACK_IMPORTED_MODULE_11__.isArray)(from) ? typeof name === \"number\" ? from[name] : void 0 : context.store.getFieldValue(from, String(name));\n            };\n            mergeTree.map.forEach(function(childTree, storeFieldName) {\n                var eVal = getValue_1(e_1, storeFieldName);\n                var iVal = getValue_1(i_1, storeFieldName);\n                if (void 0 === iVal) return;\n                if (getStorageArgs) {\n                    getStorageArgs.push(storeFieldName);\n                }\n                var aVal = _this.applyMerges(childTree, eVal, iVal, context, getStorageArgs);\n                if (aVal !== iVal) {\n                    changedFields_1 = changedFields_1 || new Map();\n                    changedFields_1.set(storeFieldName, aVal);\n                }\n                if (getStorageArgs) {\n                    (0,_utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.invariant)(getStorageArgs.pop() === storeFieldName);\n                }\n            });\n            if (changedFields_1) {\n                incoming = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_11__.isArray)(i_1) ? i_1.slice(0) : (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({}, i_1);\n                changedFields_1.forEach(function(value, name) {\n                    incoming[name] = value;\n                });\n            }\n        }\n        if (mergeTree.info) {\n            return this.cache.policies.runMergeFunction(existing, incoming, mergeTree.info, context, getStorageArgs && (_a = context.store).getStorage.apply(_a, getStorageArgs));\n        }\n        return incoming;\n    };\n    return StoreWriter;\n}();\n\nvar emptyMergeTreePool = [];\nfunction getChildMergeTree(_a, name) {\n    var map = _a.map;\n    if (!map.has(name)) {\n        map.set(name, emptyMergeTreePool.pop() || {\n            map: new Map()\n        });\n    }\n    return map.get(name);\n}\nfunction mergeMergeTrees(left, right) {\n    if (left === right || !right || mergeTreeIsEmpty(right)) return left;\n    if (!left || mergeTreeIsEmpty(left)) return right;\n    var info = left.info && right.info ? (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({}, left.info), right.info) : left.info || right.info;\n    var needToMergeMaps = left.map.size && right.map.size;\n    var map = needToMergeMaps ? new Map() : left.map.size ? left.map : right.map;\n    var merged = {\n        info: info,\n        map: map\n    };\n    if (needToMergeMaps) {\n        var remainingRightKeys_1 = new Set(right.map.keys());\n        left.map.forEach(function(leftTree, key) {\n            merged.map.set(key, mergeMergeTrees(leftTree, right.map.get(key)));\n            remainingRightKeys_1.delete(key);\n        });\n        remainingRightKeys_1.forEach(function(key) {\n            merged.map.set(key, mergeMergeTrees(right.map.get(key), left.map.get(key)));\n        });\n    }\n    return merged;\n}\nfunction mergeTreeIsEmpty(tree) {\n    return !tree || !(tree.info || tree.map.size);\n}\nfunction maybeRecycleChildMergeTree(_a, name) {\n    var map = _a.map;\n    var childTree = map.get(name);\n    if (childTree && mergeTreeIsEmpty(childTree)) {\n        emptyMergeTreePool.push(childTree);\n        map.delete(name);\n    }\n}\nvar warnings = new Set();\nfunction warnAboutDataLoss(existingRef, incomingObj, storeFieldName, store) {\n    var getChild = function(objOrRef) {\n        var child = store.getFieldValue(objOrRef, storeFieldName);\n        return typeof child === \"object\" && child;\n    };\n    var existing = getChild(existingRef);\n    if (!existing) return;\n    var incoming = getChild(incomingObj);\n    if (!incoming) return;\n    if ((0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_7__.isReference)(existing)) return;\n    if ((0,_wry_equality__WEBPACK_IMPORTED_MODULE_1__.equal)(existing, incoming)) return;\n    if (Object.keys(existing).every(function(key) {\n        return store.getFieldValue(incoming, key) !== void 0;\n    })) {\n        return;\n    }\n    var parentType = store.getFieldValue(existingRef, \"__typename\") || store.getFieldValue(incomingObj, \"__typename\");\n    var fieldName = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_5__.fieldNameFromStoreName)(storeFieldName);\n    var typeDotName = \"\".concat(parentType, \".\").concat(fieldName);\n    if (warnings.has(typeDotName)) return;\n    warnings.add(typeDotName);\n    var childTypenames = [];\n    if (!(0,_helpers_js__WEBPACK_IMPORTED_MODULE_11__.isArray)(existing) && !(0,_helpers_js__WEBPACK_IMPORTED_MODULE_11__.isArray)(incoming)) {\n        [\n            existing,\n            incoming\n        ].forEach(function(child) {\n            var typename = store.getFieldValue(child, \"__typename\");\n            if (typeof typename === \"string\" && !childTypenames.includes(typename)) {\n                childTypenames.push(typename);\n            }\n        });\n    }\n    globalThis.__DEV__ !== false && _utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.invariant.warn(14, fieldName, parentType, childTypenames.length ? \"either ensure all objects of type \" + childTypenames.join(\" and \") + \" have an ID or a custom merge function, or \" : \"\", typeDotName, existing, incoming);\n} //# sourceMappingURL=writeToStore.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/cache/inmemory/writeToStore.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/core/ApolloClient.js":
/*!**********************************************************!*\
  !*** ./node_modules/@apollo/client/core/ApolloClient.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ApolloClient: () => (/* binding */ ApolloClient),\n/* harmony export */   mergeOptions: () => (/* reexport safe */ _utilities_index_js__WEBPACK_IMPORTED_MODULE_1__.mergeOptions)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.mjs\");\n/* harmony import */ var _utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utilities/globals/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/globals/index.js\");\n/* harmony import */ var _link_core_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../link/core/index.js */ \"(ssr)/./node_modules/@apollo/client/link/core/ApolloLink.js\");\n/* harmony import */ var _link_core_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../link/core/index.js */ \"(ssr)/./node_modules/@apollo/client/link/core/execute.js\");\n/* harmony import */ var _version_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../version.js */ \"(ssr)/./node_modules/@apollo/client/version.js\");\n/* harmony import */ var _link_http_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../link/http/index.js */ \"(ssr)/./node_modules/@apollo/client/link/http/HttpLink.js\");\n/* harmony import */ var _QueryManager_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./QueryManager.js */ \"(ssr)/./node_modules/@apollo/client/core/QueryManager.js\");\n/* harmony import */ var _LocalState_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./LocalState.js */ \"(ssr)/./node_modules/@apollo/client/core/LocalState.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/common/mergeOptions.js\");\n\n\n\n\n\n\n\nvar hasSuggestedDevtools = false;\n\n\nvar ApolloClient = function() {\n    function ApolloClient(options) {\n        var _this = this;\n        this.resetStoreCallbacks = [];\n        this.clearStoreCallbacks = [];\n        if (!options.cache) {\n            throw (0,_utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.newInvariantError)(15);\n        }\n        var uri = options.uri, credentials = options.credentials, headers = options.headers, cache = options.cache, documentTransform = options.documentTransform, _a = options.ssrMode, ssrMode = _a === void 0 ? false : _a, _b = options.ssrForceFetchDelay, ssrForceFetchDelay = _b === void 0 ? 0 : _b, _c = options.connectToDevTools, connectToDevTools = _c === void 0 ?  false && 0 : _c, _d = options.queryDeduplication, queryDeduplication = _d === void 0 ? true : _d, defaultOptions = options.defaultOptions, _e = options.assumeImmutableResults, assumeImmutableResults = _e === void 0 ? cache.assumeImmutableResults : _e, resolvers = options.resolvers, typeDefs = options.typeDefs, fragmentMatcher = options.fragmentMatcher, clientAwarenessName = options.name, clientAwarenessVersion = options.version;\n        var link = options.link;\n        if (!link) {\n            link = uri ? new _link_http_index_js__WEBPACK_IMPORTED_MODULE_2__.HttpLink({\n                uri: uri,\n                credentials: credentials,\n                headers: headers\n            }) : _link_core_index_js__WEBPACK_IMPORTED_MODULE_3__.ApolloLink.empty();\n        }\n        this.link = link;\n        this.cache = cache;\n        this.disableNetworkFetches = ssrMode || ssrForceFetchDelay > 0;\n        this.queryDeduplication = queryDeduplication;\n        this.defaultOptions = defaultOptions || Object.create(null);\n        this.typeDefs = typeDefs;\n        if (ssrForceFetchDelay) {\n            setTimeout(function() {\n                return _this.disableNetworkFetches = false;\n            }, ssrForceFetchDelay);\n        }\n        this.watchQuery = this.watchQuery.bind(this);\n        this.query = this.query.bind(this);\n        this.mutate = this.mutate.bind(this);\n        this.resetStore = this.resetStore.bind(this);\n        this.reFetchObservableQueries = this.reFetchObservableQueries.bind(this);\n        this.version = _version_js__WEBPACK_IMPORTED_MODULE_4__.version;\n        this.localState = new _LocalState_js__WEBPACK_IMPORTED_MODULE_5__.LocalState({\n            cache: cache,\n            client: this,\n            resolvers: resolvers,\n            fragmentMatcher: fragmentMatcher\n        });\n        this.queryManager = new _QueryManager_js__WEBPACK_IMPORTED_MODULE_6__.QueryManager({\n            cache: this.cache,\n            link: this.link,\n            defaultOptions: this.defaultOptions,\n            documentTransform: documentTransform,\n            queryDeduplication: queryDeduplication,\n            ssrMode: ssrMode,\n            clientAwareness: {\n                name: clientAwarenessName,\n                version: clientAwarenessVersion\n            },\n            localState: this.localState,\n            assumeImmutableResults: assumeImmutableResults,\n            onBroadcast: connectToDevTools ? function() {\n                if (_this.devToolsHookCb) {\n                    _this.devToolsHookCb({\n                        action: {},\n                        state: {\n                            queries: _this.queryManager.getQueryStore(),\n                            mutations: _this.queryManager.mutationStore || {}\n                        },\n                        dataWithOptimisticResults: _this.cache.extract(true)\n                    });\n                }\n            } : void 0\n        });\n        if (connectToDevTools) this.connectToDevTools();\n    }\n    ApolloClient.prototype.connectToDevTools = function() {\n        if (false) { var devtoolsSymbol, windowWithDevTools; }\n        if (!hasSuggestedDevtools && globalThis.__DEV__ !== false) {\n            hasSuggestedDevtools = true;\n            setTimeout(function() {\n                if (false) { var url, ua, nav; }\n            }, 10000);\n        }\n    };\n    Object.defineProperty(ApolloClient.prototype, \"documentTransform\", {\n        get: function() {\n            return this.queryManager.documentTransform;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ApolloClient.prototype.stop = function() {\n        this.queryManager.stop();\n    };\n    ApolloClient.prototype.watchQuery = function(options) {\n        if (this.defaultOptions.watchQuery) {\n            options = (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_1__.mergeOptions)(this.defaultOptions.watchQuery, options);\n        }\n        if (this.disableNetworkFetches && (options.fetchPolicy === \"network-only\" || options.fetchPolicy === \"cache-and-network\")) {\n            options = (0,tslib__WEBPACK_IMPORTED_MODULE_7__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_7__.__assign)({}, options), {\n                fetchPolicy: \"cache-first\"\n            });\n        }\n        return this.queryManager.watchQuery(options);\n    };\n    ApolloClient.prototype.query = function(options) {\n        if (this.defaultOptions.query) {\n            options = (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_1__.mergeOptions)(this.defaultOptions.query, options);\n        }\n        (0,_utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.invariant)(options.fetchPolicy !== \"cache-and-network\", 16);\n        if (this.disableNetworkFetches && options.fetchPolicy === \"network-only\") {\n            options = (0,tslib__WEBPACK_IMPORTED_MODULE_7__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_7__.__assign)({}, options), {\n                fetchPolicy: \"cache-first\"\n            });\n        }\n        return this.queryManager.query(options);\n    };\n    ApolloClient.prototype.mutate = function(options) {\n        if (this.defaultOptions.mutate) {\n            options = (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_1__.mergeOptions)(this.defaultOptions.mutate, options);\n        }\n        return this.queryManager.mutate(options);\n    };\n    ApolloClient.prototype.subscribe = function(options) {\n        return this.queryManager.startGraphQLSubscription(options);\n    };\n    ApolloClient.prototype.readQuery = function(options, optimistic) {\n        if (optimistic === void 0) {\n            optimistic = false;\n        }\n        return this.cache.readQuery(options, optimistic);\n    };\n    ApolloClient.prototype.readFragment = function(options, optimistic) {\n        if (optimistic === void 0) {\n            optimistic = false;\n        }\n        return this.cache.readFragment(options, optimistic);\n    };\n    ApolloClient.prototype.writeQuery = function(options) {\n        var ref = this.cache.writeQuery(options);\n        if (options.broadcast !== false) {\n            this.queryManager.broadcastQueries();\n        }\n        return ref;\n    };\n    ApolloClient.prototype.writeFragment = function(options) {\n        var ref = this.cache.writeFragment(options);\n        if (options.broadcast !== false) {\n            this.queryManager.broadcastQueries();\n        }\n        return ref;\n    };\n    ApolloClient.prototype.__actionHookForDevTools = function(cb) {\n        this.devToolsHookCb = cb;\n    };\n    ApolloClient.prototype.__requestRaw = function(payload) {\n        return (0,_link_core_index_js__WEBPACK_IMPORTED_MODULE_8__.execute)(this.link, payload);\n    };\n    ApolloClient.prototype.resetStore = function() {\n        var _this = this;\n        return Promise.resolve().then(function() {\n            return _this.queryManager.clearStore({\n                discardWatches: false\n            });\n        }).then(function() {\n            return Promise.all(_this.resetStoreCallbacks.map(function(fn) {\n                return fn();\n            }));\n        }).then(function() {\n            return _this.reFetchObservableQueries();\n        });\n    };\n    ApolloClient.prototype.clearStore = function() {\n        var _this = this;\n        return Promise.resolve().then(function() {\n            return _this.queryManager.clearStore({\n                discardWatches: true\n            });\n        }).then(function() {\n            return Promise.all(_this.clearStoreCallbacks.map(function(fn) {\n                return fn();\n            }));\n        });\n    };\n    ApolloClient.prototype.onResetStore = function(cb) {\n        var _this = this;\n        this.resetStoreCallbacks.push(cb);\n        return function() {\n            _this.resetStoreCallbacks = _this.resetStoreCallbacks.filter(function(c) {\n                return c !== cb;\n            });\n        };\n    };\n    ApolloClient.prototype.onClearStore = function(cb) {\n        var _this = this;\n        this.clearStoreCallbacks.push(cb);\n        return function() {\n            _this.clearStoreCallbacks = _this.clearStoreCallbacks.filter(function(c) {\n                return c !== cb;\n            });\n        };\n    };\n    ApolloClient.prototype.reFetchObservableQueries = function(includeStandby) {\n        return this.queryManager.reFetchObservableQueries(includeStandby);\n    };\n    ApolloClient.prototype.refetchQueries = function(options) {\n        var map = this.queryManager.refetchQueries(options);\n        var queries = [];\n        var results = [];\n        map.forEach(function(result, obsQuery) {\n            queries.push(obsQuery);\n            results.push(result);\n        });\n        var result = Promise.all(results);\n        result.queries = queries;\n        result.results = results;\n        result.catch(function(error) {\n            globalThis.__DEV__ !== false && _utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.invariant.debug(17, error);\n        });\n        return result;\n    };\n    ApolloClient.prototype.getObservableQueries = function(include) {\n        if (include === void 0) {\n            include = \"active\";\n        }\n        return this.queryManager.getObservableQueries(include);\n    };\n    ApolloClient.prototype.extract = function(optimistic) {\n        return this.cache.extract(optimistic);\n    };\n    ApolloClient.prototype.restore = function(serializedState) {\n        return this.cache.restore(serializedState);\n    };\n    ApolloClient.prototype.addResolvers = function(resolvers) {\n        this.localState.addResolvers(resolvers);\n    };\n    ApolloClient.prototype.setResolvers = function(resolvers) {\n        this.localState.setResolvers(resolvers);\n    };\n    ApolloClient.prototype.getResolvers = function() {\n        return this.localState.getResolvers();\n    };\n    ApolloClient.prototype.setLocalStateFragmentMatcher = function(fragmentMatcher) {\n        this.localState.setFragmentMatcher(fragmentMatcher);\n    };\n    ApolloClient.prototype.setLink = function(newLink) {\n        this.link = this.queryManager.link = newLink;\n    };\n    return ApolloClient;\n}();\n //# sourceMappingURL=ApolloClient.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/core/ApolloClient.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/core/LocalState.js":
/*!********************************************************!*\
  !*** ./node_modules/@apollo/client/core/LocalState.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LocalState: () => (/* binding */ LocalState)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.mjs\");\n/* harmony import */ var _utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utilities/globals/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/globals/index.js\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! graphql */ \"(ssr)/./node_modules/graphql/language/visitor.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! graphql */ \"(ssr)/./node_modules/graphql/language/predicates.mjs\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/common/mergeDeep.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/graphql/directives.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/graphql/transform.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/graphql/getFromAST.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/graphql/fragments.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/graphql/storeUtils.js\");\n/* harmony import */ var _cache_index_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../cache/index.js */ \"(ssr)/./node_modules/@apollo/client/cache/inmemory/reactiveVars.js\");\n\n\n\n\n\nvar LocalState = function() {\n    function LocalState(_a) {\n        var cache = _a.cache, client = _a.client, resolvers = _a.resolvers, fragmentMatcher = _a.fragmentMatcher;\n        this.selectionsToResolveCache = new WeakMap();\n        this.cache = cache;\n        if (client) {\n            this.client = client;\n        }\n        if (resolvers) {\n            this.addResolvers(resolvers);\n        }\n        if (fragmentMatcher) {\n            this.setFragmentMatcher(fragmentMatcher);\n        }\n    }\n    LocalState.prototype.addResolvers = function(resolvers) {\n        var _this = this;\n        this.resolvers = this.resolvers || {};\n        if (Array.isArray(resolvers)) {\n            resolvers.forEach(function(resolverGroup) {\n                _this.resolvers = (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_1__.mergeDeep)(_this.resolvers, resolverGroup);\n            });\n        } else {\n            this.resolvers = (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_1__.mergeDeep)(this.resolvers, resolvers);\n        }\n    };\n    LocalState.prototype.setResolvers = function(resolvers) {\n        this.resolvers = {};\n        this.addResolvers(resolvers);\n    };\n    LocalState.prototype.getResolvers = function() {\n        return this.resolvers || {};\n    };\n    LocalState.prototype.runResolvers = function(_a) {\n        var document = _a.document, remoteResult = _a.remoteResult, context = _a.context, variables = _a.variables, _b = _a.onlyRunForcedResolvers, onlyRunForcedResolvers = _b === void 0 ? false : _b;\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__awaiter)(this, void 0, void 0, function() {\n            return (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__generator)(this, function(_c) {\n                if (document) {\n                    return [\n                        2,\n                        this.resolveDocument(document, remoteResult.data, context, variables, this.fragmentMatcher, onlyRunForcedResolvers).then(function(localResult) {\n                            return (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, remoteResult), {\n                                data: localResult.result\n                            });\n                        })\n                    ];\n                }\n                return [\n                    2,\n                    remoteResult\n                ];\n            });\n        });\n    };\n    LocalState.prototype.setFragmentMatcher = function(fragmentMatcher) {\n        this.fragmentMatcher = fragmentMatcher;\n    };\n    LocalState.prototype.getFragmentMatcher = function() {\n        return this.fragmentMatcher;\n    };\n    LocalState.prototype.clientQuery = function(document) {\n        if ((0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_3__.hasDirectives)([\n            \"client\"\n        ], document)) {\n            if (this.resolvers) {\n                return document;\n            }\n        }\n        return null;\n    };\n    LocalState.prototype.serverQuery = function(document) {\n        return (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_4__.removeClientSetsFromDocument)(document);\n    };\n    LocalState.prototype.prepareContext = function(context) {\n        var cache = this.cache;\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, context), {\n            cache: cache,\n            getCacheKey: function(obj) {\n                return cache.identify(obj);\n            }\n        });\n    };\n    LocalState.prototype.addExportedVariables = function(document, variables, context) {\n        if (variables === void 0) {\n            variables = {};\n        }\n        if (context === void 0) {\n            context = {};\n        }\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__awaiter)(this, void 0, void 0, function() {\n            return (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__generator)(this, function(_a) {\n                if (document) {\n                    return [\n                        2,\n                        this.resolveDocument(document, this.buildRootValueFromCache(document, variables) || {}, this.prepareContext(context), variables).then(function(data) {\n                            return (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, variables), data.exportedVariables);\n                        })\n                    ];\n                }\n                return [\n                    2,\n                    (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, variables)\n                ];\n            });\n        });\n    };\n    LocalState.prototype.shouldForceResolvers = function(document) {\n        var forceResolvers = false;\n        (0,graphql__WEBPACK_IMPORTED_MODULE_5__.visit)(document, {\n            Directive: {\n                enter: function(node) {\n                    if (node.name.value === \"client\" && node.arguments) {\n                        forceResolvers = node.arguments.some(function(arg) {\n                            return arg.name.value === \"always\" && arg.value.kind === \"BooleanValue\" && arg.value.value === true;\n                        });\n                        if (forceResolvers) {\n                            return graphql__WEBPACK_IMPORTED_MODULE_5__.BREAK;\n                        }\n                    }\n                }\n            }\n        });\n        return forceResolvers;\n    };\n    LocalState.prototype.buildRootValueFromCache = function(document, variables) {\n        return this.cache.diff({\n            query: (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_4__.buildQueryFromSelectionSet)(document),\n            variables: variables,\n            returnPartialData: true,\n            optimistic: false\n        }).result;\n    };\n    LocalState.prototype.resolveDocument = function(document, rootValue, context, variables, fragmentMatcher, onlyRunForcedResolvers) {\n        if (context === void 0) {\n            context = {};\n        }\n        if (variables === void 0) {\n            variables = {};\n        }\n        if (fragmentMatcher === void 0) {\n            fragmentMatcher = function() {\n                return true;\n            };\n        }\n        if (onlyRunForcedResolvers === void 0) {\n            onlyRunForcedResolvers = false;\n        }\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__awaiter)(this, void 0, void 0, function() {\n            var mainDefinition, fragments, fragmentMap, selectionsToResolve, definitionOperation, defaultOperationType, _a, cache, client, execContext, isClientFieldDescendant;\n            return (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__generator)(this, function(_b) {\n                mainDefinition = (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_6__.getMainDefinition)(document);\n                fragments = (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_6__.getFragmentDefinitions)(document);\n                fragmentMap = (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_7__.createFragmentMap)(fragments);\n                selectionsToResolve = this.collectSelectionsToResolve(mainDefinition, fragmentMap);\n                definitionOperation = mainDefinition.operation;\n                defaultOperationType = definitionOperation ? definitionOperation.charAt(0).toUpperCase() + definitionOperation.slice(1) : \"Query\";\n                _a = this, cache = _a.cache, client = _a.client;\n                execContext = {\n                    fragmentMap: fragmentMap,\n                    context: (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, context), {\n                        cache: cache,\n                        client: client\n                    }),\n                    variables: variables,\n                    fragmentMatcher: fragmentMatcher,\n                    defaultOperationType: defaultOperationType,\n                    exportedVariables: {},\n                    selectionsToResolve: selectionsToResolve,\n                    onlyRunForcedResolvers: onlyRunForcedResolvers\n                };\n                isClientFieldDescendant = false;\n                return [\n                    2,\n                    this.resolveSelectionSet(mainDefinition.selectionSet, isClientFieldDescendant, rootValue, execContext).then(function(result) {\n                        return {\n                            result: result,\n                            exportedVariables: execContext.exportedVariables\n                        };\n                    })\n                ];\n            });\n        });\n    };\n    LocalState.prototype.resolveSelectionSet = function(selectionSet, isClientFieldDescendant, rootValue, execContext) {\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__awaiter)(this, void 0, void 0, function() {\n            var fragmentMap, context, variables, resultsToMerge, execute;\n            var _this = this;\n            return (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__generator)(this, function(_a) {\n                fragmentMap = execContext.fragmentMap, context = execContext.context, variables = execContext.variables;\n                resultsToMerge = [\n                    rootValue\n                ];\n                execute = function(selection) {\n                    return (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__awaiter)(_this, void 0, void 0, function() {\n                        var fragment, typeCondition;\n                        return (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__generator)(this, function(_a) {\n                            if (!isClientFieldDescendant && !execContext.selectionsToResolve.has(selection)) {\n                                return [\n                                    2\n                                ];\n                            }\n                            if (!(0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_3__.shouldInclude)(selection, variables)) {\n                                return [\n                                    2\n                                ];\n                            }\n                            if ((0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_8__.isField)(selection)) {\n                                return [\n                                    2,\n                                    this.resolveField(selection, isClientFieldDescendant, rootValue, execContext).then(function(fieldResult) {\n                                        var _a;\n                                        if (typeof fieldResult !== \"undefined\") {\n                                            resultsToMerge.push((_a = {}, _a[(0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_8__.resultKeyNameFromField)(selection)] = fieldResult, _a));\n                                        }\n                                    })\n                                ];\n                            }\n                            if ((0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_8__.isInlineFragment)(selection)) {\n                                fragment = selection;\n                            } else {\n                                fragment = fragmentMap[selection.name.value];\n                                (0,_utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.invariant)(fragment, 18, selection.name.value);\n                            }\n                            if (fragment && fragment.typeCondition) {\n                                typeCondition = fragment.typeCondition.name.value;\n                                if (execContext.fragmentMatcher(rootValue, typeCondition, context)) {\n                                    return [\n                                        2,\n                                        this.resolveSelectionSet(fragment.selectionSet, isClientFieldDescendant, rootValue, execContext).then(function(fragmentResult) {\n                                            resultsToMerge.push(fragmentResult);\n                                        })\n                                    ];\n                                }\n                            }\n                            return [\n                                2\n                            ];\n                        });\n                    });\n                };\n                return [\n                    2,\n                    Promise.all(selectionSet.selections.map(execute)).then(function() {\n                        return (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_1__.mergeDeepArray)(resultsToMerge);\n                    })\n                ];\n            });\n        });\n    };\n    LocalState.prototype.resolveField = function(field, isClientFieldDescendant, rootValue, execContext) {\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__awaiter)(this, void 0, void 0, function() {\n            var variables, fieldName, aliasedFieldName, aliasUsed, defaultResult, resultPromise, resolverType, resolverMap, resolve;\n            var _this = this;\n            return (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__generator)(this, function(_a) {\n                if (!rootValue) {\n                    return [\n                        2,\n                        null\n                    ];\n                }\n                variables = execContext.variables;\n                fieldName = field.name.value;\n                aliasedFieldName = (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_8__.resultKeyNameFromField)(field);\n                aliasUsed = fieldName !== aliasedFieldName;\n                defaultResult = rootValue[aliasedFieldName] || rootValue[fieldName];\n                resultPromise = Promise.resolve(defaultResult);\n                if (!execContext.onlyRunForcedResolvers || this.shouldForceResolvers(field)) {\n                    resolverType = rootValue.__typename || execContext.defaultOperationType;\n                    resolverMap = this.resolvers && this.resolvers[resolverType];\n                    if (resolverMap) {\n                        resolve = resolverMap[aliasUsed ? fieldName : aliasedFieldName];\n                        if (resolve) {\n                            resultPromise = Promise.resolve(_cache_index_js__WEBPACK_IMPORTED_MODULE_9__.cacheSlot.withValue(this.cache, resolve, [\n                                rootValue,\n                                (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_8__.argumentsObjectFromField)(field, variables),\n                                execContext.context,\n                                {\n                                    field: field,\n                                    fragmentMap: execContext.fragmentMap\n                                }\n                            ]));\n                        }\n                    }\n                }\n                return [\n                    2,\n                    resultPromise.then(function(result) {\n                        var _a, _b;\n                        if (result === void 0) {\n                            result = defaultResult;\n                        }\n                        if (field.directives) {\n                            field.directives.forEach(function(directive) {\n                                if (directive.name.value === \"export\" && directive.arguments) {\n                                    directive.arguments.forEach(function(arg) {\n                                        if (arg.name.value === \"as\" && arg.value.kind === \"StringValue\") {\n                                            execContext.exportedVariables[arg.value.value] = result;\n                                        }\n                                    });\n                                }\n                            });\n                        }\n                        if (!field.selectionSet) {\n                            return result;\n                        }\n                        if (result == null) {\n                            return result;\n                        }\n                        var isClientField = (_b = (_a = field.directives) === null || _a === void 0 ? void 0 : _a.some(function(d) {\n                            return d.name.value === \"client\";\n                        })) !== null && _b !== void 0 ? _b : false;\n                        if (Array.isArray(result)) {\n                            return _this.resolveSubSelectedArray(field, isClientFieldDescendant || isClientField, result, execContext);\n                        }\n                        if (field.selectionSet) {\n                            return _this.resolveSelectionSet(field.selectionSet, isClientFieldDescendant || isClientField, result, execContext);\n                        }\n                    })\n                ];\n            });\n        });\n    };\n    LocalState.prototype.resolveSubSelectedArray = function(field, isClientFieldDescendant, result, execContext) {\n        var _this = this;\n        return Promise.all(result.map(function(item) {\n            if (item === null) {\n                return null;\n            }\n            if (Array.isArray(item)) {\n                return _this.resolveSubSelectedArray(field, isClientFieldDescendant, item, execContext);\n            }\n            if (field.selectionSet) {\n                return _this.resolveSelectionSet(field.selectionSet, isClientFieldDescendant, item, execContext);\n            }\n        }));\n    };\n    LocalState.prototype.collectSelectionsToResolve = function(mainDefinition, fragmentMap) {\n        var isSingleASTNode = function(node) {\n            return !Array.isArray(node);\n        };\n        var selectionsToResolveCache = this.selectionsToResolveCache;\n        function collectByDefinition(definitionNode) {\n            if (!selectionsToResolveCache.has(definitionNode)) {\n                var matches_1 = new Set();\n                selectionsToResolveCache.set(definitionNode, matches_1);\n                (0,graphql__WEBPACK_IMPORTED_MODULE_5__.visit)(definitionNode, {\n                    Directive: function(node, _, __, ___, ancestors) {\n                        if (node.name.value === \"client\") {\n                            ancestors.forEach(function(node) {\n                                if (isSingleASTNode(node) && (0,graphql__WEBPACK_IMPORTED_MODULE_10__.isSelectionNode)(node)) {\n                                    matches_1.add(node);\n                                }\n                            });\n                        }\n                    },\n                    FragmentSpread: function(spread, _, __, ___, ancestors) {\n                        var fragment = fragmentMap[spread.name.value];\n                        (0,_utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.invariant)(fragment, 19, spread.name.value);\n                        var fragmentSelections = collectByDefinition(fragment);\n                        if (fragmentSelections.size > 0) {\n                            ancestors.forEach(function(node) {\n                                if (isSingleASTNode(node) && (0,graphql__WEBPACK_IMPORTED_MODULE_10__.isSelectionNode)(node)) {\n                                    matches_1.add(node);\n                                }\n                            });\n                            matches_1.add(spread);\n                            fragmentSelections.forEach(function(selection) {\n                                matches_1.add(selection);\n                            });\n                        }\n                    }\n                });\n            }\n            return selectionsToResolveCache.get(definitionNode);\n        }\n        return collectByDefinition(mainDefinition);\n    };\n    return LocalState;\n}();\n //# sourceMappingURL=LocalState.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/core/LocalState.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/core/ObservableQuery.js":
/*!*************************************************************!*\
  !*** ./node_modules/@apollo/client/core/ObservableQuery.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ObservableQuery: () => (/* binding */ ObservableQuery),\n/* harmony export */   logMissingFieldErrors: () => (/* binding */ logMissingFieldErrors),\n/* harmony export */   reobserveCacheFirst: () => (/* binding */ reobserveCacheFirst)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.mjs\");\n/* harmony import */ var _utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utilities/globals/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/globals/index.js\");\n/* harmony import */ var _wry_equality__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wry/equality */ \"(ssr)/./node_modules/@wry/equality/lib/index.js\");\n/* harmony import */ var _networkStatus_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./networkStatus.js */ \"(ssr)/./node_modules/@apollo/client/core/networkStatus.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/graphql/getFromAST.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/common/compact.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/common/cloneDeep.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/observables/iteration.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../utilities/index.js */ \"(ssr)/./node_modules/zen-observable-ts/module.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/observables/subclassing.js\");\n/* harmony import */ var _equalByQuery_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./equalByQuery.js */ \"(ssr)/./node_modules/@apollo/client/core/equalByQuery.js\");\n\n\n\n\n\n\nvar assign = Object.assign, hasOwnProperty = Object.hasOwnProperty;\nvar ObservableQuery = function(_super) {\n    (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__extends)(ObservableQuery, _super);\n    function ObservableQuery(_a) {\n        var queryManager = _a.queryManager, queryInfo = _a.queryInfo, options = _a.options;\n        var _this = _super.call(this, function(observer) {\n            try {\n                var subObserver = observer._subscription._observer;\n                if (subObserver && !subObserver.error) {\n                    subObserver.error = defaultSubscriptionObserverErrorCallback;\n                }\n            } catch (_a) {}\n            var first = !_this.observers.size;\n            _this.observers.add(observer);\n            var last = _this.last;\n            if (last && last.error) {\n                observer.error && observer.error(last.error);\n            } else if (last && last.result) {\n                observer.next && observer.next(last.result);\n            }\n            if (first) {\n                _this.reobserve().catch(function() {});\n            }\n            return function() {\n                if (_this.observers.delete(observer) && !_this.observers.size) {\n                    _this.tearDownQuery();\n                }\n            };\n        }) || this;\n        _this.observers = new Set();\n        _this.subscriptions = new Set();\n        _this.queryInfo = queryInfo;\n        _this.queryManager = queryManager;\n        _this.waitForOwnResult = skipCacheDataFor(options.fetchPolicy);\n        _this.isTornDown = false;\n        var _b = queryManager.defaultOptions.watchQuery, _c = _b === void 0 ? {} : _b, _d = _c.fetchPolicy, defaultFetchPolicy = _d === void 0 ? \"cache-first\" : _d;\n        var _e = options.fetchPolicy, fetchPolicy = _e === void 0 ? defaultFetchPolicy : _e, _f = options.initialFetchPolicy, initialFetchPolicy = _f === void 0 ? fetchPolicy === \"standby\" ? defaultFetchPolicy : fetchPolicy : _f;\n        _this.options = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, options), {\n            initialFetchPolicy: initialFetchPolicy,\n            fetchPolicy: fetchPolicy\n        });\n        _this.queryId = queryInfo.queryId || queryManager.generateQueryId();\n        var opDef = (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_3__.getOperationDefinition)(_this.query);\n        _this.queryName = opDef && opDef.name && opDef.name.value;\n        return _this;\n    }\n    Object.defineProperty(ObservableQuery.prototype, \"query\", {\n        get: function() {\n            return this.lastQuery || this.options.query;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ObservableQuery.prototype, \"variables\", {\n        get: function() {\n            return this.options.variables;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ObservableQuery.prototype.result = function() {\n        var _this = this;\n        return new Promise(function(resolve, reject) {\n            var observer = {\n                next: function(result) {\n                    resolve(result);\n                    _this.observers.delete(observer);\n                    if (!_this.observers.size) {\n                        _this.queryManager.removeQuery(_this.queryId);\n                    }\n                    setTimeout(function() {\n                        subscription.unsubscribe();\n                    }, 0);\n                },\n                error: reject\n            };\n            var subscription = _this.subscribe(observer);\n        });\n    };\n    ObservableQuery.prototype.getCurrentResult = function(saveAsLastResult) {\n        if (saveAsLastResult === void 0) {\n            saveAsLastResult = true;\n        }\n        var lastResult = this.getLastResult(true);\n        var networkStatus = this.queryInfo.networkStatus || lastResult && lastResult.networkStatus || _networkStatus_js__WEBPACK_IMPORTED_MODULE_4__.NetworkStatus.ready;\n        var result = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, lastResult), {\n            loading: (0,_networkStatus_js__WEBPACK_IMPORTED_MODULE_4__.isNetworkRequestInFlight)(networkStatus),\n            networkStatus: networkStatus\n        });\n        var _a = this.options.fetchPolicy, fetchPolicy = _a === void 0 ? \"cache-first\" : _a;\n        if (skipCacheDataFor(fetchPolicy) || this.queryManager.getDocumentInfo(this.query).hasForcedResolvers) {} else if (this.waitForOwnResult) {\n            this.queryInfo[\"updateWatch\"]();\n        } else {\n            var diff = this.queryInfo.getDiff();\n            if (diff.complete || this.options.returnPartialData) {\n                result.data = diff.result;\n            }\n            if ((0,_wry_equality__WEBPACK_IMPORTED_MODULE_1__.equal)(result.data, {})) {\n                result.data = void 0;\n            }\n            if (diff.complete) {\n                delete result.partial;\n                if (diff.complete && result.networkStatus === _networkStatus_js__WEBPACK_IMPORTED_MODULE_4__.NetworkStatus.loading && (fetchPolicy === \"cache-first\" || fetchPolicy === \"cache-only\")) {\n                    result.networkStatus = _networkStatus_js__WEBPACK_IMPORTED_MODULE_4__.NetworkStatus.ready;\n                    result.loading = false;\n                }\n            } else {\n                result.partial = true;\n            }\n            if (globalThis.__DEV__ !== false && !diff.complete && !this.options.partialRefetch && !result.loading && !result.data && !result.error) {\n                logMissingFieldErrors(diff.missing);\n            }\n        }\n        if (saveAsLastResult) {\n            this.updateLastResult(result);\n        }\n        return result;\n    };\n    ObservableQuery.prototype.isDifferentFromLastResult = function(newResult, variables) {\n        if (!this.last) {\n            return true;\n        }\n        var resultIsDifferent = this.queryManager.getDocumentInfo(this.query).hasNonreactiveDirective ? !(0,_equalByQuery_js__WEBPACK_IMPORTED_MODULE_5__.equalByQuery)(this.query, this.last.result, newResult, this.variables) : !(0,_wry_equality__WEBPACK_IMPORTED_MODULE_1__.equal)(this.last.result, newResult);\n        return resultIsDifferent || variables && !(0,_wry_equality__WEBPACK_IMPORTED_MODULE_1__.equal)(this.last.variables, variables);\n    };\n    ObservableQuery.prototype.getLast = function(key, variablesMustMatch) {\n        var last = this.last;\n        if (last && last[key] && (!variablesMustMatch || (0,_wry_equality__WEBPACK_IMPORTED_MODULE_1__.equal)(last.variables, this.variables))) {\n            return last[key];\n        }\n    };\n    ObservableQuery.prototype.getLastResult = function(variablesMustMatch) {\n        return this.getLast(\"result\", variablesMustMatch);\n    };\n    ObservableQuery.prototype.getLastError = function(variablesMustMatch) {\n        return this.getLast(\"error\", variablesMustMatch);\n    };\n    ObservableQuery.prototype.resetLastResults = function() {\n        delete this.last;\n        this.isTornDown = false;\n    };\n    ObservableQuery.prototype.resetQueryStoreErrors = function() {\n        this.queryManager.resetErrors(this.queryId);\n    };\n    ObservableQuery.prototype.refetch = function(variables) {\n        var _a;\n        var reobserveOptions = {\n            pollInterval: 0\n        };\n        var fetchPolicy = this.options.fetchPolicy;\n        if (fetchPolicy === \"cache-and-network\") {\n            reobserveOptions.fetchPolicy = fetchPolicy;\n        } else if (fetchPolicy === \"no-cache\") {\n            reobserveOptions.fetchPolicy = \"no-cache\";\n        } else {\n            reobserveOptions.fetchPolicy = \"network-only\";\n        }\n        if (globalThis.__DEV__ !== false && variables && hasOwnProperty.call(variables, \"variables\")) {\n            var queryDef = (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_3__.getQueryDefinition)(this.query);\n            var vars = queryDef.variableDefinitions;\n            if (!vars || !vars.some(function(v) {\n                return v.variable.name.value === \"variables\";\n            })) {\n                globalThis.__DEV__ !== false && _utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.invariant.warn(20, variables, ((_a = queryDef.name) === null || _a === void 0 ? void 0 : _a.value) || queryDef);\n            }\n        }\n        if (variables && !(0,_wry_equality__WEBPACK_IMPORTED_MODULE_1__.equal)(this.options.variables, variables)) {\n            reobserveOptions.variables = this.options.variables = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, this.options.variables), variables);\n        }\n        this.queryInfo.resetLastWrite();\n        return this.reobserve(reobserveOptions, _networkStatus_js__WEBPACK_IMPORTED_MODULE_4__.NetworkStatus.refetch);\n    };\n    ObservableQuery.prototype.fetchMore = function(fetchMoreOptions) {\n        var _this = this;\n        var combinedOptions = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, fetchMoreOptions.query ? fetchMoreOptions : (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, this.options), {\n            query: this.options.query\n        }), fetchMoreOptions), {\n            variables: (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, this.options.variables), fetchMoreOptions.variables)\n        })), {\n            fetchPolicy: \"no-cache\"\n        });\n        combinedOptions.query = this.transformDocument(combinedOptions.query);\n        var qid = this.queryManager.generateQueryId();\n        this.lastQuery = fetchMoreOptions.query ? this.transformDocument(this.options.query) : combinedOptions.query;\n        var queryInfo = this.queryInfo;\n        var originalNetworkStatus = queryInfo.networkStatus;\n        queryInfo.networkStatus = _networkStatus_js__WEBPACK_IMPORTED_MODULE_4__.NetworkStatus.fetchMore;\n        if (combinedOptions.notifyOnNetworkStatusChange) {\n            this.observe();\n        }\n        var updatedQuerySet = new Set();\n        return this.queryManager.fetchQuery(qid, combinedOptions, _networkStatus_js__WEBPACK_IMPORTED_MODULE_4__.NetworkStatus.fetchMore).then(function(fetchMoreResult) {\n            _this.queryManager.removeQuery(qid);\n            if (queryInfo.networkStatus === _networkStatus_js__WEBPACK_IMPORTED_MODULE_4__.NetworkStatus.fetchMore) {\n                queryInfo.networkStatus = originalNetworkStatus;\n            }\n            _this.queryManager.cache.batch({\n                update: function(cache) {\n                    var updateQuery = fetchMoreOptions.updateQuery;\n                    if (updateQuery) {\n                        cache.updateQuery({\n                            query: _this.query,\n                            variables: _this.variables,\n                            returnPartialData: true,\n                            optimistic: false\n                        }, function(previous) {\n                            return updateQuery(previous, {\n                                fetchMoreResult: fetchMoreResult.data,\n                                variables: combinedOptions.variables\n                            });\n                        });\n                    } else {\n                        cache.writeQuery({\n                            query: combinedOptions.query,\n                            variables: combinedOptions.variables,\n                            data: fetchMoreResult.data\n                        });\n                    }\n                },\n                onWatchUpdated: function(watch) {\n                    updatedQuerySet.add(watch.query);\n                }\n            });\n            return fetchMoreResult;\n        }).finally(function() {\n            if (!updatedQuerySet.has(_this.query)) {\n                reobserveCacheFirst(_this);\n            }\n        });\n    };\n    ObservableQuery.prototype.subscribeToMore = function(options) {\n        var _this = this;\n        var subscription = this.queryManager.startGraphQLSubscription({\n            query: options.document,\n            variables: options.variables,\n            context: options.context\n        }).subscribe({\n            next: function(subscriptionData) {\n                var updateQuery = options.updateQuery;\n                if (updateQuery) {\n                    _this.updateQuery(function(previous, _a) {\n                        var variables = _a.variables;\n                        return updateQuery(previous, {\n                            subscriptionData: subscriptionData,\n                            variables: variables\n                        });\n                    });\n                }\n            },\n            error: function(err) {\n                if (options.onError) {\n                    options.onError(err);\n                    return;\n                }\n                globalThis.__DEV__ !== false && _utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.invariant.error(21, err);\n            }\n        });\n        this.subscriptions.add(subscription);\n        return function() {\n            if (_this.subscriptions.delete(subscription)) {\n                subscription.unsubscribe();\n            }\n        };\n    };\n    ObservableQuery.prototype.setOptions = function(newOptions) {\n        return this.reobserve(newOptions);\n    };\n    ObservableQuery.prototype.silentSetOptions = function(newOptions) {\n        var mergedOptions = (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_6__.compact)(this.options, newOptions || {});\n        assign(this.options, mergedOptions);\n    };\n    ObservableQuery.prototype.setVariables = function(variables) {\n        if ((0,_wry_equality__WEBPACK_IMPORTED_MODULE_1__.equal)(this.variables, variables)) {\n            return this.observers.size ? this.result() : Promise.resolve();\n        }\n        this.options.variables = variables;\n        if (!this.observers.size) {\n            return Promise.resolve();\n        }\n        return this.reobserve({\n            fetchPolicy: this.options.initialFetchPolicy,\n            variables: variables\n        }, _networkStatus_js__WEBPACK_IMPORTED_MODULE_4__.NetworkStatus.setVariables);\n    };\n    ObservableQuery.prototype.updateQuery = function(mapFn) {\n        var queryManager = this.queryManager;\n        var result = queryManager.cache.diff({\n            query: this.options.query,\n            variables: this.variables,\n            returnPartialData: true,\n            optimistic: false\n        }).result;\n        var newResult = mapFn(result, {\n            variables: this.variables\n        });\n        if (newResult) {\n            queryManager.cache.writeQuery({\n                query: this.options.query,\n                data: newResult,\n                variables: this.variables\n            });\n            queryManager.broadcastQueries();\n        }\n    };\n    ObservableQuery.prototype.startPolling = function(pollInterval) {\n        this.options.pollInterval = pollInterval;\n        this.updatePolling();\n    };\n    ObservableQuery.prototype.stopPolling = function() {\n        this.options.pollInterval = 0;\n        this.updatePolling();\n    };\n    ObservableQuery.prototype.applyNextFetchPolicy = function(reason, options) {\n        if (options.nextFetchPolicy) {\n            var _a = options.fetchPolicy, fetchPolicy = _a === void 0 ? \"cache-first\" : _a, _b = options.initialFetchPolicy, initialFetchPolicy = _b === void 0 ? fetchPolicy : _b;\n            if (fetchPolicy === \"standby\") {} else if (typeof options.nextFetchPolicy === \"function\") {\n                options.fetchPolicy = options.nextFetchPolicy(fetchPolicy, {\n                    reason: reason,\n                    options: options,\n                    observable: this,\n                    initialFetchPolicy: initialFetchPolicy\n                });\n            } else if (reason === \"variables-changed\") {\n                options.fetchPolicy = initialFetchPolicy;\n            } else {\n                options.fetchPolicy = options.nextFetchPolicy;\n            }\n        }\n        return options.fetchPolicy;\n    };\n    ObservableQuery.prototype.fetch = function(options, newNetworkStatus, query) {\n        this.queryManager.setObservableQuery(this);\n        return this.queryManager[\"fetchConcastWithInfo\"](this.queryId, options, newNetworkStatus, query);\n    };\n    ObservableQuery.prototype.updatePolling = function() {\n        var _this = this;\n        if (this.queryManager.ssrMode) {\n            return;\n        }\n        var _a = this, pollingInfo = _a.pollingInfo, pollInterval = _a.options.pollInterval;\n        if (!pollInterval) {\n            if (pollingInfo) {\n                clearTimeout(pollingInfo.timeout);\n                delete this.pollingInfo;\n            }\n            return;\n        }\n        if (pollingInfo && pollingInfo.interval === pollInterval) {\n            return;\n        }\n        (0,_utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.invariant)(pollInterval, 22);\n        var info = pollingInfo || (this.pollingInfo = {});\n        info.interval = pollInterval;\n        var maybeFetch = function() {\n            if (_this.pollingInfo) {\n                if (!(0,_networkStatus_js__WEBPACK_IMPORTED_MODULE_4__.isNetworkRequestInFlight)(_this.queryInfo.networkStatus)) {\n                    _this.reobserve({\n                        fetchPolicy: _this.options.initialFetchPolicy === \"no-cache\" ? \"no-cache\" : \"network-only\"\n                    }, _networkStatus_js__WEBPACK_IMPORTED_MODULE_4__.NetworkStatus.poll).then(poll, poll);\n                } else {\n                    poll();\n                }\n            }\n        };\n        var poll = function() {\n            var info = _this.pollingInfo;\n            if (info) {\n                clearTimeout(info.timeout);\n                info.timeout = setTimeout(maybeFetch, info.interval);\n            }\n        };\n        poll();\n    };\n    ObservableQuery.prototype.updateLastResult = function(newResult, variables) {\n        if (variables === void 0) {\n            variables = this.variables;\n        }\n        var error = this.getLastError();\n        if (error && this.last && !(0,_wry_equality__WEBPACK_IMPORTED_MODULE_1__.equal)(variables, this.last.variables)) {\n            error = void 0;\n        }\n        return this.last = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({\n            result: this.queryManager.assumeImmutableResults ? newResult : (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_7__.cloneDeep)(newResult),\n            variables: variables\n        }, error ? {\n            error: error\n        } : null);\n    };\n    ObservableQuery.prototype.reobserveAsConcast = function(newOptions, newNetworkStatus) {\n        var _this = this;\n        this.isTornDown = false;\n        var useDisposableConcast = newNetworkStatus === _networkStatus_js__WEBPACK_IMPORTED_MODULE_4__.NetworkStatus.refetch || newNetworkStatus === _networkStatus_js__WEBPACK_IMPORTED_MODULE_4__.NetworkStatus.fetchMore || newNetworkStatus === _networkStatus_js__WEBPACK_IMPORTED_MODULE_4__.NetworkStatus.poll;\n        var oldVariables = this.options.variables;\n        var oldFetchPolicy = this.options.fetchPolicy;\n        var mergedOptions = (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_6__.compact)(this.options, newOptions || {});\n        var options = useDisposableConcast ? mergedOptions : assign(this.options, mergedOptions);\n        var query = this.transformDocument(options.query);\n        this.lastQuery = query;\n        if (!useDisposableConcast) {\n            this.updatePolling();\n            if (newOptions && newOptions.variables && !(0,_wry_equality__WEBPACK_IMPORTED_MODULE_1__.equal)(newOptions.variables, oldVariables) && options.fetchPolicy !== \"standby\" && options.fetchPolicy === oldFetchPolicy) {\n                this.applyNextFetchPolicy(\"variables-changed\", options);\n                if (newNetworkStatus === void 0) {\n                    newNetworkStatus = _networkStatus_js__WEBPACK_IMPORTED_MODULE_4__.NetworkStatus.setVariables;\n                }\n            }\n        }\n        this.waitForOwnResult && (this.waitForOwnResult = skipCacheDataFor(options.fetchPolicy));\n        var finishWaitingForOwnResult = function() {\n            if (_this.concast === concast) {\n                _this.waitForOwnResult = false;\n            }\n        };\n        var variables = options.variables && (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, options.variables);\n        var _a = this.fetch(options, newNetworkStatus, query), concast = _a.concast, fromLink = _a.fromLink;\n        var observer = {\n            next: function(result) {\n                finishWaitingForOwnResult();\n                _this.reportResult(result, variables);\n            },\n            error: function(error) {\n                finishWaitingForOwnResult();\n                _this.reportError(error, variables);\n            }\n        };\n        if (!useDisposableConcast && (fromLink || !this.concast)) {\n            if (this.concast && this.observer) {\n                this.concast.removeObserver(this.observer);\n            }\n            this.concast = concast;\n            this.observer = observer;\n        }\n        concast.addObserver(observer);\n        return concast;\n    };\n    ObservableQuery.prototype.reobserve = function(newOptions, newNetworkStatus) {\n        return this.reobserveAsConcast(newOptions, newNetworkStatus).promise;\n    };\n    ObservableQuery.prototype.resubscribeAfterError = function() {\n        var args = [];\n        for(var _i = 0; _i < arguments.length; _i++){\n            args[_i] = arguments[_i];\n        }\n        var last = this.last;\n        this.resetLastResults();\n        var subscription = this.subscribe.apply(this, args);\n        this.last = last;\n        return subscription;\n    };\n    ObservableQuery.prototype.observe = function() {\n        this.reportResult(this.getCurrentResult(false), this.variables);\n    };\n    ObservableQuery.prototype.reportResult = function(result, variables) {\n        var lastError = this.getLastError();\n        var isDifferent = this.isDifferentFromLastResult(result, variables);\n        if (lastError || !result.partial || this.options.returnPartialData) {\n            this.updateLastResult(result, variables);\n        }\n        if (lastError || isDifferent) {\n            (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_8__.iterateObserversSafely)(this.observers, \"next\", result);\n        }\n    };\n    ObservableQuery.prototype.reportError = function(error, variables) {\n        var errorResult = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, this.getLastResult()), {\n            error: error,\n            errors: error.graphQLErrors,\n            networkStatus: _networkStatus_js__WEBPACK_IMPORTED_MODULE_4__.NetworkStatus.error,\n            loading: false\n        });\n        this.updateLastResult(errorResult, variables);\n        (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_8__.iterateObserversSafely)(this.observers, \"error\", this.last.error = error);\n    };\n    ObservableQuery.prototype.hasObservers = function() {\n        return this.observers.size > 0;\n    };\n    ObservableQuery.prototype.tearDownQuery = function() {\n        if (this.isTornDown) return;\n        if (this.concast && this.observer) {\n            this.concast.removeObserver(this.observer);\n            delete this.concast;\n            delete this.observer;\n        }\n        this.stopPolling();\n        this.subscriptions.forEach(function(sub) {\n            return sub.unsubscribe();\n        });\n        this.subscriptions.clear();\n        this.queryManager.stopQuery(this.queryId);\n        this.observers.clear();\n        this.isTornDown = true;\n    };\n    ObservableQuery.prototype.transformDocument = function(document) {\n        return this.queryManager.transform(document);\n    };\n    return ObservableQuery;\n}(_utilities_index_js__WEBPACK_IMPORTED_MODULE_9__.Observable);\n\n(0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_10__.fixObservableSubclass)(ObservableQuery);\nfunction reobserveCacheFirst(obsQuery) {\n    var _a = obsQuery.options, fetchPolicy = _a.fetchPolicy, nextFetchPolicy = _a.nextFetchPolicy;\n    if (fetchPolicy === \"cache-and-network\" || fetchPolicy === \"network-only\") {\n        return obsQuery.reobserve({\n            fetchPolicy: \"cache-first\",\n            nextFetchPolicy: function() {\n                this.nextFetchPolicy = nextFetchPolicy;\n                if (typeof nextFetchPolicy === \"function\") {\n                    return nextFetchPolicy.apply(this, arguments);\n                }\n                return fetchPolicy;\n            }\n        });\n    }\n    return obsQuery.reobserve();\n}\nfunction defaultSubscriptionObserverErrorCallback(error) {\n    globalThis.__DEV__ !== false && _utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.invariant.error(23, error.message, error.stack);\n}\nfunction logMissingFieldErrors(missing) {\n    if (globalThis.__DEV__ !== false && missing) {\n        globalThis.__DEV__ !== false && _utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.invariant.debug(24, missing);\n    }\n}\nfunction skipCacheDataFor(fetchPolicy) {\n    return fetchPolicy === \"network-only\" || fetchPolicy === \"no-cache\" || fetchPolicy === \"standby\";\n} //# sourceMappingURL=ObservableQuery.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/core/ObservableQuery.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/core/QueryInfo.js":
/*!*******************************************************!*\
  !*** ./node_modules/@apollo/client/core/QueryInfo.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QueryInfo: () => (/* binding */ QueryInfo),\n/* harmony export */   shouldWriteResult: () => (/* binding */ shouldWriteResult)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.mjs\");\n/* harmony import */ var _wry_equality__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wry/equality */ \"(ssr)/./node_modules/@wry/equality/lib/index.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/common/mergeDeep.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/common/incrementalResult.js\");\n/* harmony import */ var _ObservableQuery_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ObservableQuery.js */ \"(ssr)/./node_modules/@apollo/client/core/ObservableQuery.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/common/canUse.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/common/arrays.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/common/errorHandling.js\");\n/* harmony import */ var _networkStatus_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./networkStatus.js */ \"(ssr)/./node_modules/@apollo/client/core/networkStatus.js\");\n\n\n\n\n\n\n\nvar destructiveMethodCounts = new (_utilities_index_js__WEBPACK_IMPORTED_MODULE_1__.canUseWeakMap ? WeakMap : Map)();\nfunction wrapDestructiveCacheMethod(cache, methodName) {\n    var original = cache[methodName];\n    if (typeof original === \"function\") {\n        cache[methodName] = function() {\n            destructiveMethodCounts.set(cache, (destructiveMethodCounts.get(cache) + 1) % 1e15);\n            return original.apply(this, arguments);\n        };\n    }\n}\nfunction cancelNotifyTimeout(info) {\n    if (info[\"notifyTimeout\"]) {\n        clearTimeout(info[\"notifyTimeout\"]);\n        info[\"notifyTimeout\"] = void 0;\n    }\n}\nvar QueryInfo = function() {\n    function QueryInfo(queryManager, queryId) {\n        if (queryId === void 0) {\n            queryId = queryManager.generateQueryId();\n        }\n        this.queryId = queryId;\n        this.listeners = new Set();\n        this.document = null;\n        this.lastRequestId = 1;\n        this.stopped = false;\n        this.dirty = false;\n        this.observableQuery = null;\n        var cache = this.cache = queryManager.cache;\n        if (!destructiveMethodCounts.has(cache)) {\n            destructiveMethodCounts.set(cache, 0);\n            wrapDestructiveCacheMethod(cache, \"evict\");\n            wrapDestructiveCacheMethod(cache, \"modify\");\n            wrapDestructiveCacheMethod(cache, \"reset\");\n        }\n    }\n    QueryInfo.prototype.init = function(query) {\n        var networkStatus = query.networkStatus || _networkStatus_js__WEBPACK_IMPORTED_MODULE_2__.NetworkStatus.loading;\n        if (this.variables && this.networkStatus !== _networkStatus_js__WEBPACK_IMPORTED_MODULE_2__.NetworkStatus.loading && !(0,_wry_equality__WEBPACK_IMPORTED_MODULE_0__.equal)(this.variables, query.variables)) {\n            networkStatus = _networkStatus_js__WEBPACK_IMPORTED_MODULE_2__.NetworkStatus.setVariables;\n        }\n        if (!(0,_wry_equality__WEBPACK_IMPORTED_MODULE_0__.equal)(query.variables, this.variables)) {\n            this.lastDiff = void 0;\n        }\n        Object.assign(this, {\n            document: query.document,\n            variables: query.variables,\n            networkError: null,\n            graphQLErrors: this.graphQLErrors || [],\n            networkStatus: networkStatus\n        });\n        if (query.observableQuery) {\n            this.setObservableQuery(query.observableQuery);\n        }\n        if (query.lastRequestId) {\n            this.lastRequestId = query.lastRequestId;\n        }\n        return this;\n    };\n    QueryInfo.prototype.reset = function() {\n        cancelNotifyTimeout(this);\n        this.dirty = false;\n    };\n    QueryInfo.prototype.getDiff = function() {\n        var options = this.getDiffOptions();\n        if (this.lastDiff && (0,_wry_equality__WEBPACK_IMPORTED_MODULE_0__.equal)(options, this.lastDiff.options)) {\n            return this.lastDiff.diff;\n        }\n        this.updateWatch(this.variables);\n        var oq = this.observableQuery;\n        if (oq && oq.options.fetchPolicy === \"no-cache\") {\n            return {\n                complete: false\n            };\n        }\n        var diff = this.cache.diff(options);\n        this.updateLastDiff(diff, options);\n        return diff;\n    };\n    QueryInfo.prototype.updateLastDiff = function(diff, options) {\n        this.lastDiff = diff ? {\n            diff: diff,\n            options: options || this.getDiffOptions()\n        } : void 0;\n    };\n    QueryInfo.prototype.getDiffOptions = function(variables) {\n        var _a;\n        if (variables === void 0) {\n            variables = this.variables;\n        }\n        return {\n            query: this.document,\n            variables: variables,\n            returnPartialData: true,\n            optimistic: true,\n            canonizeResults: (_a = this.observableQuery) === null || _a === void 0 ? void 0 : _a.options.canonizeResults\n        };\n    };\n    QueryInfo.prototype.setDiff = function(diff) {\n        var _this = this;\n        var oldDiff = this.lastDiff && this.lastDiff.diff;\n        this.updateLastDiff(diff);\n        if (!this.dirty && !(0,_wry_equality__WEBPACK_IMPORTED_MODULE_0__.equal)(oldDiff && oldDiff.result, diff && diff.result)) {\n            this.dirty = true;\n            if (!this.notifyTimeout) {\n                this.notifyTimeout = setTimeout(function() {\n                    return _this.notify();\n                }, 0);\n            }\n        }\n    };\n    QueryInfo.prototype.setObservableQuery = function(oq) {\n        var _this = this;\n        if (oq === this.observableQuery) return;\n        if (this.oqListener) {\n            this.listeners.delete(this.oqListener);\n        }\n        this.observableQuery = oq;\n        if (oq) {\n            oq[\"queryInfo\"] = this;\n            this.listeners.add(this.oqListener = function() {\n                var diff = _this.getDiff();\n                if (diff.fromOptimisticTransaction) {\n                    oq[\"observe\"]();\n                } else {\n                    (0,_ObservableQuery_js__WEBPACK_IMPORTED_MODULE_3__.reobserveCacheFirst)(oq);\n                }\n            });\n        } else {\n            delete this.oqListener;\n        }\n    };\n    QueryInfo.prototype.notify = function() {\n        var _this = this;\n        cancelNotifyTimeout(this);\n        if (this.shouldNotify()) {\n            this.listeners.forEach(function(listener) {\n                return listener(_this);\n            });\n        }\n        this.dirty = false;\n    };\n    QueryInfo.prototype.shouldNotify = function() {\n        if (!this.dirty || !this.listeners.size) {\n            return false;\n        }\n        if ((0,_networkStatus_js__WEBPACK_IMPORTED_MODULE_2__.isNetworkRequestInFlight)(this.networkStatus) && this.observableQuery) {\n            var fetchPolicy = this.observableQuery.options.fetchPolicy;\n            if (fetchPolicy !== \"cache-only\" && fetchPolicy !== \"cache-and-network\") {\n                return false;\n            }\n        }\n        return true;\n    };\n    QueryInfo.prototype.stop = function() {\n        if (!this.stopped) {\n            this.stopped = true;\n            this.reset();\n            this.cancel();\n            this.cancel = QueryInfo.prototype.cancel;\n            var oq = this.observableQuery;\n            if (oq) oq.stopPolling();\n        }\n    };\n    QueryInfo.prototype.cancel = function() {};\n    QueryInfo.prototype.updateWatch = function(variables) {\n        var _this = this;\n        if (variables === void 0) {\n            variables = this.variables;\n        }\n        var oq = this.observableQuery;\n        if (oq && oq.options.fetchPolicy === \"no-cache\") {\n            return;\n        }\n        var watchOptions = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, this.getDiffOptions(variables)), {\n            watcher: this,\n            callback: function(diff) {\n                return _this.setDiff(diff);\n            }\n        });\n        if (!this.lastWatch || !(0,_wry_equality__WEBPACK_IMPORTED_MODULE_0__.equal)(watchOptions, this.lastWatch)) {\n            this.cancel();\n            this.cancel = this.cache.watch(this.lastWatch = watchOptions);\n        }\n    };\n    QueryInfo.prototype.resetLastWrite = function() {\n        this.lastWrite = void 0;\n    };\n    QueryInfo.prototype.shouldWrite = function(result, variables) {\n        var lastWrite = this.lastWrite;\n        return !(lastWrite && lastWrite.dmCount === destructiveMethodCounts.get(this.cache) && (0,_wry_equality__WEBPACK_IMPORTED_MODULE_0__.equal)(variables, lastWrite.variables) && (0,_wry_equality__WEBPACK_IMPORTED_MODULE_0__.equal)(result.data, lastWrite.result.data));\n    };\n    QueryInfo.prototype.markResult = function(result, document, options, cacheWriteBehavior) {\n        var _this = this;\n        var merger = new _utilities_index_js__WEBPACK_IMPORTED_MODULE_5__.DeepMerger();\n        var graphQLErrors = (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_6__.isNonEmptyArray)(result.errors) ? result.errors.slice(0) : [];\n        this.reset();\n        if (\"incremental\" in result && (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_6__.isNonEmptyArray)(result.incremental)) {\n            var mergedData = (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_7__.mergeIncrementalData)(this.getDiff().result, result);\n            result.data = mergedData;\n        } else if (\"hasNext\" in result && result.hasNext) {\n            var diff = this.getDiff();\n            result.data = merger.merge(diff.result, result.data);\n        }\n        this.graphQLErrors = graphQLErrors;\n        if (options.fetchPolicy === \"no-cache\") {\n            this.updateLastDiff({\n                result: result.data,\n                complete: true\n            }, this.getDiffOptions(options.variables));\n        } else if (cacheWriteBehavior !== 0) {\n            if (shouldWriteResult(result, options.errorPolicy)) {\n                this.cache.performTransaction(function(cache) {\n                    if (_this.shouldWrite(result, options.variables)) {\n                        cache.writeQuery({\n                            query: document,\n                            data: result.data,\n                            variables: options.variables,\n                            overwrite: cacheWriteBehavior === 1\n                        });\n                        _this.lastWrite = {\n                            result: result,\n                            variables: options.variables,\n                            dmCount: destructiveMethodCounts.get(_this.cache)\n                        };\n                    } else {\n                        if (_this.lastDiff && _this.lastDiff.diff.complete) {\n                            result.data = _this.lastDiff.diff.result;\n                            return;\n                        }\n                    }\n                    var diffOptions = _this.getDiffOptions(options.variables);\n                    var diff = cache.diff(diffOptions);\n                    if (!_this.stopped && (0,_wry_equality__WEBPACK_IMPORTED_MODULE_0__.equal)(_this.variables, options.variables)) {\n                        _this.updateWatch(options.variables);\n                    }\n                    _this.updateLastDiff(diff, diffOptions);\n                    if (diff.complete) {\n                        result.data = diff.result;\n                    }\n                });\n            } else {\n                this.lastWrite = void 0;\n            }\n        }\n    };\n    QueryInfo.prototype.markReady = function() {\n        this.networkError = null;\n        return this.networkStatus = _networkStatus_js__WEBPACK_IMPORTED_MODULE_2__.NetworkStatus.ready;\n    };\n    QueryInfo.prototype.markError = function(error) {\n        this.networkStatus = _networkStatus_js__WEBPACK_IMPORTED_MODULE_2__.NetworkStatus.error;\n        this.lastWrite = void 0;\n        this.reset();\n        if (error.graphQLErrors) {\n            this.graphQLErrors = error.graphQLErrors;\n        }\n        if (error.networkError) {\n            this.networkError = error.networkError;\n        }\n        return error;\n    };\n    return QueryInfo;\n}();\n\nfunction shouldWriteResult(result, errorPolicy) {\n    if (errorPolicy === void 0) {\n        errorPolicy = \"none\";\n    }\n    var ignoreErrors = errorPolicy === \"ignore\" || errorPolicy === \"all\";\n    var writeWithErrors = !(0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_8__.graphQLResultHasError)(result);\n    if (!writeWithErrors && ignoreErrors && result.data) {\n        writeWithErrors = true;\n    }\n    return writeWithErrors;\n} //# sourceMappingURL=QueryInfo.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/core/QueryInfo.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/core/QueryManager.js":
/*!**********************************************************!*\
  !*** ./node_modules/@apollo/client/core/QueryManager.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QueryManager: () => (/* binding */ QueryManager)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.mjs\");\n/* harmony import */ var _utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utilities/globals/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/globals/index.js\");\n/* harmony import */ var _wry_equality__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wry/equality */ \"(ssr)/./node_modules/@wry/equality/lib/index.js\");\n/* harmony import */ var _link_core_index_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ../link/core/index.js */ \"(ssr)/./node_modules/@apollo/client/link/core/execute.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../utilities/common/incrementalResult.js */ \"(ssr)/./node_modules/@apollo/client/utilities/common/incrementalResult.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/graphql/directives.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/graphql/transform.js\");\n/* harmony import */ var _cache_index_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../cache/index.js */ \"(ssr)/./node_modules/@apollo/client/cache/inmemory/object-canon.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/common/canUse.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/graphql/DocumentTransform.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/observables/asyncMap.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/common/errorHandling.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/common/arrays.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/graphql/getFromAST.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/graphql/storeUtils.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/common/objects.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/common/makeUniqueId.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../utilities/index.js */ \"(ssr)/./node_modules/zen-observable-ts/module.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/observables/Concast.js\");\n/* harmony import */ var _errors_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../errors/index.js */ \"(ssr)/./node_modules/@apollo/client/errors/index.js\");\n/* harmony import */ var _ObservableQuery_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./ObservableQuery.js */ \"(ssr)/./node_modules/@apollo/client/core/ObservableQuery.js\");\n/* harmony import */ var _networkStatus_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./networkStatus.js */ \"(ssr)/./node_modules/@apollo/client/core/networkStatus.js\");\n/* harmony import */ var _LocalState_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./LocalState.js */ \"(ssr)/./node_modules/@apollo/client/core/LocalState.js\");\n/* harmony import */ var _QueryInfo_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./QueryInfo.js */ \"(ssr)/./node_modules/@apollo/client/core/QueryInfo.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/graphql/print.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar QueryManager = function() {\n    function QueryManager(_a) {\n        var _this = this;\n        var cache = _a.cache, link = _a.link, defaultOptions = _a.defaultOptions, documentTransform = _a.documentTransform, _b = _a.queryDeduplication, queryDeduplication = _b === void 0 ? false : _b, onBroadcast = _a.onBroadcast, _c = _a.ssrMode, ssrMode = _c === void 0 ? false : _c, _d = _a.clientAwareness, clientAwareness = _d === void 0 ? {} : _d, localState = _a.localState, _e = _a.assumeImmutableResults, assumeImmutableResults = _e === void 0 ? !!cache.assumeImmutableResults : _e;\n        this.clientAwareness = {};\n        this.queries = new Map();\n        this.fetchCancelFns = new Map();\n        this.transformCache = new (_utilities_index_js__WEBPACK_IMPORTED_MODULE_2__.canUseWeakMap ? WeakMap : Map)();\n        this.queryIdCounter = 1;\n        this.requestIdCounter = 1;\n        this.mutationIdCounter = 1;\n        this.inFlightLinkObservables = new Map();\n        var defaultDocumentTransform = new _utilities_index_js__WEBPACK_IMPORTED_MODULE_3__.DocumentTransform(function(document) {\n            return _this.cache.transformDocument(document);\n        }, {\n            cache: false\n        });\n        this.cache = cache;\n        this.link = link;\n        this.defaultOptions = defaultOptions || Object.create(null);\n        this.queryDeduplication = queryDeduplication;\n        this.clientAwareness = clientAwareness;\n        this.localState = localState || new _LocalState_js__WEBPACK_IMPORTED_MODULE_4__.LocalState({\n            cache: cache\n        });\n        this.ssrMode = ssrMode;\n        this.assumeImmutableResults = assumeImmutableResults;\n        this.documentTransform = documentTransform ? defaultDocumentTransform.concat(documentTransform).concat(defaultDocumentTransform) : defaultDocumentTransform;\n        if (this.onBroadcast = onBroadcast) {\n            this.mutationStore = Object.create(null);\n        }\n    }\n    QueryManager.prototype.stop = function() {\n        var _this = this;\n        this.queries.forEach(function(_info, queryId) {\n            _this.stopQueryNoBroadcast(queryId);\n        });\n        this.cancelPendingFetches((0,_utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.newInvariantError)(25));\n    };\n    QueryManager.prototype.cancelPendingFetches = function(error) {\n        this.fetchCancelFns.forEach(function(cancel) {\n            return cancel(error);\n        });\n        this.fetchCancelFns.clear();\n    };\n    QueryManager.prototype.mutate = function(_a) {\n        var _b, _c;\n        var mutation = _a.mutation, variables = _a.variables, optimisticResponse = _a.optimisticResponse, updateQueries = _a.updateQueries, _d = _a.refetchQueries, refetchQueries = _d === void 0 ? [] : _d, _e = _a.awaitRefetchQueries, awaitRefetchQueries = _e === void 0 ? false : _e, updateWithProxyFn = _a.update, onQueryUpdated = _a.onQueryUpdated, _f = _a.fetchPolicy, fetchPolicy = _f === void 0 ? ((_b = this.defaultOptions.mutate) === null || _b === void 0 ? void 0 : _b.fetchPolicy) || \"network-only\" : _f, _g = _a.errorPolicy, errorPolicy = _g === void 0 ? ((_c = this.defaultOptions.mutate) === null || _c === void 0 ? void 0 : _c.errorPolicy) || \"none\" : _g, keepRootFields = _a.keepRootFields, context = _a.context;\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__awaiter)(this, void 0, void 0, function() {\n            var mutationId, hasClientExports, mutationStoreValue, self;\n            return (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__generator)(this, function(_h) {\n                switch(_h.label){\n                    case 0:\n                        (0,_utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.invariant)(mutation, 26);\n                        (0,_utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.invariant)(fetchPolicy === \"network-only\" || fetchPolicy === \"no-cache\", 27);\n                        mutationId = this.generateMutationId();\n                        mutation = this.cache.transformForLink(this.transform(mutation));\n                        hasClientExports = this.getDocumentInfo(mutation).hasClientExports;\n                        variables = this.getVariables(mutation, variables);\n                        if (!hasClientExports) return [\n                            3,\n                            2\n                        ];\n                        return [\n                            4,\n                            this.localState.addExportedVariables(mutation, variables, context)\n                        ];\n                    case 1:\n                        variables = _h.sent();\n                        _h.label = 2;\n                    case 2:\n                        mutationStoreValue = this.mutationStore && (this.mutationStore[mutationId] = {\n                            mutation: mutation,\n                            variables: variables,\n                            loading: true,\n                            error: null\n                        });\n                        if (optimisticResponse) {\n                            this.markMutationOptimistic(optimisticResponse, {\n                                mutationId: mutationId,\n                                document: mutation,\n                                variables: variables,\n                                fetchPolicy: fetchPolicy,\n                                errorPolicy: errorPolicy,\n                                context: context,\n                                updateQueries: updateQueries,\n                                update: updateWithProxyFn,\n                                keepRootFields: keepRootFields\n                            });\n                        }\n                        this.broadcastQueries();\n                        self = this;\n                        return [\n                            2,\n                            new Promise(function(resolve, reject) {\n                                return (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_6__.asyncMap)(self.getObservableFromLink(mutation, (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_5__.__assign)({}, context), {\n                                    optimisticResponse: optimisticResponse\n                                }), variables, false), function(result) {\n                                    if ((0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_7__.graphQLResultHasError)(result) && errorPolicy === \"none\") {\n                                        throw new _errors_index_js__WEBPACK_IMPORTED_MODULE_8__.ApolloError({\n                                            graphQLErrors: (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_7__.getGraphQLErrorsFromResult)(result)\n                                        });\n                                    }\n                                    if (mutationStoreValue) {\n                                        mutationStoreValue.loading = false;\n                                        mutationStoreValue.error = null;\n                                    }\n                                    var storeResult = (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__assign)({}, result);\n                                    if (typeof refetchQueries === \"function\") {\n                                        refetchQueries = refetchQueries(storeResult);\n                                    }\n                                    if (errorPolicy === \"ignore\" && (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_7__.graphQLResultHasError)(storeResult)) {\n                                        delete storeResult.errors;\n                                    }\n                                    return self.markMutationResult({\n                                        mutationId: mutationId,\n                                        result: storeResult,\n                                        document: mutation,\n                                        variables: variables,\n                                        fetchPolicy: fetchPolicy,\n                                        errorPolicy: errorPolicy,\n                                        context: context,\n                                        update: updateWithProxyFn,\n                                        updateQueries: updateQueries,\n                                        awaitRefetchQueries: awaitRefetchQueries,\n                                        refetchQueries: refetchQueries,\n                                        removeOptimistic: optimisticResponse ? mutationId : void 0,\n                                        onQueryUpdated: onQueryUpdated,\n                                        keepRootFields: keepRootFields\n                                    });\n                                }).subscribe({\n                                    next: function(storeResult) {\n                                        self.broadcastQueries();\n                                        if (!(\"hasNext\" in storeResult) || storeResult.hasNext === false) {\n                                            resolve(storeResult);\n                                        }\n                                    },\n                                    error: function(err) {\n                                        if (mutationStoreValue) {\n                                            mutationStoreValue.loading = false;\n                                            mutationStoreValue.error = err;\n                                        }\n                                        if (optimisticResponse) {\n                                            self.cache.removeOptimistic(mutationId);\n                                        }\n                                        self.broadcastQueries();\n                                        reject(err instanceof _errors_index_js__WEBPACK_IMPORTED_MODULE_8__.ApolloError ? err : new _errors_index_js__WEBPACK_IMPORTED_MODULE_8__.ApolloError({\n                                            networkError: err\n                                        }));\n                                    }\n                                });\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    QueryManager.prototype.markMutationResult = function(mutation, cache) {\n        var _this = this;\n        if (cache === void 0) {\n            cache = this.cache;\n        }\n        var result = mutation.result;\n        var cacheWrites = [];\n        var skipCache = mutation.fetchPolicy === \"no-cache\";\n        if (!skipCache && (0,_QueryInfo_js__WEBPACK_IMPORTED_MODULE_9__.shouldWriteResult)(result, mutation.errorPolicy)) {\n            if (!(0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_10__.isExecutionPatchIncrementalResult)(result)) {\n                cacheWrites.push({\n                    result: result.data,\n                    dataId: \"ROOT_MUTATION\",\n                    query: mutation.document,\n                    variables: mutation.variables\n                });\n            }\n            if ((0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_10__.isExecutionPatchIncrementalResult)(result) && (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_11__.isNonEmptyArray)(result.incremental)) {\n                var diff = cache.diff({\n                    id: \"ROOT_MUTATION\",\n                    query: this.getDocumentInfo(mutation.document).asQuery,\n                    variables: mutation.variables,\n                    optimistic: false,\n                    returnPartialData: true\n                });\n                var mergedData = void 0;\n                if (diff.result) {\n                    mergedData = (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_10__.mergeIncrementalData)(diff.result, result);\n                }\n                if (typeof mergedData !== \"undefined\") {\n                    result.data = mergedData;\n                    cacheWrites.push({\n                        result: mergedData,\n                        dataId: \"ROOT_MUTATION\",\n                        query: mutation.document,\n                        variables: mutation.variables\n                    });\n                }\n            }\n            var updateQueries_1 = mutation.updateQueries;\n            if (updateQueries_1) {\n                this.queries.forEach(function(_a, queryId) {\n                    var observableQuery = _a.observableQuery;\n                    var queryName = observableQuery && observableQuery.queryName;\n                    if (!queryName || !hasOwnProperty.call(updateQueries_1, queryName)) {\n                        return;\n                    }\n                    var updater = updateQueries_1[queryName];\n                    var _b = _this.queries.get(queryId), document = _b.document, variables = _b.variables;\n                    var _c = cache.diff({\n                        query: document,\n                        variables: variables,\n                        returnPartialData: true,\n                        optimistic: false\n                    }), currentQueryResult = _c.result, complete = _c.complete;\n                    if (complete && currentQueryResult) {\n                        var nextQueryResult = updater(currentQueryResult, {\n                            mutationResult: result,\n                            queryName: document && (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_12__.getOperationName)(document) || void 0,\n                            queryVariables: variables\n                        });\n                        if (nextQueryResult) {\n                            cacheWrites.push({\n                                result: nextQueryResult,\n                                dataId: \"ROOT_QUERY\",\n                                query: document,\n                                variables: variables\n                            });\n                        }\n                    }\n                });\n            }\n        }\n        if (cacheWrites.length > 0 || mutation.refetchQueries || mutation.update || mutation.onQueryUpdated || mutation.removeOptimistic) {\n            var results_1 = [];\n            this.refetchQueries({\n                updateCache: function(cache) {\n                    if (!skipCache) {\n                        cacheWrites.forEach(function(write) {\n                            return cache.write(write);\n                        });\n                    }\n                    var update = mutation.update;\n                    var isFinalResult = !(0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_10__.isExecutionPatchResult)(result) || (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_10__.isExecutionPatchIncrementalResult)(result) && !result.hasNext;\n                    if (update) {\n                        if (!skipCache) {\n                            var diff = cache.diff({\n                                id: \"ROOT_MUTATION\",\n                                query: _this.getDocumentInfo(mutation.document).asQuery,\n                                variables: mutation.variables,\n                                optimistic: false,\n                                returnPartialData: true\n                            });\n                            if (diff.complete) {\n                                result = (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_5__.__assign)({}, result), {\n                                    data: diff.result\n                                });\n                                if (\"incremental\" in result) {\n                                    delete result.incremental;\n                                }\n                                if (\"hasNext\" in result) {\n                                    delete result.hasNext;\n                                }\n                            }\n                        }\n                        if (isFinalResult) {\n                            update(cache, result, {\n                                context: mutation.context,\n                                variables: mutation.variables\n                            });\n                        }\n                    }\n                    if (!skipCache && !mutation.keepRootFields && isFinalResult) {\n                        cache.modify({\n                            id: \"ROOT_MUTATION\",\n                            fields: function(value, _a) {\n                                var fieldName = _a.fieldName, DELETE = _a.DELETE;\n                                return fieldName === \"__typename\" ? value : DELETE;\n                            }\n                        });\n                    }\n                },\n                include: mutation.refetchQueries,\n                optimistic: false,\n                removeOptimistic: mutation.removeOptimistic,\n                onQueryUpdated: mutation.onQueryUpdated || null\n            }).forEach(function(result) {\n                return results_1.push(result);\n            });\n            if (mutation.awaitRefetchQueries || mutation.onQueryUpdated) {\n                return Promise.all(results_1).then(function() {\n                    return result;\n                });\n            }\n        }\n        return Promise.resolve(result);\n    };\n    QueryManager.prototype.markMutationOptimistic = function(optimisticResponse, mutation) {\n        var _this = this;\n        var data = typeof optimisticResponse === \"function\" ? optimisticResponse(mutation.variables) : optimisticResponse;\n        return this.cache.recordOptimisticTransaction(function(cache) {\n            try {\n                _this.markMutationResult((0,tslib__WEBPACK_IMPORTED_MODULE_5__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_5__.__assign)({}, mutation), {\n                    result: {\n                        data: data\n                    }\n                }), cache);\n            } catch (error) {\n                globalThis.__DEV__ !== false && _utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.invariant.error(error);\n            }\n        }, mutation.mutationId);\n    };\n    QueryManager.prototype.fetchQuery = function(queryId, options, networkStatus) {\n        return this.fetchConcastWithInfo(queryId, options, networkStatus).concast.promise;\n    };\n    QueryManager.prototype.getQueryStore = function() {\n        var store = Object.create(null);\n        this.queries.forEach(function(info, queryId) {\n            store[queryId] = {\n                variables: info.variables,\n                networkStatus: info.networkStatus,\n                networkError: info.networkError,\n                graphQLErrors: info.graphQLErrors\n            };\n        });\n        return store;\n    };\n    QueryManager.prototype.resetErrors = function(queryId) {\n        var queryInfo = this.queries.get(queryId);\n        if (queryInfo) {\n            queryInfo.networkError = undefined;\n            queryInfo.graphQLErrors = [];\n        }\n    };\n    QueryManager.prototype.transform = function(document) {\n        return this.documentTransform.transformDocument(document);\n    };\n    QueryManager.prototype.getDocumentInfo = function(document) {\n        var transformCache = this.transformCache;\n        if (!transformCache.has(document)) {\n            var cacheEntry = {\n                hasClientExports: (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_13__.hasClientExports)(document),\n                hasForcedResolvers: this.localState.shouldForceResolvers(document),\n                hasNonreactiveDirective: (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_13__.hasDirectives)([\n                    \"nonreactive\"\n                ], document),\n                clientQuery: this.localState.clientQuery(document),\n                serverQuery: (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_14__.removeDirectivesFromDocument)([\n                    {\n                        name: \"client\",\n                        remove: true\n                    },\n                    {\n                        name: \"connection\"\n                    },\n                    {\n                        name: \"nonreactive\"\n                    }\n                ], document),\n                defaultVars: (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_12__.getDefaultValues)((0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_12__.getOperationDefinition)(document)),\n                asQuery: (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_5__.__assign)({}, document), {\n                    definitions: document.definitions.map(function(def) {\n                        if (def.kind === \"OperationDefinition\" && def.operation !== \"query\") {\n                            return (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_5__.__assign)({}, def), {\n                                operation: \"query\"\n                            });\n                        }\n                        return def;\n                    })\n                })\n            };\n            transformCache.set(document, cacheEntry);\n        }\n        return transformCache.get(document);\n    };\n    QueryManager.prototype.getVariables = function(document, variables) {\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_5__.__assign)({}, this.getDocumentInfo(document).defaultVars), variables);\n    };\n    QueryManager.prototype.watchQuery = function(options) {\n        var query = this.transform(options.query);\n        options = (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_5__.__assign)({}, options), {\n            variables: this.getVariables(query, options.variables)\n        });\n        if (typeof options.notifyOnNetworkStatusChange === \"undefined\") {\n            options.notifyOnNetworkStatusChange = false;\n        }\n        var queryInfo = new _QueryInfo_js__WEBPACK_IMPORTED_MODULE_9__.QueryInfo(this);\n        var observable = new _ObservableQuery_js__WEBPACK_IMPORTED_MODULE_15__.ObservableQuery({\n            queryManager: this,\n            queryInfo: queryInfo,\n            options: options\n        });\n        observable[\"lastQuery\"] = query;\n        this.queries.set(observable.queryId, queryInfo);\n        queryInfo.init({\n            document: query,\n            observableQuery: observable,\n            variables: observable.variables\n        });\n        return observable;\n    };\n    QueryManager.prototype.query = function(options, queryId) {\n        var _this = this;\n        if (queryId === void 0) {\n            queryId = this.generateQueryId();\n        }\n        (0,_utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.invariant)(options.query, 28);\n        (0,_utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.invariant)(options.query.kind === \"Document\", 29);\n        (0,_utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.invariant)(!options.returnPartialData, 30);\n        (0,_utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.invariant)(!options.pollInterval, 31);\n        return this.fetchQuery(queryId, (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_5__.__assign)({}, options), {\n            query: this.transform(options.query)\n        })).finally(function() {\n            return _this.stopQuery(queryId);\n        });\n    };\n    QueryManager.prototype.generateQueryId = function() {\n        return String(this.queryIdCounter++);\n    };\n    QueryManager.prototype.generateRequestId = function() {\n        return this.requestIdCounter++;\n    };\n    QueryManager.prototype.generateMutationId = function() {\n        return String(this.mutationIdCounter++);\n    };\n    QueryManager.prototype.stopQueryInStore = function(queryId) {\n        this.stopQueryInStoreNoBroadcast(queryId);\n        this.broadcastQueries();\n    };\n    QueryManager.prototype.stopQueryInStoreNoBroadcast = function(queryId) {\n        var queryInfo = this.queries.get(queryId);\n        if (queryInfo) queryInfo.stop();\n    };\n    QueryManager.prototype.clearStore = function(options) {\n        if (options === void 0) {\n            options = {\n                discardWatches: true\n            };\n        }\n        this.cancelPendingFetches((0,_utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.newInvariantError)(32));\n        this.queries.forEach(function(queryInfo) {\n            if (queryInfo.observableQuery) {\n                queryInfo.networkStatus = _networkStatus_js__WEBPACK_IMPORTED_MODULE_16__.NetworkStatus.loading;\n            } else {\n                queryInfo.stop();\n            }\n        });\n        if (this.mutationStore) {\n            this.mutationStore = Object.create(null);\n        }\n        return this.cache.reset(options);\n    };\n    QueryManager.prototype.getObservableQueries = function(include) {\n        var _this = this;\n        if (include === void 0) {\n            include = \"active\";\n        }\n        var queries = new Map();\n        var queryNamesAndDocs = new Map();\n        var legacyQueryOptions = new Set();\n        if (Array.isArray(include)) {\n            include.forEach(function(desc) {\n                if (typeof desc === \"string\") {\n                    queryNamesAndDocs.set(desc, false);\n                } else if ((0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_17__.isDocumentNode)(desc)) {\n                    queryNamesAndDocs.set(_this.transform(desc), false);\n                } else if ((0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_18__.isNonNullObject)(desc) && desc.query) {\n                    legacyQueryOptions.add(desc);\n                }\n            });\n        }\n        this.queries.forEach(function(_a, queryId) {\n            var oq = _a.observableQuery, document = _a.document;\n            if (oq) {\n                if (include === \"all\") {\n                    queries.set(queryId, oq);\n                    return;\n                }\n                var queryName = oq.queryName, fetchPolicy = oq.options.fetchPolicy;\n                if (fetchPolicy === \"standby\" || include === \"active\" && !oq.hasObservers()) {\n                    return;\n                }\n                if (include === \"active\" || queryName && queryNamesAndDocs.has(queryName) || document && queryNamesAndDocs.has(document)) {\n                    queries.set(queryId, oq);\n                    if (queryName) queryNamesAndDocs.set(queryName, true);\n                    if (document) queryNamesAndDocs.set(document, true);\n                }\n            }\n        });\n        if (legacyQueryOptions.size) {\n            legacyQueryOptions.forEach(function(options) {\n                var queryId = (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_19__.makeUniqueId)(\"legacyOneTimeQuery\");\n                var queryInfo = _this.getQuery(queryId).init({\n                    document: options.query,\n                    variables: options.variables\n                });\n                var oq = new _ObservableQuery_js__WEBPACK_IMPORTED_MODULE_15__.ObservableQuery({\n                    queryManager: _this,\n                    queryInfo: queryInfo,\n                    options: (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_5__.__assign)({}, options), {\n                        fetchPolicy: \"network-only\"\n                    })\n                });\n                (0,_utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.invariant)(oq.queryId === queryId);\n                queryInfo.setObservableQuery(oq);\n                queries.set(queryId, oq);\n            });\n        }\n        if (globalThis.__DEV__ !== false && queryNamesAndDocs.size) {\n            queryNamesAndDocs.forEach(function(included, nameOrDoc) {\n                if (!included) {\n                    globalThis.__DEV__ !== false && _utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.invariant.warn(typeof nameOrDoc === \"string\" ? 33 : 34, nameOrDoc);\n                }\n            });\n        }\n        return queries;\n    };\n    QueryManager.prototype.reFetchObservableQueries = function(includeStandby) {\n        var _this = this;\n        if (includeStandby === void 0) {\n            includeStandby = false;\n        }\n        var observableQueryPromises = [];\n        this.getObservableQueries(includeStandby ? \"all\" : \"active\").forEach(function(observableQuery, queryId) {\n            var fetchPolicy = observableQuery.options.fetchPolicy;\n            observableQuery.resetLastResults();\n            if (includeStandby || fetchPolicy !== \"standby\" && fetchPolicy !== \"cache-only\") {\n                observableQueryPromises.push(observableQuery.refetch());\n            }\n            _this.getQuery(queryId).setDiff(null);\n        });\n        this.broadcastQueries();\n        return Promise.all(observableQueryPromises);\n    };\n    QueryManager.prototype.setObservableQuery = function(observableQuery) {\n        this.getQuery(observableQuery.queryId).setObservableQuery(observableQuery);\n    };\n    QueryManager.prototype.startGraphQLSubscription = function(_a) {\n        var _this = this;\n        var query = _a.query, fetchPolicy = _a.fetchPolicy, _b = _a.errorPolicy, errorPolicy = _b === void 0 ? \"none\" : _b, variables = _a.variables, _c = _a.context, context = _c === void 0 ? {} : _c;\n        query = this.transform(query);\n        variables = this.getVariables(query, variables);\n        var makeObservable = function(variables) {\n            return _this.getObservableFromLink(query, context, variables).map(function(result) {\n                if (fetchPolicy !== \"no-cache\") {\n                    if ((0,_QueryInfo_js__WEBPACK_IMPORTED_MODULE_9__.shouldWriteResult)(result, errorPolicy)) {\n                        _this.cache.write({\n                            query: query,\n                            result: result.data,\n                            dataId: \"ROOT_SUBSCRIPTION\",\n                            variables: variables\n                        });\n                    }\n                    _this.broadcastQueries();\n                }\n                var hasErrors = (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_7__.graphQLResultHasError)(result);\n                var hasProtocolErrors = (0,_errors_index_js__WEBPACK_IMPORTED_MODULE_8__.graphQLResultHasProtocolErrors)(result);\n                if (hasErrors || hasProtocolErrors) {\n                    var errors = {};\n                    if (hasErrors) {\n                        errors.graphQLErrors = result.errors;\n                    }\n                    if (hasProtocolErrors) {\n                        errors.protocolErrors = result.extensions[_errors_index_js__WEBPACK_IMPORTED_MODULE_8__.PROTOCOL_ERRORS_SYMBOL];\n                    }\n                    if (errorPolicy === \"none\" || hasProtocolErrors) {\n                        throw new _errors_index_js__WEBPACK_IMPORTED_MODULE_8__.ApolloError(errors);\n                    }\n                }\n                if (errorPolicy === \"ignore\") {\n                    delete result.errors;\n                }\n                return result;\n            });\n        };\n        if (this.getDocumentInfo(query).hasClientExports) {\n            var observablePromise_1 = this.localState.addExportedVariables(query, variables, context).then(makeObservable);\n            return new _utilities_index_js__WEBPACK_IMPORTED_MODULE_20__.Observable(function(observer) {\n                var sub = null;\n                observablePromise_1.then(function(observable) {\n                    return sub = observable.subscribe(observer);\n                }, observer.error);\n                return function() {\n                    return sub && sub.unsubscribe();\n                };\n            });\n        }\n        return makeObservable(variables);\n    };\n    QueryManager.prototype.stopQuery = function(queryId) {\n        this.stopQueryNoBroadcast(queryId);\n        this.broadcastQueries();\n    };\n    QueryManager.prototype.stopQueryNoBroadcast = function(queryId) {\n        this.stopQueryInStoreNoBroadcast(queryId);\n        this.removeQuery(queryId);\n    };\n    QueryManager.prototype.removeQuery = function(queryId) {\n        this.fetchCancelFns.delete(queryId);\n        if (this.queries.has(queryId)) {\n            this.getQuery(queryId).stop();\n            this.queries.delete(queryId);\n        }\n    };\n    QueryManager.prototype.broadcastQueries = function() {\n        if (this.onBroadcast) this.onBroadcast();\n        this.queries.forEach(function(info) {\n            return info.notify();\n        });\n    };\n    QueryManager.prototype.getLocalState = function() {\n        return this.localState;\n    };\n    QueryManager.prototype.getObservableFromLink = function(query, context, variables, deduplication) {\n        var _this = this;\n        var _a;\n        if (deduplication === void 0) {\n            deduplication = (_a = context === null || context === void 0 ? void 0 : context.queryDeduplication) !== null && _a !== void 0 ? _a : this.queryDeduplication;\n        }\n        var observable;\n        var _b = this.getDocumentInfo(query), serverQuery = _b.serverQuery, clientQuery = _b.clientQuery;\n        if (serverQuery) {\n            var _c = this, inFlightLinkObservables_1 = _c.inFlightLinkObservables, link = _c.link;\n            var operation = {\n                query: serverQuery,\n                variables: variables,\n                operationName: (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_12__.getOperationName)(serverQuery) || void 0,\n                context: this.prepareContext((0,tslib__WEBPACK_IMPORTED_MODULE_5__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_5__.__assign)({}, context), {\n                    forceFetch: !deduplication\n                }))\n            };\n            context = operation.context;\n            if (deduplication) {\n                var printedServerQuery_1 = (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_21__.print)(serverQuery);\n                var byVariables_1 = inFlightLinkObservables_1.get(printedServerQuery_1) || new Map();\n                inFlightLinkObservables_1.set(printedServerQuery_1, byVariables_1);\n                var varJson_1 = (0,_cache_index_js__WEBPACK_IMPORTED_MODULE_22__.canonicalStringify)(variables);\n                observable = byVariables_1.get(varJson_1);\n                if (!observable) {\n                    var concast = new _utilities_index_js__WEBPACK_IMPORTED_MODULE_23__.Concast([\n                        (0,_link_core_index_js__WEBPACK_IMPORTED_MODULE_24__.execute)(link, operation)\n                    ]);\n                    byVariables_1.set(varJson_1, observable = concast);\n                    concast.beforeNext(function() {\n                        if (byVariables_1.delete(varJson_1) && byVariables_1.size < 1) {\n                            inFlightLinkObservables_1.delete(printedServerQuery_1);\n                        }\n                    });\n                }\n            } else {\n                observable = new _utilities_index_js__WEBPACK_IMPORTED_MODULE_23__.Concast([\n                    (0,_link_core_index_js__WEBPACK_IMPORTED_MODULE_24__.execute)(link, operation)\n                ]);\n            }\n        } else {\n            observable = new _utilities_index_js__WEBPACK_IMPORTED_MODULE_23__.Concast([\n                _utilities_index_js__WEBPACK_IMPORTED_MODULE_20__.Observable.of({\n                    data: {}\n                })\n            ]);\n            context = this.prepareContext(context);\n        }\n        if (clientQuery) {\n            observable = (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_6__.asyncMap)(observable, function(result) {\n                return _this.localState.runResolvers({\n                    document: clientQuery,\n                    remoteResult: result,\n                    context: context,\n                    variables: variables\n                });\n            });\n        }\n        return observable;\n    };\n    QueryManager.prototype.getResultsFromLink = function(queryInfo, cacheWriteBehavior, options) {\n        var requestId = queryInfo.lastRequestId = this.generateRequestId();\n        var linkDocument = this.cache.transformForLink(options.query);\n        return (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_6__.asyncMap)(this.getObservableFromLink(linkDocument, options.context, options.variables), function(result) {\n            var graphQLErrors = (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_7__.getGraphQLErrorsFromResult)(result);\n            var hasErrors = graphQLErrors.length > 0;\n            if (requestId >= queryInfo.lastRequestId) {\n                if (hasErrors && options.errorPolicy === \"none\") {\n                    throw queryInfo.markError(new _errors_index_js__WEBPACK_IMPORTED_MODULE_8__.ApolloError({\n                        graphQLErrors: graphQLErrors\n                    }));\n                }\n                queryInfo.markResult(result, linkDocument, options, cacheWriteBehavior);\n                queryInfo.markReady();\n            }\n            var aqr = {\n                data: result.data,\n                loading: false,\n                networkStatus: _networkStatus_js__WEBPACK_IMPORTED_MODULE_16__.NetworkStatus.ready\n            };\n            if (hasErrors && options.errorPolicy !== \"ignore\") {\n                aqr.errors = graphQLErrors;\n                aqr.networkStatus = _networkStatus_js__WEBPACK_IMPORTED_MODULE_16__.NetworkStatus.error;\n            }\n            return aqr;\n        }, function(networkError) {\n            var error = (0,_errors_index_js__WEBPACK_IMPORTED_MODULE_8__.isApolloError)(networkError) ? networkError : new _errors_index_js__WEBPACK_IMPORTED_MODULE_8__.ApolloError({\n                networkError: networkError\n            });\n            if (requestId >= queryInfo.lastRequestId) {\n                queryInfo.markError(error);\n            }\n            throw error;\n        });\n    };\n    QueryManager.prototype.fetchConcastWithInfo = function(queryId, options, networkStatus, query) {\n        var _this = this;\n        if (networkStatus === void 0) {\n            networkStatus = _networkStatus_js__WEBPACK_IMPORTED_MODULE_16__.NetworkStatus.loading;\n        }\n        if (query === void 0) {\n            query = options.query;\n        }\n        var variables = this.getVariables(query, options.variables);\n        var queryInfo = this.getQuery(queryId);\n        var defaults = this.defaultOptions.watchQuery;\n        var _a = options.fetchPolicy, fetchPolicy = _a === void 0 ? defaults && defaults.fetchPolicy || \"cache-first\" : _a, _b = options.errorPolicy, errorPolicy = _b === void 0 ? defaults && defaults.errorPolicy || \"none\" : _b, _c = options.returnPartialData, returnPartialData = _c === void 0 ? false : _c, _d = options.notifyOnNetworkStatusChange, notifyOnNetworkStatusChange = _d === void 0 ? false : _d, _e = options.context, context = _e === void 0 ? {} : _e;\n        var normalized = Object.assign({}, options, {\n            query: query,\n            variables: variables,\n            fetchPolicy: fetchPolicy,\n            errorPolicy: errorPolicy,\n            returnPartialData: returnPartialData,\n            notifyOnNetworkStatusChange: notifyOnNetworkStatusChange,\n            context: context\n        });\n        var fromVariables = function(variables) {\n            normalized.variables = variables;\n            var sourcesWithInfo = _this.fetchQueryByPolicy(queryInfo, normalized, networkStatus);\n            if (normalized.fetchPolicy !== \"standby\" && sourcesWithInfo.sources.length > 0 && queryInfo.observableQuery) {\n                queryInfo.observableQuery[\"applyNextFetchPolicy\"](\"after-fetch\", options);\n            }\n            return sourcesWithInfo;\n        };\n        var cleanupCancelFn = function() {\n            return _this.fetchCancelFns.delete(queryId);\n        };\n        this.fetchCancelFns.set(queryId, function(reason) {\n            cleanupCancelFn();\n            setTimeout(function() {\n                return concast.cancel(reason);\n            });\n        });\n        var concast, containsDataFromLink;\n        if (this.getDocumentInfo(normalized.query).hasClientExports) {\n            concast = new _utilities_index_js__WEBPACK_IMPORTED_MODULE_23__.Concast(this.localState.addExportedVariables(normalized.query, normalized.variables, normalized.context).then(fromVariables).then(function(sourcesWithInfo) {\n                return sourcesWithInfo.sources;\n            }));\n            containsDataFromLink = true;\n        } else {\n            var sourcesWithInfo = fromVariables(normalized.variables);\n            containsDataFromLink = sourcesWithInfo.fromLink;\n            concast = new _utilities_index_js__WEBPACK_IMPORTED_MODULE_23__.Concast(sourcesWithInfo.sources);\n        }\n        concast.promise.then(cleanupCancelFn, cleanupCancelFn);\n        return {\n            concast: concast,\n            fromLink: containsDataFromLink\n        };\n    };\n    QueryManager.prototype.refetchQueries = function(_a) {\n        var _this = this;\n        var updateCache = _a.updateCache, include = _a.include, _b = _a.optimistic, optimistic = _b === void 0 ? false : _b, _c = _a.removeOptimistic, removeOptimistic = _c === void 0 ? optimistic ? (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_19__.makeUniqueId)(\"refetchQueries\") : void 0 : _c, onQueryUpdated = _a.onQueryUpdated;\n        var includedQueriesById = new Map();\n        if (include) {\n            this.getObservableQueries(include).forEach(function(oq, queryId) {\n                includedQueriesById.set(queryId, {\n                    oq: oq,\n                    lastDiff: _this.getQuery(queryId).getDiff()\n                });\n            });\n        }\n        var results = new Map();\n        if (updateCache) {\n            this.cache.batch({\n                update: updateCache,\n                optimistic: optimistic && removeOptimistic || false,\n                removeOptimistic: removeOptimistic,\n                onWatchUpdated: function(watch, diff, lastDiff) {\n                    var oq = watch.watcher instanceof _QueryInfo_js__WEBPACK_IMPORTED_MODULE_9__.QueryInfo && watch.watcher.observableQuery;\n                    if (oq) {\n                        if (onQueryUpdated) {\n                            includedQueriesById.delete(oq.queryId);\n                            var result = onQueryUpdated(oq, diff, lastDiff);\n                            if (result === true) {\n                                result = oq.refetch();\n                            }\n                            if (result !== false) {\n                                results.set(oq, result);\n                            }\n                            return result;\n                        }\n                        if (onQueryUpdated !== null) {\n                            includedQueriesById.set(oq.queryId, {\n                                oq: oq,\n                                lastDiff: lastDiff,\n                                diff: diff\n                            });\n                        }\n                    }\n                }\n            });\n        }\n        if (includedQueriesById.size) {\n            includedQueriesById.forEach(function(_a, queryId) {\n                var oq = _a.oq, lastDiff = _a.lastDiff, diff = _a.diff;\n                var result;\n                if (onQueryUpdated) {\n                    if (!diff) {\n                        var info = oq[\"queryInfo\"];\n                        info.reset();\n                        diff = info.getDiff();\n                    }\n                    result = onQueryUpdated(oq, diff, lastDiff);\n                }\n                if (!onQueryUpdated || result === true) {\n                    result = oq.refetch();\n                }\n                if (result !== false) {\n                    results.set(oq, result);\n                }\n                if (queryId.indexOf(\"legacyOneTimeQuery\") >= 0) {\n                    _this.stopQueryNoBroadcast(queryId);\n                }\n            });\n        }\n        if (removeOptimistic) {\n            this.cache.removeOptimistic(removeOptimistic);\n        }\n        return results;\n    };\n    QueryManager.prototype.fetchQueryByPolicy = function(queryInfo, _a, networkStatus) {\n        var _this = this;\n        var query = _a.query, variables = _a.variables, fetchPolicy = _a.fetchPolicy, refetchWritePolicy = _a.refetchWritePolicy, errorPolicy = _a.errorPolicy, returnPartialData = _a.returnPartialData, context = _a.context, notifyOnNetworkStatusChange = _a.notifyOnNetworkStatusChange;\n        var oldNetworkStatus = queryInfo.networkStatus;\n        queryInfo.init({\n            document: query,\n            variables: variables,\n            networkStatus: networkStatus\n        });\n        var readCache = function() {\n            return queryInfo.getDiff();\n        };\n        var resultsFromCache = function(diff, networkStatus) {\n            if (networkStatus === void 0) {\n                networkStatus = queryInfo.networkStatus || _networkStatus_js__WEBPACK_IMPORTED_MODULE_16__.NetworkStatus.loading;\n            }\n            var data = diff.result;\n            if (globalThis.__DEV__ !== false && !returnPartialData && !(0,_wry_equality__WEBPACK_IMPORTED_MODULE_1__.equal)(data, {})) {\n                (0,_ObservableQuery_js__WEBPACK_IMPORTED_MODULE_15__.logMissingFieldErrors)(diff.missing);\n            }\n            var fromData = function(data) {\n                return _utilities_index_js__WEBPACK_IMPORTED_MODULE_20__.Observable.of((0,tslib__WEBPACK_IMPORTED_MODULE_5__.__assign)({\n                    data: data,\n                    loading: (0,_networkStatus_js__WEBPACK_IMPORTED_MODULE_16__.isNetworkRequestInFlight)(networkStatus),\n                    networkStatus: networkStatus\n                }, diff.complete ? null : {\n                    partial: true\n                }));\n            };\n            if (data && _this.getDocumentInfo(query).hasForcedResolvers) {\n                return _this.localState.runResolvers({\n                    document: query,\n                    remoteResult: {\n                        data: data\n                    },\n                    context: context,\n                    variables: variables,\n                    onlyRunForcedResolvers: true\n                }).then(function(resolved) {\n                    return fromData(resolved.data || void 0);\n                });\n            }\n            if (errorPolicy === \"none\" && networkStatus === _networkStatus_js__WEBPACK_IMPORTED_MODULE_16__.NetworkStatus.refetch && Array.isArray(diff.missing)) {\n                return fromData(void 0);\n            }\n            return fromData(data);\n        };\n        var cacheWriteBehavior = fetchPolicy === \"no-cache\" ? 0 : networkStatus === _networkStatus_js__WEBPACK_IMPORTED_MODULE_16__.NetworkStatus.refetch && refetchWritePolicy !== \"merge\" ? 1 : 2;\n        var resultsFromLink = function() {\n            return _this.getResultsFromLink(queryInfo, cacheWriteBehavior, {\n                query: query,\n                variables: variables,\n                context: context,\n                fetchPolicy: fetchPolicy,\n                errorPolicy: errorPolicy\n            });\n        };\n        var shouldNotify = notifyOnNetworkStatusChange && typeof oldNetworkStatus === \"number\" && oldNetworkStatus !== networkStatus && (0,_networkStatus_js__WEBPACK_IMPORTED_MODULE_16__.isNetworkRequestInFlight)(networkStatus);\n        switch(fetchPolicy){\n            default:\n            case \"cache-first\":\n                {\n                    var diff = readCache();\n                    if (diff.complete) {\n                        return {\n                            fromLink: false,\n                            sources: [\n                                resultsFromCache(diff, queryInfo.markReady())\n                            ]\n                        };\n                    }\n                    if (returnPartialData || shouldNotify) {\n                        return {\n                            fromLink: true,\n                            sources: [\n                                resultsFromCache(diff),\n                                resultsFromLink()\n                            ]\n                        };\n                    }\n                    return {\n                        fromLink: true,\n                        sources: [\n                            resultsFromLink()\n                        ]\n                    };\n                }\n            case \"cache-and-network\":\n                {\n                    var diff = readCache();\n                    if (diff.complete || returnPartialData || shouldNotify) {\n                        return {\n                            fromLink: true,\n                            sources: [\n                                resultsFromCache(diff),\n                                resultsFromLink()\n                            ]\n                        };\n                    }\n                    return {\n                        fromLink: true,\n                        sources: [\n                            resultsFromLink()\n                        ]\n                    };\n                }\n            case \"cache-only\":\n                return {\n                    fromLink: false,\n                    sources: [\n                        resultsFromCache(readCache(), queryInfo.markReady())\n                    ]\n                };\n            case \"network-only\":\n                if (shouldNotify) {\n                    return {\n                        fromLink: true,\n                        sources: [\n                            resultsFromCache(readCache()),\n                            resultsFromLink()\n                        ]\n                    };\n                }\n                return {\n                    fromLink: true,\n                    sources: [\n                        resultsFromLink()\n                    ]\n                };\n            case \"no-cache\":\n                if (shouldNotify) {\n                    return {\n                        fromLink: true,\n                        sources: [\n                            resultsFromCache(queryInfo.getDiff()),\n                            resultsFromLink()\n                        ]\n                    };\n                }\n                return {\n                    fromLink: true,\n                    sources: [\n                        resultsFromLink()\n                    ]\n                };\n            case \"standby\":\n                return {\n                    fromLink: false,\n                    sources: []\n                };\n        }\n    };\n    QueryManager.prototype.getQuery = function(queryId) {\n        if (queryId && !this.queries.has(queryId)) {\n            this.queries.set(queryId, new _QueryInfo_js__WEBPACK_IMPORTED_MODULE_9__.QueryInfo(this, queryId));\n        }\n        return this.queries.get(queryId);\n    };\n    QueryManager.prototype.prepareContext = function(context) {\n        if (context === void 0) {\n            context = {};\n        }\n        var newContext = this.localState.prepareContext(context);\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_5__.__assign)({}, newContext), {\n            clientAwareness: this.clientAwareness\n        });\n    };\n    return QueryManager;\n}();\n //# sourceMappingURL=QueryManager.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/core/QueryManager.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/core/equalByQuery.js":
/*!**********************************************************!*\
  !*** ./node_modules/@apollo/client/core/equalByQuery.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   equalByQuery: () => (/* binding */ equalByQuery)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.mjs\");\n/* harmony import */ var _wry_equality__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wry/equality */ \"(ssr)/./node_modules/@wry/equality/lib/index.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/graphql/getFromAST.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/graphql/fragments.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/graphql/directives.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/graphql/storeUtils.js\");\n\n\n\nfunction equalByQuery(query, _a, _b, variables) {\n    var aData = _a.data, aRest = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__rest)(_a, [\n        \"data\"\n    ]);\n    var bData = _b.data, bRest = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__rest)(_b, [\n        \"data\"\n    ]);\n    return (0,_wry_equality__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(aRest, bRest) && equalBySelectionSet((0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_2__.getMainDefinition)(query).selectionSet, aData, bData, {\n        fragmentMap: (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_3__.createFragmentMap)((0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_2__.getFragmentDefinitions)(query)),\n        variables: variables\n    });\n}\nfunction equalBySelectionSet(selectionSet, aResult, bResult, context) {\n    if (aResult === bResult) {\n        return true;\n    }\n    var seenSelections = new Set();\n    return selectionSet.selections.every(function(selection) {\n        if (seenSelections.has(selection)) return true;\n        seenSelections.add(selection);\n        if (!(0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_4__.shouldInclude)(selection, context.variables)) return true;\n        if (selectionHasNonreactiveDirective(selection)) return true;\n        if ((0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_5__.isField)(selection)) {\n            var resultKey = (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_5__.resultKeyNameFromField)(selection);\n            var aResultChild = aResult && aResult[resultKey];\n            var bResultChild = bResult && bResult[resultKey];\n            var childSelectionSet = selection.selectionSet;\n            if (!childSelectionSet) {\n                return (0,_wry_equality__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(aResultChild, bResultChild);\n            }\n            var aChildIsArray = Array.isArray(aResultChild);\n            var bChildIsArray = Array.isArray(bResultChild);\n            if (aChildIsArray !== bChildIsArray) return false;\n            if (aChildIsArray && bChildIsArray) {\n                var length_1 = aResultChild.length;\n                if (bResultChild.length !== length_1) {\n                    return false;\n                }\n                for(var i = 0; i < length_1; ++i){\n                    if (!equalBySelectionSet(childSelectionSet, aResultChild[i], bResultChild[i], context)) {\n                        return false;\n                    }\n                }\n                return true;\n            }\n            return equalBySelectionSet(childSelectionSet, aResultChild, bResultChild, context);\n        } else {\n            var fragment = (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_3__.getFragmentFromSelection)(selection, context.fragmentMap);\n            if (fragment) {\n                if (selectionHasNonreactiveDirective(fragment)) return true;\n                return equalBySelectionSet(fragment.selectionSet, aResult, bResult, context);\n            }\n        }\n    });\n}\nfunction selectionHasNonreactiveDirective(selection) {\n    return !!selection.directives && selection.directives.some(directiveIsNonreactive);\n}\nfunction directiveIsNonreactive(dir) {\n    return dir.name.value === \"nonreactive\";\n} //# sourceMappingURL=equalByQuery.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFwb2xsby9jbGllbnQvY29yZS9lcXVhbEJ5UXVlcnkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUErQjtBQUNHO0FBQzhJO0FBQ3pLLFNBQVNTLGFBQWFDLEtBQUssRUFBRUMsRUFBRSxFQUFFQyxFQUFFLEVBQUVDLFNBQVM7SUFDakQsSUFBSUMsUUFBUUgsR0FBR0ksSUFBSSxFQUFFQyxRQUFRaEIsNkNBQU1BLENBQUNXLElBQUk7UUFBQztLQUFPO0lBQ2hELElBQUlNLFFBQVFMLEdBQUdHLElBQUksRUFBRUcsUUFBUWxCLDZDQUFNQSxDQUFDWSxJQUFJO1FBQUM7S0FBTztJQUNoRCxPQUFRWCx5REFBS0EsQ0FBQ2UsT0FBT0UsVUFDakJDLG9CQUFvQmQsc0VBQWlCQSxDQUFDSyxPQUFPVSxZQUFZLEVBQUVOLE9BQU9HLE9BQU87UUFDckVJLGFBQWFuQixzRUFBaUJBLENBQUNDLDJFQUFzQkEsQ0FBQ087UUFDdERHLFdBQVdBO0lBQ2Y7QUFDUjtBQUNBLFNBQVNNLG9CQUFvQkMsWUFBWSxFQUFFRSxPQUFPLEVBQUVDLE9BQU8sRUFBRUMsT0FBTztJQUNoRSxJQUFJRixZQUFZQyxTQUFTO1FBQ3JCLE9BQU87SUFDWDtJQUNBLElBQUlFLGlCQUFpQixJQUFJQztJQUN6QixPQUFPTixhQUFhTyxVQUFVLENBQUNDLEtBQUssQ0FBQyxTQUFVQyxTQUFTO1FBQ3BELElBQUlKLGVBQWVLLEdBQUcsQ0FBQ0QsWUFDbkIsT0FBTztRQUNYSixlQUFlTSxHQUFHLENBQUNGO1FBQ25CLElBQUksQ0FBQ3JCLGtFQUFhQSxDQUFDcUIsV0FBV0wsUUFBUVgsU0FBUyxHQUMzQyxPQUFPO1FBQ1gsSUFBSW1CLGlDQUFpQ0gsWUFDakMsT0FBTztRQUNYLElBQUl2Qiw0REFBT0EsQ0FBQ3VCLFlBQVk7WUFDcEIsSUFBSUksWUFBWTFCLDJFQUFzQkEsQ0FBQ3NCO1lBQ3ZDLElBQUlLLGVBQWVaLFdBQVdBLE9BQU8sQ0FBQ1csVUFBVTtZQUNoRCxJQUFJRSxlQUFlWixXQUFXQSxPQUFPLENBQUNVLFVBQVU7WUFDaEQsSUFBSUcsb0JBQW9CUCxVQUFVVCxZQUFZO1lBQzlDLElBQUksQ0FBQ2dCLG1CQUFtQjtnQkFDcEIsT0FBT25DLHlEQUFLQSxDQUFDaUMsY0FBY0M7WUFDL0I7WUFDQSxJQUFJRSxnQkFBZ0JDLE1BQU1DLE9BQU8sQ0FBQ0w7WUFDbEMsSUFBSU0sZ0JBQWdCRixNQUFNQyxPQUFPLENBQUNKO1lBQ2xDLElBQUlFLGtCQUFrQkcsZUFDbEIsT0FBTztZQUNYLElBQUlILGlCQUFpQkcsZUFBZTtnQkFDaEMsSUFBSUMsV0FBV1AsYUFBYVEsTUFBTTtnQkFDbEMsSUFBSVAsYUFBYU8sTUFBTSxLQUFLRCxVQUFVO29CQUNsQyxPQUFPO2dCQUNYO2dCQUNBLElBQUssSUFBSUUsSUFBSSxHQUFHQSxJQUFJRixVQUFVLEVBQUVFLEVBQUc7b0JBQy9CLElBQUksQ0FBQ3hCLG9CQUFvQmlCLG1CQUFtQkYsWUFBWSxDQUFDUyxFQUFFLEVBQUVSLFlBQVksQ0FBQ1EsRUFBRSxFQUFFbkIsVUFBVTt3QkFDcEYsT0FBTztvQkFDWDtnQkFDSjtnQkFDQSxPQUFPO1lBQ1g7WUFDQSxPQUFPTCxvQkFBb0JpQixtQkFBbUJGLGNBQWNDLGNBQWNYO1FBQzlFLE9BQ0s7WUFDRCxJQUFJb0IsV0FBV3hDLDZFQUF3QkEsQ0FBQ3lCLFdBQVdMLFFBQVFILFdBQVc7WUFDdEUsSUFBSXVCLFVBQVU7Z0JBQ1YsSUFBSVosaUNBQWlDWSxXQUNqQyxPQUFPO2dCQUNYLE9BQU96QixvQkFBb0J5QixTQUFTeEIsWUFBWSxFQUFFRSxTQUFTQyxTQUFTQztZQUN4RTtRQUNKO0lBQ0o7QUFDSjtBQUNBLFNBQVNRLGlDQUFpQ0gsU0FBUztJQUMvQyxPQUFRLENBQUMsQ0FBQ0EsVUFBVWdCLFVBQVUsSUFBSWhCLFVBQVVnQixVQUFVLENBQUNDLElBQUksQ0FBQ0M7QUFDaEU7QUFDQSxTQUFTQSx1QkFBdUJDLEdBQUc7SUFDL0IsT0FBT0EsSUFBSUMsSUFBSSxDQUFDQyxLQUFLLEtBQUs7QUFDOUIsRUFDQSx3Q0FBd0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdXJuaS1hcHAvLi9ub2RlX21vZHVsZXMvQGFwb2xsby9jbGllbnQvY29yZS9lcXVhbEJ5UXVlcnkuanM/OWZmMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBfX3Jlc3QgfSBmcm9tIFwidHNsaWJcIjtcbmltcG9ydCBlcXVhbCBmcm9tIFwiQHdyeS9lcXVhbGl0eVwiO1xuaW1wb3J0IHsgY3JlYXRlRnJhZ21lbnRNYXAsIGdldEZyYWdtZW50RGVmaW5pdGlvbnMsIGdldEZyYWdtZW50RnJvbVNlbGVjdGlvbiwgZ2V0TWFpbkRlZmluaXRpb24sIGlzRmllbGQsIHJlc3VsdEtleU5hbWVGcm9tRmllbGQsIHNob3VsZEluY2x1ZGUsIH0gZnJvbSBcIi4uL3V0aWxpdGllcy9pbmRleC5qc1wiO1xuZXhwb3J0IGZ1bmN0aW9uIGVxdWFsQnlRdWVyeShxdWVyeSwgX2EsIF9iLCB2YXJpYWJsZXMpIHtcbiAgICB2YXIgYURhdGEgPSBfYS5kYXRhLCBhUmVzdCA9IF9fcmVzdChfYSwgW1wiZGF0YVwiXSk7XG4gICAgdmFyIGJEYXRhID0gX2IuZGF0YSwgYlJlc3QgPSBfX3Jlc3QoX2IsIFtcImRhdGFcIl0pO1xuICAgIHJldHVybiAoZXF1YWwoYVJlc3QsIGJSZXN0KSAmJlxuICAgICAgICBlcXVhbEJ5U2VsZWN0aW9uU2V0KGdldE1haW5EZWZpbml0aW9uKHF1ZXJ5KS5zZWxlY3Rpb25TZXQsIGFEYXRhLCBiRGF0YSwge1xuICAgICAgICAgICAgZnJhZ21lbnRNYXA6IGNyZWF0ZUZyYWdtZW50TWFwKGdldEZyYWdtZW50RGVmaW5pdGlvbnMocXVlcnkpKSxcbiAgICAgICAgICAgIHZhcmlhYmxlczogdmFyaWFibGVzLFxuICAgICAgICB9KSk7XG59XG5mdW5jdGlvbiBlcXVhbEJ5U2VsZWN0aW9uU2V0KHNlbGVjdGlvblNldCwgYVJlc3VsdCwgYlJlc3VsdCwgY29udGV4dCkge1xuICAgIGlmIChhUmVzdWx0ID09PSBiUmVzdWx0KSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICB2YXIgc2VlblNlbGVjdGlvbnMgPSBuZXcgU2V0KCk7XG4gICAgcmV0dXJuIHNlbGVjdGlvblNldC5zZWxlY3Rpb25zLmV2ZXJ5KGZ1bmN0aW9uIChzZWxlY3Rpb24pIHtcbiAgICAgICAgaWYgKHNlZW5TZWxlY3Rpb25zLmhhcyhzZWxlY3Rpb24pKVxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIHNlZW5TZWxlY3Rpb25zLmFkZChzZWxlY3Rpb24pO1xuICAgICAgICBpZiAoIXNob3VsZEluY2x1ZGUoc2VsZWN0aW9uLCBjb250ZXh0LnZhcmlhYmxlcykpXG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgaWYgKHNlbGVjdGlvbkhhc05vbnJlYWN0aXZlRGlyZWN0aXZlKHNlbGVjdGlvbikpXG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgaWYgKGlzRmllbGQoc2VsZWN0aW9uKSkge1xuICAgICAgICAgICAgdmFyIHJlc3VsdEtleSA9IHJlc3VsdEtleU5hbWVGcm9tRmllbGQoc2VsZWN0aW9uKTtcbiAgICAgICAgICAgIHZhciBhUmVzdWx0Q2hpbGQgPSBhUmVzdWx0ICYmIGFSZXN1bHRbcmVzdWx0S2V5XTtcbiAgICAgICAgICAgIHZhciBiUmVzdWx0Q2hpbGQgPSBiUmVzdWx0ICYmIGJSZXN1bHRbcmVzdWx0S2V5XTtcbiAgICAgICAgICAgIHZhciBjaGlsZFNlbGVjdGlvblNldCA9IHNlbGVjdGlvbi5zZWxlY3Rpb25TZXQ7XG4gICAgICAgICAgICBpZiAoIWNoaWxkU2VsZWN0aW9uU2V0KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGVxdWFsKGFSZXN1bHRDaGlsZCwgYlJlc3VsdENoaWxkKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZhciBhQ2hpbGRJc0FycmF5ID0gQXJyYXkuaXNBcnJheShhUmVzdWx0Q2hpbGQpO1xuICAgICAgICAgICAgdmFyIGJDaGlsZElzQXJyYXkgPSBBcnJheS5pc0FycmF5KGJSZXN1bHRDaGlsZCk7XG4gICAgICAgICAgICBpZiAoYUNoaWxkSXNBcnJheSAhPT0gYkNoaWxkSXNBcnJheSlcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICBpZiAoYUNoaWxkSXNBcnJheSAmJiBiQ2hpbGRJc0FycmF5KSB7XG4gICAgICAgICAgICAgICAgdmFyIGxlbmd0aF8xID0gYVJlc3VsdENoaWxkLmxlbmd0aDtcbiAgICAgICAgICAgICAgICBpZiAoYlJlc3VsdENoaWxkLmxlbmd0aCAhPT0gbGVuZ3RoXzEpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbmd0aF8xOyArK2kpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFlcXVhbEJ5U2VsZWN0aW9uU2V0KGNoaWxkU2VsZWN0aW9uU2V0LCBhUmVzdWx0Q2hpbGRbaV0sIGJSZXN1bHRDaGlsZFtpXSwgY29udGV4dCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBlcXVhbEJ5U2VsZWN0aW9uU2V0KGNoaWxkU2VsZWN0aW9uU2V0LCBhUmVzdWx0Q2hpbGQsIGJSZXN1bHRDaGlsZCwgY29udGV4dCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB2YXIgZnJhZ21lbnQgPSBnZXRGcmFnbWVudEZyb21TZWxlY3Rpb24oc2VsZWN0aW9uLCBjb250ZXh0LmZyYWdtZW50TWFwKTtcbiAgICAgICAgICAgIGlmIChmcmFnbWVudCkge1xuICAgICAgICAgICAgICAgIGlmIChzZWxlY3Rpb25IYXNOb25yZWFjdGl2ZURpcmVjdGl2ZShmcmFnbWVudCkpXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgICAgIHJldHVybiBlcXVhbEJ5U2VsZWN0aW9uU2V0KGZyYWdtZW50LnNlbGVjdGlvblNldCwgYVJlc3VsdCwgYlJlc3VsdCwgY29udGV4dCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9KTtcbn1cbmZ1bmN0aW9uIHNlbGVjdGlvbkhhc05vbnJlYWN0aXZlRGlyZWN0aXZlKHNlbGVjdGlvbikge1xuICAgIHJldHVybiAoISFzZWxlY3Rpb24uZGlyZWN0aXZlcyAmJiBzZWxlY3Rpb24uZGlyZWN0aXZlcy5zb21lKGRpcmVjdGl2ZUlzTm9ucmVhY3RpdmUpKTtcbn1cbmZ1bmN0aW9uIGRpcmVjdGl2ZUlzTm9ucmVhY3RpdmUoZGlyKSB7XG4gICAgcmV0dXJuIGRpci5uYW1lLnZhbHVlID09PSBcIm5vbnJlYWN0aXZlXCI7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1lcXVhbEJ5UXVlcnkuanMubWFwIl0sIm5hbWVzIjpbIl9fcmVzdCIsImVxdWFsIiwiY3JlYXRlRnJhZ21lbnRNYXAiLCJnZXRGcmFnbWVudERlZmluaXRpb25zIiwiZ2V0RnJhZ21lbnRGcm9tU2VsZWN0aW9uIiwiZ2V0TWFpbkRlZmluaXRpb24iLCJpc0ZpZWxkIiwicmVzdWx0S2V5TmFtZUZyb21GaWVsZCIsInNob3VsZEluY2x1ZGUiLCJlcXVhbEJ5UXVlcnkiLCJxdWVyeSIsIl9hIiwiX2IiLCJ2YXJpYWJsZXMiLCJhRGF0YSIsImRhdGEiLCJhUmVzdCIsImJEYXRhIiwiYlJlc3QiLCJlcXVhbEJ5U2VsZWN0aW9uU2V0Iiwic2VsZWN0aW9uU2V0IiwiZnJhZ21lbnRNYXAiLCJhUmVzdWx0IiwiYlJlc3VsdCIsImNvbnRleHQiLCJzZWVuU2VsZWN0aW9ucyIsIlNldCIsInNlbGVjdGlvbnMiLCJldmVyeSIsInNlbGVjdGlvbiIsImhhcyIsImFkZCIsInNlbGVjdGlvbkhhc05vbnJlYWN0aXZlRGlyZWN0aXZlIiwicmVzdWx0S2V5IiwiYVJlc3VsdENoaWxkIiwiYlJlc3VsdENoaWxkIiwiY2hpbGRTZWxlY3Rpb25TZXQiLCJhQ2hpbGRJc0FycmF5IiwiQXJyYXkiLCJpc0FycmF5IiwiYkNoaWxkSXNBcnJheSIsImxlbmd0aF8xIiwibGVuZ3RoIiwiaSIsImZyYWdtZW50IiwiZGlyZWN0aXZlcyIsInNvbWUiLCJkaXJlY3RpdmVJc05vbnJlYWN0aXZlIiwiZGlyIiwibmFtZSIsInZhbHVlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/core/equalByQuery.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/core/networkStatus.js":
/*!***********************************************************!*\
  !*** ./node_modules/@apollo/client/core/networkStatus.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NetworkStatus: () => (/* binding */ NetworkStatus),\n/* harmony export */   isNetworkRequestInFlight: () => (/* binding */ isNetworkRequestInFlight),\n/* harmony export */   isNetworkRequestSettled: () => (/* binding */ isNetworkRequestSettled)\n/* harmony export */ });\nvar NetworkStatus;\n(function(NetworkStatus) {\n    NetworkStatus[NetworkStatus[\"loading\"] = 1] = \"loading\";\n    NetworkStatus[NetworkStatus[\"setVariables\"] = 2] = \"setVariables\";\n    NetworkStatus[NetworkStatus[\"fetchMore\"] = 3] = \"fetchMore\";\n    NetworkStatus[NetworkStatus[\"refetch\"] = 4] = \"refetch\";\n    NetworkStatus[NetworkStatus[\"poll\"] = 6] = \"poll\";\n    NetworkStatus[NetworkStatus[\"ready\"] = 7] = \"ready\";\n    NetworkStatus[NetworkStatus[\"error\"] = 8] = \"error\";\n})(NetworkStatus || (NetworkStatus = {}));\nfunction isNetworkRequestInFlight(networkStatus) {\n    return networkStatus ? networkStatus < 7 : false;\n}\nfunction isNetworkRequestSettled(networkStatus) {\n    return networkStatus === 7 || networkStatus === 8;\n} //# sourceMappingURL=networkStatus.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFwb2xsby9jbGllbnQvY29yZS9uZXR3b3JrU3RhdHVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFPLElBQUlBLGNBQWM7QUFDeEIsVUFBVUEsYUFBYTtJQUNwQkEsYUFBYSxDQUFDQSxhQUFhLENBQUMsVUFBVSxHQUFHLEVBQUUsR0FBRztJQUM5Q0EsYUFBYSxDQUFDQSxhQUFhLENBQUMsZUFBZSxHQUFHLEVBQUUsR0FBRztJQUNuREEsYUFBYSxDQUFDQSxhQUFhLENBQUMsWUFBWSxHQUFHLEVBQUUsR0FBRztJQUNoREEsYUFBYSxDQUFDQSxhQUFhLENBQUMsVUFBVSxHQUFHLEVBQUUsR0FBRztJQUM5Q0EsYUFBYSxDQUFDQSxhQUFhLENBQUMsT0FBTyxHQUFHLEVBQUUsR0FBRztJQUMzQ0EsYUFBYSxDQUFDQSxhQUFhLENBQUMsUUFBUSxHQUFHLEVBQUUsR0FBRztJQUM1Q0EsYUFBYSxDQUFDQSxhQUFhLENBQUMsUUFBUSxHQUFHLEVBQUUsR0FBRztBQUNoRCxHQUFHQSxpQkFBa0JBLENBQUFBLGdCQUFnQixDQUFDO0FBQy9CLFNBQVNDLHlCQUF5QkMsYUFBYTtJQUNsRCxPQUFPQSxnQkFBZ0JBLGdCQUFnQixJQUFJO0FBQy9DO0FBQ08sU0FBU0Msd0JBQXdCRCxhQUFhO0lBQ2pELE9BQU9BLGtCQUFrQixLQUFLQSxrQkFBa0I7QUFDcEQsRUFDQSx5Q0FBeUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdXJuaS1hcHAvLi9ub2RlX21vZHVsZXMvQGFwb2xsby9jbGllbnQvY29yZS9uZXR3b3JrU3RhdHVzLmpzPzAyZDEiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHZhciBOZXR3b3JrU3RhdHVzO1xuKGZ1bmN0aW9uIChOZXR3b3JrU3RhdHVzKSB7XG4gICAgTmV0d29ya1N0YXR1c1tOZXR3b3JrU3RhdHVzW1wibG9hZGluZ1wiXSA9IDFdID0gXCJsb2FkaW5nXCI7XG4gICAgTmV0d29ya1N0YXR1c1tOZXR3b3JrU3RhdHVzW1wic2V0VmFyaWFibGVzXCJdID0gMl0gPSBcInNldFZhcmlhYmxlc1wiO1xuICAgIE5ldHdvcmtTdGF0dXNbTmV0d29ya1N0YXR1c1tcImZldGNoTW9yZVwiXSA9IDNdID0gXCJmZXRjaE1vcmVcIjtcbiAgICBOZXR3b3JrU3RhdHVzW05ldHdvcmtTdGF0dXNbXCJyZWZldGNoXCJdID0gNF0gPSBcInJlZmV0Y2hcIjtcbiAgICBOZXR3b3JrU3RhdHVzW05ldHdvcmtTdGF0dXNbXCJwb2xsXCJdID0gNl0gPSBcInBvbGxcIjtcbiAgICBOZXR3b3JrU3RhdHVzW05ldHdvcmtTdGF0dXNbXCJyZWFkeVwiXSA9IDddID0gXCJyZWFkeVwiO1xuICAgIE5ldHdvcmtTdGF0dXNbTmV0d29ya1N0YXR1c1tcImVycm9yXCJdID0gOF0gPSBcImVycm9yXCI7XG59KShOZXR3b3JrU3RhdHVzIHx8IChOZXR3b3JrU3RhdHVzID0ge30pKTtcbmV4cG9ydCBmdW5jdGlvbiBpc05ldHdvcmtSZXF1ZXN0SW5GbGlnaHQobmV0d29ya1N0YXR1cykge1xuICAgIHJldHVybiBuZXR3b3JrU3RhdHVzID8gbmV0d29ya1N0YXR1cyA8IDcgOiBmYWxzZTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc05ldHdvcmtSZXF1ZXN0U2V0dGxlZChuZXR3b3JrU3RhdHVzKSB7XG4gICAgcmV0dXJuIG5ldHdvcmtTdGF0dXMgPT09IDcgfHwgbmV0d29ya1N0YXR1cyA9PT0gODtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW5ldHdvcmtTdGF0dXMuanMubWFwIl0sIm5hbWVzIjpbIk5ldHdvcmtTdGF0dXMiLCJpc05ldHdvcmtSZXF1ZXN0SW5GbGlnaHQiLCJuZXR3b3JrU3RhdHVzIiwiaXNOZXR3b3JrUmVxdWVzdFNldHRsZWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/core/networkStatus.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/dev/loadDevMessages.js":
/*!************************************************************!*\
  !*** ./node_modules/@apollo/client/dev/loadDevMessages.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   loadDevMessages: () => (/* binding */ loadDevMessages)\n/* harmony export */ });\n/* harmony import */ var _invariantErrorCodes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../invariantErrorCodes.js */ \"(ssr)/./node_modules/@apollo/client/invariantErrorCodes.js\");\n/* harmony import */ var _loadErrorMessageHandler_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./loadErrorMessageHandler.js */ \"(ssr)/./node_modules/@apollo/client/dev/loadErrorMessageHandler.js\");\n\n\nfunction loadDevMessages() {\n    (0,_loadErrorMessageHandler_js__WEBPACK_IMPORTED_MODULE_0__.loadErrorMessageHandler)(_invariantErrorCodes_js__WEBPACK_IMPORTED_MODULE_1__.devDebug, _invariantErrorCodes_js__WEBPACK_IMPORTED_MODULE_1__.devError, _invariantErrorCodes_js__WEBPACK_IMPORTED_MODULE_1__.devLog, _invariantErrorCodes_js__WEBPACK_IMPORTED_MODULE_1__.devWarn);\n} //# sourceMappingURL=loadDevMessages.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFwb2xsby9jbGllbnQvZGV2L2xvYWREZXZNZXNzYWdlcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBZ0Y7QUFDVDtBQUNoRSxTQUFTSztJQUNaRCxvRkFBdUJBLENBQUNKLDZEQUFRQSxFQUFFQyw2REFBUUEsRUFBRUMsMkRBQU1BLEVBQUVDLDREQUFPQTtBQUMvRCxFQUNBLDJDQUEyQyIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1cm5pLWFwcC8uL25vZGVfbW9kdWxlcy9AYXBvbGxvL2NsaWVudC9kZXYvbG9hZERldk1lc3NhZ2VzLmpzP2ZiNGIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZGV2RGVidWcsIGRldkVycm9yLCBkZXZMb2csIGRldldhcm4gfSBmcm9tIFwiLi4vaW52YXJpYW50RXJyb3JDb2Rlcy5qc1wiO1xuaW1wb3J0IHsgbG9hZEVycm9yTWVzc2FnZUhhbmRsZXIgfSBmcm9tIFwiLi9sb2FkRXJyb3JNZXNzYWdlSGFuZGxlci5qc1wiO1xuZXhwb3J0IGZ1bmN0aW9uIGxvYWREZXZNZXNzYWdlcygpIHtcbiAgICBsb2FkRXJyb3JNZXNzYWdlSGFuZGxlcihkZXZEZWJ1ZywgZGV2RXJyb3IsIGRldkxvZywgZGV2V2Fybik7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1sb2FkRGV2TWVzc2FnZXMuanMubWFwIl0sIm5hbWVzIjpbImRldkRlYnVnIiwiZGV2RXJyb3IiLCJkZXZMb2ciLCJkZXZXYXJuIiwibG9hZEVycm9yTWVzc2FnZUhhbmRsZXIiLCJsb2FkRGV2TWVzc2FnZXMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/dev/loadDevMessages.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/dev/loadErrorMessageHandler.js":
/*!********************************************************************!*\
  !*** ./node_modules/@apollo/client/dev/loadErrorMessageHandler.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   loadErrorMessageHandler: () => (/* binding */ loadErrorMessageHandler)\n/* harmony export */ });\n/* harmony import */ var _utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utilities/globals/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/globals/index.js\");\n/* harmony import */ var _utilities_globals_invariantWrappers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utilities/globals/invariantWrappers.js */ \"(ssr)/./node_modules/@apollo/client/utilities/globals/invariantWrappers.js\");\n\n\nfunction loadErrorMessageHandler() {\n    var errorCodes = [];\n    for(var _i = 0; _i < arguments.length; _i++){\n        errorCodes[_i] = arguments[_i];\n    }\n    if (!_utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.global[_utilities_globals_invariantWrappers_js__WEBPACK_IMPORTED_MODULE_1__.ApolloErrorMessageHandler]) {\n        _utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.global[_utilities_globals_invariantWrappers_js__WEBPACK_IMPORTED_MODULE_1__.ApolloErrorMessageHandler] = handler;\n    }\n    for(var _a = 0, errorCodes_1 = errorCodes; _a < errorCodes_1.length; _a++){\n        var codes = errorCodes_1[_a];\n        Object.assign(_utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.global[_utilities_globals_invariantWrappers_js__WEBPACK_IMPORTED_MODULE_1__.ApolloErrorMessageHandler], codes);\n    }\n    return _utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.global[_utilities_globals_invariantWrappers_js__WEBPACK_IMPORTED_MODULE_1__.ApolloErrorMessageHandler];\n    function handler(message, args) {\n        if (typeof message === \"number\") {\n            var definition = _utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.global[_utilities_globals_invariantWrappers_js__WEBPACK_IMPORTED_MODULE_1__.ApolloErrorMessageHandler][message];\n            if (!message || !(definition === null || definition === void 0 ? void 0 : definition.message)) return;\n            message = definition.message;\n        }\n        return args.reduce(function(msg, arg) {\n            return msg.replace(/%[sdfo]/, String(arg));\n        }, String(message));\n    }\n} //# sourceMappingURL=loadErrorMessageHandler.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFwb2xsby9jbGllbnQvZGV2L2xvYWRFcnJvck1lc3NhZ2VIYW5kbGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUF1RDtBQUMrQjtBQUMvRSxTQUFTRTtJQUNaLElBQUlDLGFBQWEsRUFBRTtJQUNuQixJQUFLLElBQUlDLEtBQUssR0FBR0EsS0FBS0MsVUFBVUMsTUFBTSxFQUFFRixLQUFNO1FBQzFDRCxVQUFVLENBQUNDLEdBQUcsR0FBR0MsU0FBUyxDQUFDRCxHQUFHO0lBQ2xDO0lBQ0EsSUFBSSxDQUFDSiwrREFBTSxDQUFDQyw4RkFBeUJBLENBQUMsRUFBRTtRQUNwQ0QsK0RBQU0sQ0FBQ0MsOEZBQXlCQSxDQUFDLEdBQUdNO0lBQ3hDO0lBQ0EsSUFBSyxJQUFJQyxLQUFLLEdBQUdDLGVBQWVOLFlBQVlLLEtBQUtDLGFBQWFILE1BQU0sRUFBRUUsS0FBTTtRQUN4RSxJQUFJRSxRQUFRRCxZQUFZLENBQUNELEdBQUc7UUFDNUJHLE9BQU9DLE1BQU0sQ0FBQ1osK0RBQU0sQ0FBQ0MsOEZBQXlCQSxDQUFDLEVBQUVTO0lBQ3JEO0lBQ0EsT0FBT1YsK0RBQU0sQ0FBQ0MsOEZBQXlCQSxDQUFDO0lBQ3hDLFNBQVNNLFFBQVFNLE9BQU8sRUFBRUMsSUFBSTtRQUMxQixJQUFJLE9BQU9ELFlBQVksVUFBVTtZQUM3QixJQUFJRSxhQUFhZiwrREFBTSxDQUFDQyw4RkFBeUJBLENBQUMsQ0FBQ1ksUUFBUTtZQUMzRCxJQUFJLENBQUNBLFdBQVcsQ0FBRUUsQ0FBQUEsZUFBZSxRQUFRQSxlQUFlLEtBQUssSUFBSSxLQUFLLElBQUlBLFdBQVdGLE9BQU8sR0FDeEY7WUFDSkEsVUFBVUUsV0FBV0YsT0FBTztRQUNoQztRQUNBLE9BQU9DLEtBQUtFLE1BQU0sQ0FBQyxTQUFVQyxHQUFHLEVBQUVDLEdBQUc7WUFBSSxPQUFPRCxJQUFJRSxPQUFPLENBQUMsV0FBV0MsT0FBT0Y7UUFBTyxHQUFHRSxPQUFPUDtJQUNuRztBQUNKLEVBQ0EsbURBQW1EIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVybmktYXBwLy4vbm9kZV9tb2R1bGVzL0BhcG9sbG8vY2xpZW50L2Rldi9sb2FkRXJyb3JNZXNzYWdlSGFuZGxlci5qcz82ZjFkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdsb2JhbCB9IGZyb20gXCIuLi91dGlsaXRpZXMvZ2xvYmFscy9pbmRleC5qc1wiO1xuaW1wb3J0IHsgQXBvbGxvRXJyb3JNZXNzYWdlSGFuZGxlciB9IGZyb20gXCIuLi91dGlsaXRpZXMvZ2xvYmFscy9pbnZhcmlhbnRXcmFwcGVycy5qc1wiO1xuZXhwb3J0IGZ1bmN0aW9uIGxvYWRFcnJvck1lc3NhZ2VIYW5kbGVyKCkge1xuICAgIHZhciBlcnJvckNvZGVzID0gW107XG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGFyZ3VtZW50cy5sZW5ndGg7IF9pKyspIHtcbiAgICAgICAgZXJyb3JDb2Rlc1tfaV0gPSBhcmd1bWVudHNbX2ldO1xuICAgIH1cbiAgICBpZiAoIWdsb2JhbFtBcG9sbG9FcnJvck1lc3NhZ2VIYW5kbGVyXSkge1xuICAgICAgICBnbG9iYWxbQXBvbGxvRXJyb3JNZXNzYWdlSGFuZGxlcl0gPSBoYW5kbGVyO1xuICAgIH1cbiAgICBmb3IgKHZhciBfYSA9IDAsIGVycm9yQ29kZXNfMSA9IGVycm9yQ29kZXM7IF9hIDwgZXJyb3JDb2Rlc18xLmxlbmd0aDsgX2ErKykge1xuICAgICAgICB2YXIgY29kZXMgPSBlcnJvckNvZGVzXzFbX2FdO1xuICAgICAgICBPYmplY3QuYXNzaWduKGdsb2JhbFtBcG9sbG9FcnJvck1lc3NhZ2VIYW5kbGVyXSwgY29kZXMpO1xuICAgIH1cbiAgICByZXR1cm4gZ2xvYmFsW0Fwb2xsb0Vycm9yTWVzc2FnZUhhbmRsZXJdO1xuICAgIGZ1bmN0aW9uIGhhbmRsZXIobWVzc2FnZSwgYXJncykge1xuICAgICAgICBpZiAodHlwZW9mIG1lc3NhZ2UgPT09IFwibnVtYmVyXCIpIHtcbiAgICAgICAgICAgIHZhciBkZWZpbml0aW9uID0gZ2xvYmFsW0Fwb2xsb0Vycm9yTWVzc2FnZUhhbmRsZXJdW21lc3NhZ2VdO1xuICAgICAgICAgICAgaWYgKCFtZXNzYWdlIHx8ICEoZGVmaW5pdGlvbiA9PT0gbnVsbCB8fCBkZWZpbml0aW9uID09PSB2b2lkIDAgPyB2b2lkIDAgOiBkZWZpbml0aW9uLm1lc3NhZ2UpKVxuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIG1lc3NhZ2UgPSBkZWZpbml0aW9uLm1lc3NhZ2U7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGFyZ3MucmVkdWNlKGZ1bmN0aW9uIChtc2csIGFyZykgeyByZXR1cm4gbXNnLnJlcGxhY2UoLyVbc2Rmb10vLCBTdHJpbmcoYXJnKSk7IH0sIFN0cmluZyhtZXNzYWdlKSk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bG9hZEVycm9yTWVzc2FnZUhhbmRsZXIuanMubWFwIl0sIm5hbWVzIjpbImdsb2JhbCIsIkFwb2xsb0Vycm9yTWVzc2FnZUhhbmRsZXIiLCJsb2FkRXJyb3JNZXNzYWdlSGFuZGxlciIsImVycm9yQ29kZXMiLCJfaSIsImFyZ3VtZW50cyIsImxlbmd0aCIsImhhbmRsZXIiLCJfYSIsImVycm9yQ29kZXNfMSIsImNvZGVzIiwiT2JqZWN0IiwiYXNzaWduIiwibWVzc2FnZSIsImFyZ3MiLCJkZWZpbml0aW9uIiwicmVkdWNlIiwibXNnIiwiYXJnIiwicmVwbGFjZSIsIlN0cmluZyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/dev/loadErrorMessageHandler.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/dev/loadErrorMessages.js":
/*!**************************************************************!*\
  !*** ./node_modules/@apollo/client/dev/loadErrorMessages.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   loadErrorMessages: () => (/* binding */ loadErrorMessages)\n/* harmony export */ });\n/* harmony import */ var _invariantErrorCodes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../invariantErrorCodes.js */ \"(ssr)/./node_modules/@apollo/client/invariantErrorCodes.js\");\n/* harmony import */ var _loadErrorMessageHandler_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./loadErrorMessageHandler.js */ \"(ssr)/./node_modules/@apollo/client/dev/loadErrorMessageHandler.js\");\n\n\nfunction loadErrorMessages() {\n    (0,_loadErrorMessageHandler_js__WEBPACK_IMPORTED_MODULE_0__.loadErrorMessageHandler)(_invariantErrorCodes_js__WEBPACK_IMPORTED_MODULE_1__.errorCodes);\n} //# sourceMappingURL=loadErrorMessages.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFwb2xsby9jbGllbnQvZGV2L2xvYWRFcnJvck1lc3NhZ2VzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUF1RDtBQUNnQjtBQUNoRSxTQUFTRTtJQUNaRCxvRkFBdUJBLENBQUNELCtEQUFVQTtBQUN0QyxFQUNBLDZDQUE2QyIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1cm5pLWFwcC8uL25vZGVfbW9kdWxlcy9AYXBvbGxvL2NsaWVudC9kZXYvbG9hZEVycm9yTWVzc2FnZXMuanM/ZDljMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBlcnJvckNvZGVzIH0gZnJvbSBcIi4uL2ludmFyaWFudEVycm9yQ29kZXMuanNcIjtcbmltcG9ydCB7IGxvYWRFcnJvck1lc3NhZ2VIYW5kbGVyIH0gZnJvbSBcIi4vbG9hZEVycm9yTWVzc2FnZUhhbmRsZXIuanNcIjtcbmV4cG9ydCBmdW5jdGlvbiBsb2FkRXJyb3JNZXNzYWdlcygpIHtcbiAgICBsb2FkRXJyb3JNZXNzYWdlSGFuZGxlcihlcnJvckNvZGVzKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWxvYWRFcnJvck1lc3NhZ2VzLmpzLm1hcCJdLCJuYW1lcyI6WyJlcnJvckNvZGVzIiwibG9hZEVycm9yTWVzc2FnZUhhbmRsZXIiLCJsb2FkRXJyb3JNZXNzYWdlcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/dev/loadErrorMessages.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/errors/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/@apollo/client/errors/index.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ApolloError: () => (/* binding */ ApolloError),\n/* harmony export */   PROTOCOL_ERRORS_SYMBOL: () => (/* binding */ PROTOCOL_ERRORS_SYMBOL),\n/* harmony export */   graphQLResultHasProtocolErrors: () => (/* binding */ graphQLResultHasProtocolErrors),\n/* harmony export */   isApolloError: () => (/* binding */ isApolloError)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.mjs\");\n/* harmony import */ var _utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utilities/globals/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/globals/index.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/common/objects.js\");\n\n\n\nvar PROTOCOL_ERRORS_SYMBOL = Symbol();\nfunction graphQLResultHasProtocolErrors(result) {\n    if (result.extensions) {\n        return Array.isArray(result.extensions[PROTOCOL_ERRORS_SYMBOL]);\n    }\n    return false;\n}\nfunction isApolloError(err) {\n    return err.hasOwnProperty(\"graphQLErrors\");\n}\nvar generateErrorMessage = function(err) {\n    var errors = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)([], err.graphQLErrors, true), err.clientErrors, true), err.protocolErrors, true);\n    if (err.networkError) errors.push(err.networkError);\n    return errors.map(function(err) {\n        return (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_2__.isNonNullObject)(err) && err.message || \"Error message not found.\";\n    }).join(\"\\n\");\n};\nvar ApolloError = function(_super) {\n    (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__extends)(ApolloError, _super);\n    function ApolloError(_a) {\n        var graphQLErrors = _a.graphQLErrors, protocolErrors = _a.protocolErrors, clientErrors = _a.clientErrors, networkError = _a.networkError, errorMessage = _a.errorMessage, extraInfo = _a.extraInfo;\n        var _this = _super.call(this, errorMessage) || this;\n        _this.name = \"ApolloError\";\n        _this.graphQLErrors = graphQLErrors || [];\n        _this.protocolErrors = protocolErrors || [];\n        _this.clientErrors = clientErrors || [];\n        _this.networkError = networkError || null;\n        _this.message = errorMessage || generateErrorMessage(_this);\n        _this.extraInfo = extraInfo;\n        _this.__proto__ = ApolloError.prototype;\n        return _this;\n    }\n    return ApolloError;\n}(Error);\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFwb2xsby9jbGllbnQvZXJyb3JzL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBaUQ7QUFDVjtBQUNpQjtBQUNqRCxJQUFJRyx5QkFBeUJDLFNBQVM7QUFDdEMsU0FBU0MsK0JBQStCQyxNQUFNO0lBQ2pELElBQUlBLE9BQU9DLFVBQVUsRUFBRTtRQUNuQixPQUFPQyxNQUFNQyxPQUFPLENBQUNILE9BQU9DLFVBQVUsQ0FBQ0osdUJBQXVCO0lBQ2xFO0lBQ0EsT0FBTztBQUNYO0FBQ08sU0FBU08sY0FBY0MsR0FBRztJQUM3QixPQUFPQSxJQUFJQyxjQUFjLENBQUM7QUFDOUI7QUFDQSxJQUFJQyx1QkFBdUIsU0FBVUYsR0FBRztJQUNwQyxJQUFJRyxTQUFTYixvREFBYUEsQ0FBQ0Esb0RBQWFBLENBQUNBLG9EQUFhQSxDQUFDLEVBQUUsRUFBRVUsSUFBSUksYUFBYSxFQUFFLE9BQU9KLElBQUlLLFlBQVksRUFBRSxPQUFPTCxJQUFJTSxjQUFjLEVBQUU7SUFDbEksSUFBSU4sSUFBSU8sWUFBWSxFQUNoQkosT0FBT0ssSUFBSSxDQUFDUixJQUFJTyxZQUFZO0lBQ2hDLE9BQVFKLE9BQ0hNLEdBQUcsQ0FBQyxTQUFVVCxHQUFHO1FBQ2xCLE9BQU8scUVBQWlCQSxRQUFRQSxJQUFJVSxPQUFPLElBQUs7SUFDcEQsR0FDS0MsSUFBSSxDQUFDO0FBQ2Q7QUFDQSxJQUFJQyxjQUFlLFNBQVVDLE1BQU07SUFDL0J4QixnREFBU0EsQ0FBQ3VCLGFBQWFDO0lBQ3ZCLFNBQVNELFlBQVlFLEVBQUU7UUFDbkIsSUFBSVYsZ0JBQWdCVSxHQUFHVixhQUFhLEVBQUVFLGlCQUFpQlEsR0FBR1IsY0FBYyxFQUFFRCxlQUFlUyxHQUFHVCxZQUFZLEVBQUVFLGVBQWVPLEdBQUdQLFlBQVksRUFBRVEsZUFBZUQsR0FBR0MsWUFBWSxFQUFFQyxZQUFZRixHQUFHRSxTQUFTO1FBQ2xNLElBQUlDLFFBQVFKLE9BQU9LLElBQUksQ0FBQyxJQUFJLEVBQUVILGlCQUFpQixJQUFJO1FBQ25ERSxNQUFNRSxJQUFJLEdBQUc7UUFDYkYsTUFBTWIsYUFBYSxHQUFHQSxpQkFBaUIsRUFBRTtRQUN6Q2EsTUFBTVgsY0FBYyxHQUFHQSxrQkFBa0IsRUFBRTtRQUMzQ1csTUFBTVosWUFBWSxHQUFHQSxnQkFBZ0IsRUFBRTtRQUN2Q1ksTUFBTVYsWUFBWSxHQUFHQSxnQkFBZ0I7UUFDckNVLE1BQU1QLE9BQU8sR0FBR0ssZ0JBQWdCYixxQkFBcUJlO1FBQ3JEQSxNQUFNRCxTQUFTLEdBQUdBO1FBQ2xCQyxNQUFNRyxTQUFTLEdBQUdSLFlBQVlTLFNBQVM7UUFDdkMsT0FBT0o7SUFDWDtJQUNBLE9BQU9MO0FBQ1gsRUFBRVU7QUFDcUIsQ0FDdkIsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVybmktYXBwLy4vbm9kZV9tb2R1bGVzL0BhcG9sbG8vY2xpZW50L2Vycm9ycy9pbmRleC5qcz8yOTU5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IF9fZXh0ZW5kcywgX19zcHJlYWRBcnJheSB9IGZyb20gXCJ0c2xpYlwiO1xuaW1wb3J0IFwiLi4vdXRpbGl0aWVzL2dsb2JhbHMvaW5kZXguanNcIjtcbmltcG9ydCB7IGlzTm9uTnVsbE9iamVjdCB9IGZyb20gXCIuLi91dGlsaXRpZXMvaW5kZXguanNcIjtcbmV4cG9ydCB2YXIgUFJPVE9DT0xfRVJST1JTX1NZTUJPTCA9IFN5bWJvbCgpO1xuZXhwb3J0IGZ1bmN0aW9uIGdyYXBoUUxSZXN1bHRIYXNQcm90b2NvbEVycm9ycyhyZXN1bHQpIHtcbiAgICBpZiAocmVzdWx0LmV4dGVuc2lvbnMpIHtcbiAgICAgICAgcmV0dXJuIEFycmF5LmlzQXJyYXkocmVzdWx0LmV4dGVuc2lvbnNbUFJPVE9DT0xfRVJST1JTX1NZTUJPTF0pO1xuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNBcG9sbG9FcnJvcihlcnIpIHtcbiAgICByZXR1cm4gZXJyLmhhc093blByb3BlcnR5KFwiZ3JhcGhRTEVycm9yc1wiKTtcbn1cbnZhciBnZW5lcmF0ZUVycm9yTWVzc2FnZSA9IGZ1bmN0aW9uIChlcnIpIHtcbiAgICB2YXIgZXJyb3JzID0gX19zcHJlYWRBcnJheShfX3NwcmVhZEFycmF5KF9fc3ByZWFkQXJyYXkoW10sIGVyci5ncmFwaFFMRXJyb3JzLCB0cnVlKSwgZXJyLmNsaWVudEVycm9ycywgdHJ1ZSksIGVyci5wcm90b2NvbEVycm9ycywgdHJ1ZSk7XG4gICAgaWYgKGVyci5uZXR3b3JrRXJyb3IpXG4gICAgICAgIGVycm9ycy5wdXNoKGVyci5uZXR3b3JrRXJyb3IpO1xuICAgIHJldHVybiAoZXJyb3JzXG4gICAgICAgIC5tYXAoZnVuY3Rpb24gKGVycikge1xuICAgICAgICByZXR1cm4gKGlzTm9uTnVsbE9iamVjdChlcnIpICYmIGVyci5tZXNzYWdlKSB8fCBcIkVycm9yIG1lc3NhZ2Ugbm90IGZvdW5kLlwiO1xuICAgIH0pXG4gICAgICAgIC5qb2luKFwiXFxuXCIpKTtcbn07XG52YXIgQXBvbGxvRXJyb3IgPSAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhBcG9sbG9FcnJvciwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBBcG9sbG9FcnJvcihfYSkge1xuICAgICAgICB2YXIgZ3JhcGhRTEVycm9ycyA9IF9hLmdyYXBoUUxFcnJvcnMsIHByb3RvY29sRXJyb3JzID0gX2EucHJvdG9jb2xFcnJvcnMsIGNsaWVudEVycm9ycyA9IF9hLmNsaWVudEVycm9ycywgbmV0d29ya0Vycm9yID0gX2EubmV0d29ya0Vycm9yLCBlcnJvck1lc3NhZ2UgPSBfYS5lcnJvck1lc3NhZ2UsIGV4dHJhSW5mbyA9IF9hLmV4dHJhSW5mbztcbiAgICAgICAgdmFyIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcywgZXJyb3JNZXNzYWdlKSB8fCB0aGlzO1xuICAgICAgICBfdGhpcy5uYW1lID0gXCJBcG9sbG9FcnJvclwiO1xuICAgICAgICBfdGhpcy5ncmFwaFFMRXJyb3JzID0gZ3JhcGhRTEVycm9ycyB8fCBbXTtcbiAgICAgICAgX3RoaXMucHJvdG9jb2xFcnJvcnMgPSBwcm90b2NvbEVycm9ycyB8fCBbXTtcbiAgICAgICAgX3RoaXMuY2xpZW50RXJyb3JzID0gY2xpZW50RXJyb3JzIHx8IFtdO1xuICAgICAgICBfdGhpcy5uZXR3b3JrRXJyb3IgPSBuZXR3b3JrRXJyb3IgfHwgbnVsbDtcbiAgICAgICAgX3RoaXMubWVzc2FnZSA9IGVycm9yTWVzc2FnZSB8fCBnZW5lcmF0ZUVycm9yTWVzc2FnZShfdGhpcyk7XG4gICAgICAgIF90aGlzLmV4dHJhSW5mbyA9IGV4dHJhSW5mbztcbiAgICAgICAgX3RoaXMuX19wcm90b19fID0gQXBvbGxvRXJyb3IucHJvdG90eXBlO1xuICAgICAgICByZXR1cm4gX3RoaXM7XG4gICAgfVxuICAgIHJldHVybiBBcG9sbG9FcnJvcjtcbn0oRXJyb3IpKTtcbmV4cG9ydCB7IEFwb2xsb0Vycm9yIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOlsiX19leHRlbmRzIiwiX19zcHJlYWRBcnJheSIsImlzTm9uTnVsbE9iamVjdCIsIlBST1RPQ09MX0VSUk9SU19TWU1CT0wiLCJTeW1ib2wiLCJncmFwaFFMUmVzdWx0SGFzUHJvdG9jb2xFcnJvcnMiLCJyZXN1bHQiLCJleHRlbnNpb25zIiwiQXJyYXkiLCJpc0FycmF5IiwiaXNBcG9sbG9FcnJvciIsImVyciIsImhhc093blByb3BlcnR5IiwiZ2VuZXJhdGVFcnJvck1lc3NhZ2UiLCJlcnJvcnMiLCJncmFwaFFMRXJyb3JzIiwiY2xpZW50RXJyb3JzIiwicHJvdG9jb2xFcnJvcnMiLCJuZXR3b3JrRXJyb3IiLCJwdXNoIiwibWFwIiwibWVzc2FnZSIsImpvaW4iLCJBcG9sbG9FcnJvciIsIl9zdXBlciIsIl9hIiwiZXJyb3JNZXNzYWdlIiwiZXh0cmFJbmZvIiwiX3RoaXMiLCJjYWxsIiwibmFtZSIsIl9fcHJvdG9fXyIsInByb3RvdHlwZSIsIkVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/errors/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/invariantErrorCodes.js":
/*!************************************************************!*\
  !*** ./node_modules/@apollo/client/invariantErrorCodes.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   devDebug: () => (/* binding */ devDebug),\n/* harmony export */   devError: () => (/* binding */ devError),\n/* harmony export */   devLog: () => (/* binding */ devLog),\n/* harmony export */   devWarn: () => (/* binding */ devWarn),\n/* harmony export */   errorCodes: () => (/* binding */ errorCodes)\n/* harmony export */ });\nconst errorCodes = // @apollo/client/includeErrors entry point.\n// This file is not meant to be imported manually.\n{\n    1: {\n        file: \"@apollo/client/cache/inmemory/entityStore.js\",\n        condition: 'typeof dataId === \"string\"',\n        message: \"store.merge expects a string ID\"\n    },\n    4: {\n        file: \"@apollo/client/cache/inmemory/key-extractor.js\",\n        condition: \"extracted !== void 0\",\n        message: \"Missing field '%s' while extracting keyFields from %s\"\n    },\n    5: {\n        file: \"@apollo/client/cache/inmemory/policies.js\",\n        condition: \"!old || old === which\",\n        message: \"Cannot change root %s __typename more than once\"\n    },\n    8: {\n        file: \"@apollo/client/cache/inmemory/policies.js\",\n        message: \"Cannot automatically merge arrays\"\n    },\n    9: {\n        file: \"@apollo/client/cache/inmemory/readFromStore.js\",\n        message: \"No fragment named %s\"\n    },\n    10: {\n        file: \"@apollo/client/cache/inmemory/readFromStore.js\",\n        condition: \"!isReference(value)\",\n        message: \"Missing selection set for object of type %s returned for query field %s\"\n    },\n    11: {\n        file: \"@apollo/client/cache/inmemory/writeToStore.js\",\n        message: \"Could not identify object %s\"\n    },\n    13: {\n        file: \"@apollo/client/cache/inmemory/writeToStore.js\",\n        message: \"No fragment named %s\"\n    },\n    15: {\n        file: \"@apollo/client/core/ApolloClient.js\",\n        message: \"To initialize Apollo Client, you must specify a 'cache' property \" + \"in the options object. \\n\" + \"For more information, please visit: https://go.apollo.dev/c/docs\"\n    },\n    16: {\n        file: \"@apollo/client/core/ApolloClient.js\",\n        condition: 'options.fetchPolicy !== \"cache-and-network\"',\n        message: \"The cache-and-network fetchPolicy does not work with client.query, because \" + \"client.query can only return a single result. Please use client.watchQuery \" + \"to receive multiple results from the cache and the network, or consider \" + \"using a different fetchPolicy, such as cache-first or network-only.\"\n    },\n    18: {\n        file: \"@apollo/client/core/LocalState.js\",\n        condition: \"fragment\",\n        message: \"No fragment named %s\"\n    },\n    19: {\n        file: \"@apollo/client/core/LocalState.js\",\n        condition: \"fragment\",\n        message: \"No fragment named %s\"\n    },\n    22: {\n        file: \"@apollo/client/core/ObservableQuery.js\",\n        condition: \"pollInterval\",\n        message: \"Attempted to start a polling query without a polling interval.\"\n    },\n    25: {\n        file: \"@apollo/client/core/QueryManager.js\",\n        message: \"QueryManager stopped while query was in flight\"\n    },\n    26: {\n        file: \"@apollo/client/core/QueryManager.js\",\n        condition: \"mutation\",\n        message: \"mutation option is required. You must specify your GraphQL document in the mutation option.\"\n    },\n    27: {\n        file: \"@apollo/client/core/QueryManager.js\",\n        condition: 'fetchPolicy === \"network-only\" || fetchPolicy === \"no-cache\"',\n        message: \"Mutations support only 'network-only' or 'no-cache' fetchPolicy strings. The default `network-only` behavior automatically writes mutation results to the cache. Passing `no-cache` skips the cache write.\"\n    },\n    28: {\n        file: \"@apollo/client/core/QueryManager.js\",\n        condition: \"options.query\",\n        message: \"query option is required. You must specify your GraphQL document \" + \"in the query option.\"\n    },\n    29: {\n        file: \"@apollo/client/core/QueryManager.js\",\n        condition: 'options.query.kind === \"Document\"',\n        message: 'You must wrap the query string in a \"gql\" tag.'\n    },\n    30: {\n        file: \"@apollo/client/core/QueryManager.js\",\n        condition: \"!options.returnPartialData\",\n        message: \"returnPartialData option only supported on watchQuery.\"\n    },\n    31: {\n        file: \"@apollo/client/core/QueryManager.js\",\n        condition: \"!options.pollInterval\",\n        message: \"pollInterval option only supported on watchQuery.\"\n    },\n    32: {\n        file: \"@apollo/client/core/QueryManager.js\",\n        message: \"Store reset while query was in flight (not completed in link chain)\"\n    },\n    36: {\n        file: \"@apollo/client/link/core/ApolloLink.js\",\n        message: \"request is not implemented\"\n    },\n    37: {\n        file: \"@apollo/client/link/http/checkFetcher.js\",\n        message: \"\\n\\\"fetch\\\" has not been found globally and no fetcher has been configured. To fix this, install a fetch package (like https://www.npmjs.com/package/cross-fetch), instantiate the fetcher, and pass it into your HttpLink constructor. For example:\\n\\nimport fetch from 'cross-fetch';\\nimport { ApolloClient, HttpLink } from '@apollo/client';\\nconst client = new ApolloClient({\\n  link: new HttpLink({ uri: '/graphql', fetch })\\n});\\n    \"\n    },\n    39: {\n        file: \"@apollo/client/link/http/serializeFetchParameter.js\",\n        message: \"Network request failed. %s is not serializable: %s\"\n    },\n    40: {\n        file: \"@apollo/client/link/persisted-queries/index.js\",\n        condition: 'options &&\\n    (typeof options.sha256 === \"function\" ||\\n        typeof options.generateHash === \"function\")',\n        message: 'Missing/invalid \"sha256\" or \"generateHash\" function. Please ' + 'configure one using the \"createPersistedQueryLink(options)\" options ' + \"parameter.\"\n    },\n    41: {\n        file: \"@apollo/client/link/persisted-queries/index.js\",\n        condition: \"forward\",\n        message: \"PersistedQueryLink cannot be the last link in the chain.\"\n    },\n    43: {\n        file: \"@apollo/client/link/utils/validateOperation.js\",\n        message: \"illegal argument: %s\"\n    },\n    44: {\n        file: \"@apollo/client/react/context/ApolloConsumer.js\",\n        condition: \"context && context.client\",\n        message: 'Could not find \"client\" in the context of ApolloConsumer. ' + \"Wrap the root component in an <ApolloProvider>.\"\n    },\n    45: {\n        file: \"@apollo/client/react/context/ApolloContext.js\",\n        condition: '\"createContext\" in React',\n        message: \"Invoking `getApolloContext` in an environment where `React.createContext` is not available.\\n\" + \"The Apollo Client functionality you are trying to use is only available in React Client Components.\\n\" + 'Please make sure to add \"use client\" at the top of your file.\\n' + \"For more information, see https://nextjs.org/docs/getting-started/react-essentials#client-components\"\n    },\n    46: {\n        file: \"@apollo/client/react/context/ApolloProvider.js\",\n        condition: \"context.client\",\n        message: \"ApolloProvider was not passed a client instance. Make \" + 'sure you pass in your client via the \"client\" prop.'\n    },\n    47: {\n        file: \"@apollo/client/react/hoc/hoc-utils.js\",\n        condition: \"this.withRef\",\n        message: \"To access the wrapped instance, you need to specify \" + \"{ withRef: true } in the options\"\n    },\n    48: {\n        file: \"@apollo/client/react/hoc/withApollo.js\",\n        condition: \"operationOptions.withRef\",\n        message: \"To access the wrapped instance, you need to specify \" + \"{ withRef: true } in the options\"\n    },\n    49: {\n        file: \"@apollo/client/react/hooks/useApolloClient.js\",\n        condition: \"!!client\",\n        message: 'Could not find \"client\" in the context or passed in as an option. ' + \"Wrap the root component in an <ApolloProvider>, or pass an ApolloClient \" + \"instance in via options.\"\n    },\n    51: {\n        file: \"@apollo/client/react/hooks/useReadQuery.js\",\n        condition: \"internalQueryRef.promiseCache\",\n        message: \"It appears that `useReadQuery` was used outside of `useBackgroundQuery`. \" + \"`useReadQuery` is only supported for use with `useBackgroundQuery`. \" + \"Please ensure you are passing the `queryRef` returned from `useBackgroundQuery`.\"\n    },\n    56: {\n        file: \"@apollo/client/react/hooks/useSuspenseQuery.js\",\n        condition: \"supportedFetchPolicies.includes(fetchPolicy)\",\n        message: \"The fetch policy `%s` is not supported with suspense.\"\n    },\n    59: {\n        file: \"@apollo/client/react/parser/index.js\",\n        condition: \"!!document && !!document.kind\",\n        message: \"Argument of %s passed to parser was not a valid GraphQL \" + \"DocumentNode. You may need to use 'graphql-tag' or another method \" + \"to convert your operation into a document\"\n    },\n    60: {\n        file: \"@apollo/client/react/parser/index.js\",\n        condition: \"!fragments.length ||\\n    queries.length ||\\n    mutations.length ||\\n    subscriptions.length\",\n        message: \"Passing only a fragment to 'graphql' is not yet supported. \" + \"You must include a query, subscription or mutation as well\"\n    },\n    61: {\n        file: \"@apollo/client/react/parser/index.js\",\n        condition: \"queries.length + mutations.length + subscriptions.length <= 1\",\n        message: \"react-apollo only supports a query, subscription, or a mutation per HOC. \" + \"%s had %s queries, %s \" + \"subscriptions and %s mutations. \" + \"You can use 'compose' to join multiple operation types to a component\"\n    },\n    62: {\n        file: \"@apollo/client/react/parser/index.js\",\n        condition: \"definitions.length === 1\",\n        message: \"react-apollo only supports one definition per HOC. %s had \" + \"%s definitions. \" + \"You can use 'compose' to join multiple operation types to a component\"\n    },\n    63: {\n        file: \"@apollo/client/react/parser/index.js\",\n        condition: \"operation.type === type\",\n        message: \"Running a %s requires a graphql \" + \"%s, but a %s was used instead.\"\n    },\n    64: {\n        file: \"@apollo/client/testing/core/mocking/mockLink.js\",\n        condition: \"queryWithoutConnection\",\n        message: \"query is required\"\n    },\n    65: {\n        file: \"@apollo/client/utilities/graphql/DocumentTransform.js\",\n        condition: \"Array.isArray(cacheKeys)\",\n        message: \"`getCacheKey` must return an array or undefined\"\n    },\n    66: {\n        file: \"@apollo/client/utilities/graphql/directives.js\",\n        condition: \"evaledValue !== void 0\",\n        message: \"Invalid variable referenced in @%s directive.\"\n    },\n    67: {\n        file: \"@apollo/client/utilities/graphql/directives.js\",\n        condition: \"directiveArguments && directiveArguments.length === 1\",\n        message: \"Incorrect number of arguments for the @%s directive.\"\n    },\n    68: {\n        file: \"@apollo/client/utilities/graphql/directives.js\",\n        condition: 'ifArgument.name && ifArgument.name.value === \"if\"',\n        message: \"Invalid argument for the @%s directive.\"\n    },\n    69: {\n        file: \"@apollo/client/utilities/graphql/directives.js\",\n        condition: 'ifValue &&\\n    (ifValue.kind === \"Variable\" || ifValue.kind === \"BooleanValue\")',\n        message: \"Argument for the @%s directive must be a variable or a boolean value.\"\n    },\n    70: {\n        file: \"@apollo/client/utilities/graphql/fragments.js\",\n        message: \"Found a %s operation%s. \" + \"No operations are allowed when using a fragment as a query. Only fragments are allowed.\"\n    },\n    71: {\n        file: \"@apollo/client/utilities/graphql/fragments.js\",\n        condition: \"fragments.length === 1\",\n        message: \"Found %s fragments. `fragmentName` must be provided when there is not exactly 1 fragment.\"\n    },\n    72: {\n        file: \"@apollo/client/utilities/graphql/fragments.js\",\n        condition: \"fragment\",\n        message: \"No fragment named %s\"\n    },\n    73: {\n        file: \"@apollo/client/utilities/graphql/getFromAST.js\",\n        condition: 'doc && doc.kind === \"Document\"',\n        message: 'Expecting a parsed GraphQL document. Perhaps you need to wrap the query string in a \"gql\" tag? http://docs.apollostack.com/apollo-client/core.html#gql'\n    },\n    74: {\n        file: \"@apollo/client/utilities/graphql/getFromAST.js\",\n        message: 'Schema type definitions not allowed in queries. Found: \"%s\"'\n    },\n    75: {\n        file: \"@apollo/client/utilities/graphql/getFromAST.js\",\n        condition: \"operations.length <= 1\",\n        message: \"Ambiguous GraphQL document: contains %s operations\"\n    },\n    76: {\n        file: \"@apollo/client/utilities/graphql/getFromAST.js\",\n        condition: 'queryDef && queryDef.operation === \"query\"',\n        message: \"Must contain a query definition.\"\n    },\n    77: {\n        file: \"@apollo/client/utilities/graphql/getFromAST.js\",\n        condition: 'doc.kind === \"Document\"',\n        message: 'Expecting a parsed GraphQL document. Perhaps you need to wrap the query string in a \"gql\" tag? http://docs.apollostack.com/apollo-client/core.html#gql'\n    },\n    78: {\n        file: \"@apollo/client/utilities/graphql/getFromAST.js\",\n        condition: \"doc.definitions.length <= 1\",\n        message: \"Fragment must have exactly one definition.\"\n    },\n    79: {\n        file: \"@apollo/client/utilities/graphql/getFromAST.js\",\n        condition: 'fragmentDef.kind === \"FragmentDefinition\"',\n        message: \"Must be a fragment definition.\"\n    },\n    80: {\n        file: \"@apollo/client/utilities/graphql/getFromAST.js\",\n        message: \"Expected a parsed GraphQL query with a query, mutation, subscription, or a fragment.\"\n    },\n    81: {\n        file: \"@apollo/client/utilities/graphql/storeUtils.js\",\n        message: 'The inline argument \"%s\" of kind \"%s\"' + \"is not supported. Use variables instead of inline arguments to \" + \"overcome this limitation.\"\n    }\n};\nconst devDebug = {\n    17: {\n        file: \"@apollo/client/core/ApolloClient.js\",\n        message: \"In client.refetchQueries, Promise.all promise rejected with error %o\"\n    },\n    24: {\n        file: \"@apollo/client/core/ObservableQuery.js\",\n        message: \"Missing cache result fields: %o\"\n    }\n};\nconst devLog = {};\nconst devWarn = {\n    2: {\n        file: \"@apollo/client/cache/inmemory/entityStore.js\",\n        message: \"cache.modify: You are trying to write a Reference that is not part of the store: %o\\n\" + \"Please make sure to set the `mergeIntoStore` parameter to `true` when creating a Reference that is not part of the store yet:\\n\" + \"`toReference(object, true)`\"\n    },\n    3: {\n        file: \"@apollo/client/cache/inmemory/entityStore.js\",\n        message: \"cache.modify: Writing an array with a mix of both References and Objects will not result in the Objects being normalized correctly.\\n\" + \"Please convert the object instance %o to a Reference before writing it to the cache by calling `toReference(object, true)`.\"\n    },\n    6: {\n        file: \"@apollo/client/cache/inmemory/policies.js\",\n        message: \"Inferring subtype %s of supertype %s\"\n    },\n    7: {\n        file: \"@apollo/client/cache/inmemory/policies.js\",\n        message: \"Undefined 'from' passed to readField with arguments %s\"\n    },\n    14: {\n        file: \"@apollo/client/cache/inmemory/writeToStore.js\",\n        message: \"Cache data may be lost when replacing the %s field of a %s object.\\n\\nThis could cause additional (usually avoidable) network requests to fetch data that were otherwise cached.\\n\\nTo address this problem (which is not a bug in Apollo Client), %sdefine a custom merge function for the %s field, so InMemoryCache can safely merge these objects:\\n\\n  existing: %s\\n  incoming: %s\\n\\nFor more information about these options, please refer to the documentation:\\n\\n  * Ensuring entity objects have IDs: https://go.apollo.dev/c/generating-unique-identifiers\\n  * Defining custom merge functions: https://go.apollo.dev/c/merging-non-normalized-objects\\n\"\n    },\n    20: {\n        file: \"@apollo/client/core/ObservableQuery.js\",\n        message: \"Called refetch(%o) for query %o, which does not declare a $variables variable.\\nDid you mean to call refetch(variables) instead of refetch({ variables })?\"\n    },\n    33: {\n        file: \"@apollo/client/core/QueryManager.js\",\n        message: 'Unknown query named \"%s\" requested in refetchQueries options.include array'\n    },\n    34: {\n        file: \"@apollo/client/core/QueryManager.js\",\n        message: \"Unknown query %s requested in refetchQueries options.include array\"\n    },\n    35: {\n        file: \"@apollo/client/link/core/ApolloLink.js\",\n        message: \"You are calling concat on a terminating link, which will have no effect %o\"\n    },\n    38: {\n        file: \"@apollo/client/link/http/createHttpLink.js\",\n        message: \"Multipart-subscriptions do not support @defer\"\n    },\n    42: {\n        file: \"@apollo/client/link/utils/toPromise.js\",\n        message: \"Promise Wrapper does not support multiple results from Observable\"\n    },\n    50: {\n        file: \"@apollo/client/react/hooks/useQuery.js\",\n        message: \"Calling default no-op implementation of InternalState#forceUpdate\"\n    },\n    52: {\n        file: \"@apollo/client/react/hooks/useSubscription.js\",\n        message: \"'useSubscription' supports only the 'onSubscriptionData' or 'onData' option, but not both. Only the 'onData' option will be used.\"\n    },\n    53: {\n        file: \"@apollo/client/react/hooks/useSubscription.js\",\n        message: \"'onSubscriptionData' is deprecated and will be removed in a future major version. Please use the 'onData' option instead.\"\n    },\n    54: {\n        file: \"@apollo/client/react/hooks/useSubscription.js\",\n        message: \"'useSubscription' supports only the 'onSubscriptionComplete' or 'onComplete' option, but not both. Only the 'onComplete' option will be used.\"\n    },\n    55: {\n        file: \"@apollo/client/react/hooks/useSubscription.js\",\n        message: \"'onSubscriptionComplete' is deprecated and will be removed in a future major version. Please use the 'onComplete' option instead.\"\n    },\n    57: {\n        file: \"@apollo/client/react/hooks/useSuspenseQuery.js\",\n        message: \"Using `returnPartialData` with a `no-cache` fetch policy has no effect. To read partial data from the cache, consider using an alternate fetch policy.\"\n    },\n    83: {\n        file: \"@apollo/client/utilities/graphql/transform.js\",\n        message: \"Removing an @connection directive even though it does not have a key. \" + \"You may want to use the key parameter to specify a store key.\"\n    }\n};\nconst devError = {\n    12: {\n        file: \"@apollo/client/cache/inmemory/writeToStore.js\",\n        message: \"Missing field '%s' while writing result %o\"\n    },\n    21: {\n        file: \"@apollo/client/core/ObservableQuery.js\",\n        message: \"Unhandled GraphQL subscription error\"\n    },\n    23: {\n        file: \"@apollo/client/core/ObservableQuery.js\",\n        message: \"Unhandled error\"\n    },\n    58: {\n        file: \"@apollo/client/react/hooks/useSyncExternalStore.js\",\n        message: \"The result of getSnapshot should be cached to avoid an infinite loop\"\n    },\n    82: {\n        file: \"@apollo/client/utilities/graphql/transform.js\",\n        message: \"Could not find operation or fragment\"\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFwb2xsby9jbGllbnQvaW52YXJpYW50RXJyb3JDb2Rlcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFPLE1BQU1BLGFBQ2IsNENBQTRDO0FBQzVDLGtEQUFrRDtBQUNsRDtJQUNFLEdBQUc7UUFDREMsTUFBTTtRQUNOQyxXQUFXO1FBQ1hDLFNBQVM7SUFDWDtJQUVBLEdBQUc7UUFDREYsTUFBTTtRQUNOQyxXQUFXO1FBQ1hDLFNBQVM7SUFDWDtJQUVBLEdBQUc7UUFDREYsTUFBTTtRQUNOQyxXQUFXO1FBQ1hDLFNBQVM7SUFDWDtJQUVBLEdBQUc7UUFDREYsTUFBTTtRQUNORSxTQUFTO0lBQ1g7SUFFQSxHQUFHO1FBQ0RGLE1BQU07UUFDTkUsU0FBUztJQUNYO0lBRUEsSUFBSTtRQUNGRixNQUFNO1FBQ05DLFdBQVc7UUFDWEMsU0FBUztJQUNYO0lBRUEsSUFBSTtRQUNGRixNQUFNO1FBQ05FLFNBQVM7SUFDWDtJQUVBLElBQUk7UUFDRkYsTUFBTTtRQUNORSxTQUFTO0lBQ1g7SUFFQSxJQUFJO1FBQ0ZGLE1BQU07UUFFTkUsU0FBUyxzRUFDTCw4QkFDQTtJQUNOO0lBRUEsSUFBSTtRQUNGRixNQUFNO1FBQ05DLFdBQVc7UUFFWEMsU0FBUyxnRkFDTCxnRkFDQSw2RUFDQTtJQUNOO0lBRUEsSUFBSTtRQUNGRixNQUFNO1FBQ05DLFdBQVc7UUFDWEMsU0FBUztJQUNYO0lBRUEsSUFBSTtRQUNGRixNQUFNO1FBQ05DLFdBQVc7UUFDWEMsU0FBUztJQUNYO0lBRUEsSUFBSTtRQUNGRixNQUFNO1FBQ05DLFdBQVc7UUFDWEMsU0FBUztJQUNYO0lBRUEsSUFBSTtRQUNGRixNQUFNO1FBQ05FLFNBQVM7SUFDWDtJQUVBLElBQUk7UUFDRkYsTUFBTTtRQUNOQyxXQUFXO1FBQ1hDLFNBQVM7SUFDWDtJQUVBLElBQUk7UUFDRkYsTUFBTTtRQUNOQyxXQUFXO1FBQ1hDLFNBQVM7SUFDWDtJQUVBLElBQUk7UUFDRkYsTUFBTTtRQUNOQyxXQUFXO1FBRVhDLFNBQVMsc0VBQ0w7SUFDTjtJQUVBLElBQUk7UUFDRkYsTUFBTTtRQUNOQyxXQUFXO1FBQ1hDLFNBQVM7SUFDWDtJQUVBLElBQUk7UUFDRkYsTUFBTTtRQUNOQyxXQUFXO1FBQ1hDLFNBQVM7SUFDWDtJQUVBLElBQUk7UUFDRkYsTUFBTTtRQUNOQyxXQUFXO1FBQ1hDLFNBQVM7SUFDWDtJQUVBLElBQUk7UUFDRkYsTUFBTTtRQUNORSxTQUFTO0lBQ1g7SUFFQSxJQUFJO1FBQ0ZGLE1BQU07UUFDTkUsU0FBUztJQUNYO0lBRUEsSUFBSTtRQUNGRixNQUFNO1FBQ05FLFNBQVM7SUFDWDtJQUVBLElBQUk7UUFDRkYsTUFBTTtRQUNORSxTQUFTO0lBQ1g7SUFFQSxJQUFJO1FBQ0ZGLE1BQU07UUFDTkMsV0FBVztRQUVYQyxTQUFTLGlFQUNMLHlFQUNBO0lBQ047SUFFQSxJQUFJO1FBQ0ZGLE1BQU07UUFDTkMsV0FBVztRQUNYQyxTQUFTO0lBQ1g7SUFFQSxJQUFJO1FBQ0ZGLE1BQU07UUFDTkUsU0FBUztJQUNYO0lBRUEsSUFBSTtRQUNGRixNQUFNO1FBQ05DLFdBQVc7UUFFWEMsU0FBUywrREFDTDtJQUNOO0lBRUEsSUFBSTtRQUNGRixNQUFNO1FBQ05DLFdBQVc7UUFFWEMsU0FBUyxrR0FDTCwwR0FDQSxvRUFDQTtJQUNOO0lBRUEsSUFBSTtRQUNGRixNQUFNO1FBQ05DLFdBQVc7UUFFWEMsU0FBUywyREFDTDtJQUNOO0lBRUEsSUFBSTtRQUNGRixNQUFNO1FBQ05DLFdBQVc7UUFFWEMsU0FBUyx5REFDTDtJQUNOO0lBRUEsSUFBSTtRQUNGRixNQUFNO1FBQ05DLFdBQVc7UUFFWEMsU0FBUyx5REFDTDtJQUNOO0lBRUEsSUFBSTtRQUNGRixNQUFNO1FBQ05DLFdBQVc7UUFFWEMsU0FBUyx1RUFDTCw2RUFDQTtJQUNOO0lBRUEsSUFBSTtRQUNGRixNQUFNO1FBQ05DLFdBQVc7UUFFWEMsU0FBUyw4RUFDTCx5RUFDQTtJQUNOO0lBRUEsSUFBSTtRQUNGRixNQUFNO1FBQ05DLFdBQVc7UUFDWEMsU0FBUztJQUNYO0lBRUEsSUFBSTtRQUNGRixNQUFNO1FBQ05DLFdBQVc7UUFFWEMsU0FBUyw2REFDTCx1RUFDQTtJQUNOO0lBRUEsSUFBSTtRQUNGRixNQUFNO1FBQ05DLFdBQVc7UUFFWEMsU0FBUyxnRUFDTDtJQUNOO0lBRUEsSUFBSTtRQUNGRixNQUFNO1FBQ05DLFdBQVc7UUFFWEMsU0FBUyw4RUFDTCwyQkFDQSxxQ0FDQTtJQUNOO0lBRUEsSUFBSTtRQUNGRixNQUFNO1FBQ05DLFdBQVc7UUFFWEMsU0FBUywrREFDTCxxQkFDQTtJQUNOO0lBRUEsSUFBSTtRQUNGRixNQUFNO1FBQ05DLFdBQVc7UUFDWEMsU0FBUyxxQ0FBcUM7SUFDaEQ7SUFFQSxJQUFJO1FBQ0ZGLE1BQU07UUFDTkMsV0FBVztRQUNYQyxTQUFTO0lBQ1g7SUFFQSxJQUFJO1FBQ0ZGLE1BQU07UUFDTkMsV0FBVztRQUNYQyxTQUFTO0lBQ1g7SUFFQSxJQUFJO1FBQ0ZGLE1BQU07UUFDTkMsV0FBVztRQUNYQyxTQUFTO0lBQ1g7SUFFQSxJQUFJO1FBQ0ZGLE1BQU07UUFDTkMsV0FBVztRQUNYQyxTQUFTO0lBQ1g7SUFFQSxJQUFJO1FBQ0ZGLE1BQU07UUFDTkMsV0FBVztRQUNYQyxTQUFTO0lBQ1g7SUFFQSxJQUFJO1FBQ0ZGLE1BQU07UUFDTkMsV0FBVztRQUNYQyxTQUFTO0lBQ1g7SUFFQSxJQUFJO1FBQ0ZGLE1BQU07UUFFTkUsU0FBUyw2QkFDTDtJQUNOO0lBRUEsSUFBSTtRQUNGRixNQUFNO1FBQ05DLFdBQVc7UUFDWEMsU0FBUztJQUNYO0lBRUEsSUFBSTtRQUNGRixNQUFNO1FBQ05DLFdBQVc7UUFDWEMsU0FBUztJQUNYO0lBRUEsSUFBSTtRQUNGRixNQUFNO1FBQ05DLFdBQVc7UUFDWEMsU0FBUztJQUNYO0lBRUEsSUFBSTtRQUNGRixNQUFNO1FBQ05FLFNBQVM7SUFDWDtJQUVBLElBQUk7UUFDRkYsTUFBTTtRQUNOQyxXQUFXO1FBQ1hDLFNBQVM7SUFDWDtJQUVBLElBQUk7UUFDRkYsTUFBTTtRQUNOQyxXQUFXO1FBQ1hDLFNBQVM7SUFDWDtJQUVBLElBQUk7UUFDRkYsTUFBTTtRQUNOQyxXQUFXO1FBQ1hDLFNBQVM7SUFDWDtJQUVBLElBQUk7UUFDRkYsTUFBTTtRQUNOQyxXQUFXO1FBQ1hDLFNBQVM7SUFDWDtJQUVBLElBQUk7UUFDRkYsTUFBTTtRQUNOQyxXQUFXO1FBQ1hDLFNBQVM7SUFDWDtJQUVBLElBQUk7UUFDRkYsTUFBTTtRQUNORSxTQUFTO0lBQ1g7SUFFQSxJQUFJO1FBQ0ZGLE1BQU07UUFFTkUsU0FBUywwQ0FDTCxvRUFDQTtJQUNOO0FBQ0YsRUFBRTtBQUVLLE1BQU1DLFdBQVc7SUFDdEIsSUFBSTtRQUNGSCxNQUFNO1FBQ05FLFNBQVM7SUFDWDtJQUVBLElBQUk7UUFDRkYsTUFBTTtRQUNORSxTQUFTO0lBQ1g7QUFDRixFQUFFO0FBRUssTUFBTUUsU0FBUyxDQUFDLEVBQUU7QUFFbEIsTUFBTUMsVUFBVTtJQUNyQixHQUFHO1FBQ0RMLE1BQU07UUFFTkUsU0FBUywwRkFDTCxvSUFDQTtJQUNOO0lBRUEsR0FBRztRQUNERixNQUFNO1FBRU5FLFNBQVMsMElBQ0w7SUFDTjtJQUVBLEdBQUc7UUFDREYsTUFBTTtRQUNORSxTQUFTO0lBQ1g7SUFFQSxHQUFHO1FBQ0RGLE1BQU07UUFDTkUsU0FBUztJQUNYO0lBRUEsSUFBSTtRQUNGRixNQUFNO1FBQ05FLFNBQVM7SUFDWDtJQUVBLElBQUk7UUFDRkYsTUFBTTtRQUNORSxTQUFTO0lBQ1g7SUFFQSxJQUFJO1FBQ0ZGLE1BQU07UUFDTkUsU0FBUztJQUNYO0lBRUEsSUFBSTtRQUNGRixNQUFNO1FBQ05FLFNBQVM7SUFDWDtJQUVBLElBQUk7UUFDRkYsTUFBTTtRQUNORSxTQUFTO0lBQ1g7SUFFQSxJQUFJO1FBQ0ZGLE1BQU07UUFDTkUsU0FBUztJQUNYO0lBRUEsSUFBSTtRQUNGRixNQUFNO1FBQ05FLFNBQVM7SUFDWDtJQUVBLElBQUk7UUFDRkYsTUFBTTtRQUNORSxTQUFTO0lBQ1g7SUFFQSxJQUFJO1FBQ0ZGLE1BQU07UUFDTkUsU0FBUztJQUNYO0lBRUEsSUFBSTtRQUNGRixNQUFNO1FBQ05FLFNBQVM7SUFDWDtJQUVBLElBQUk7UUFDRkYsTUFBTTtRQUNORSxTQUFTO0lBQ1g7SUFFQSxJQUFJO1FBQ0ZGLE1BQU07UUFDTkUsU0FBUztJQUNYO0lBRUEsSUFBSTtRQUNGRixNQUFNO1FBQ05FLFNBQVM7SUFDWDtJQUVBLElBQUk7UUFDRkYsTUFBTTtRQUVORSxTQUFTLDJFQUNMO0lBQ047QUFDRixFQUFFO0FBRUssTUFBTUksV0FBVztJQUN0QixJQUFJO1FBQ0ZOLE1BQU07UUFDTkUsU0FBUztJQUNYO0lBRUEsSUFBSTtRQUNGRixNQUFNO1FBQ05FLFNBQVM7SUFDWDtJQUVBLElBQUk7UUFDRkYsTUFBTTtRQUNORSxTQUFTO0lBQ1g7SUFFQSxJQUFJO1FBQ0ZGLE1BQU07UUFDTkUsU0FBUztJQUNYO0lBRUEsSUFBSTtRQUNGRixNQUFNO1FBQ05FLFNBQVM7SUFDWDtBQUNGLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdXJuaS1hcHAvLi9ub2RlX21vZHVsZXMvQGFwb2xsby9jbGllbnQvaW52YXJpYW50RXJyb3JDb2Rlcy5qcz82Y2Q4Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBlcnJvckNvZGVzID0gLy8gVGhpcyBmaWxlIGlzIHVzZWQgYnkgdGhlIGVycm9yIG1lc3NhZ2UgZGlzcGxheSB3ZWJzaXRlIGFuZCB0aGVcbi8vIEBhcG9sbG8vY2xpZW50L2luY2x1ZGVFcnJvcnMgZW50cnkgcG9pbnQuXG4vLyBUaGlzIGZpbGUgaXMgbm90IG1lYW50IHRvIGJlIGltcG9ydGVkIG1hbnVhbGx5Llxue1xuICAxOiB7XG4gICAgZmlsZTogXCJAYXBvbGxvL2NsaWVudC9jYWNoZS9pbm1lbW9yeS9lbnRpdHlTdG9yZS5qc1wiLFxuICAgIGNvbmRpdGlvbjogXCJ0eXBlb2YgZGF0YUlkID09PSBcXFwic3RyaW5nXFxcIlwiLFxuICAgIG1lc3NhZ2U6IFwic3RvcmUubWVyZ2UgZXhwZWN0cyBhIHN0cmluZyBJRFwiXG4gIH0sXG5cbiAgNDoge1xuICAgIGZpbGU6IFwiQGFwb2xsby9jbGllbnQvY2FjaGUvaW5tZW1vcnkva2V5LWV4dHJhY3Rvci5qc1wiLFxuICAgIGNvbmRpdGlvbjogXCJleHRyYWN0ZWQgIT09IHZvaWQgMFwiLFxuICAgIG1lc3NhZ2U6IFwiTWlzc2luZyBmaWVsZCAnJXMnIHdoaWxlIGV4dHJhY3Rpbmcga2V5RmllbGRzIGZyb20gJXNcIlxuICB9LFxuXG4gIDU6IHtcbiAgICBmaWxlOiBcIkBhcG9sbG8vY2xpZW50L2NhY2hlL2lubWVtb3J5L3BvbGljaWVzLmpzXCIsXG4gICAgY29uZGl0aW9uOiBcIiFvbGQgfHwgb2xkID09PSB3aGljaFwiLFxuICAgIG1lc3NhZ2U6IFwiQ2Fubm90IGNoYW5nZSByb290ICVzIF9fdHlwZW5hbWUgbW9yZSB0aGFuIG9uY2VcIlxuICB9LFxuXG4gIDg6IHtcbiAgICBmaWxlOiBcIkBhcG9sbG8vY2xpZW50L2NhY2hlL2lubWVtb3J5L3BvbGljaWVzLmpzXCIsXG4gICAgbWVzc2FnZTogXCJDYW5ub3QgYXV0b21hdGljYWxseSBtZXJnZSBhcnJheXNcIlxuICB9LFxuXG4gIDk6IHtcbiAgICBmaWxlOiBcIkBhcG9sbG8vY2xpZW50L2NhY2hlL2lubWVtb3J5L3JlYWRGcm9tU3RvcmUuanNcIixcbiAgICBtZXNzYWdlOiBcIk5vIGZyYWdtZW50IG5hbWVkICVzXCJcbiAgfSxcblxuICAxMDoge1xuICAgIGZpbGU6IFwiQGFwb2xsby9jbGllbnQvY2FjaGUvaW5tZW1vcnkvcmVhZEZyb21TdG9yZS5qc1wiLFxuICAgIGNvbmRpdGlvbjogXCIhaXNSZWZlcmVuY2UodmFsdWUpXCIsXG4gICAgbWVzc2FnZTogXCJNaXNzaW5nIHNlbGVjdGlvbiBzZXQgZm9yIG9iamVjdCBvZiB0eXBlICVzIHJldHVybmVkIGZvciBxdWVyeSBmaWVsZCAlc1wiXG4gIH0sXG5cbiAgMTE6IHtcbiAgICBmaWxlOiBcIkBhcG9sbG8vY2xpZW50L2NhY2hlL2lubWVtb3J5L3dyaXRlVG9TdG9yZS5qc1wiLFxuICAgIG1lc3NhZ2U6IFwiQ291bGQgbm90IGlkZW50aWZ5IG9iamVjdCAlc1wiXG4gIH0sXG5cbiAgMTM6IHtcbiAgICBmaWxlOiBcIkBhcG9sbG8vY2xpZW50L2NhY2hlL2lubWVtb3J5L3dyaXRlVG9TdG9yZS5qc1wiLFxuICAgIG1lc3NhZ2U6IFwiTm8gZnJhZ21lbnQgbmFtZWQgJXNcIlxuICB9LFxuXG4gIDE1OiB7XG4gICAgZmlsZTogXCJAYXBvbGxvL2NsaWVudC9jb3JlL0Fwb2xsb0NsaWVudC5qc1wiLFxuXG4gICAgbWVzc2FnZTogXCJUbyBpbml0aWFsaXplIEFwb2xsbyBDbGllbnQsIHlvdSBtdXN0IHNwZWNpZnkgYSAnY2FjaGUnIHByb3BlcnR5IFwiICtcbiAgICAgICAgXCJpbiB0aGUgb3B0aW9ucyBvYmplY3QuIFxcblwiICtcbiAgICAgICAgXCJGb3IgbW9yZSBpbmZvcm1hdGlvbiwgcGxlYXNlIHZpc2l0OiBodHRwczovL2dvLmFwb2xsby5kZXYvYy9kb2NzXCJcbiAgfSxcblxuICAxNjoge1xuICAgIGZpbGU6IFwiQGFwb2xsby9jbGllbnQvY29yZS9BcG9sbG9DbGllbnQuanNcIixcbiAgICBjb25kaXRpb246IFwib3B0aW9ucy5mZXRjaFBvbGljeSAhPT0gXFxcImNhY2hlLWFuZC1uZXR3b3JrXFxcIlwiLFxuXG4gICAgbWVzc2FnZTogXCJUaGUgY2FjaGUtYW5kLW5ldHdvcmsgZmV0Y2hQb2xpY3kgZG9lcyBub3Qgd29yayB3aXRoIGNsaWVudC5xdWVyeSwgYmVjYXVzZSBcIiArXG4gICAgICAgIFwiY2xpZW50LnF1ZXJ5IGNhbiBvbmx5IHJldHVybiBhIHNpbmdsZSByZXN1bHQuIFBsZWFzZSB1c2UgY2xpZW50LndhdGNoUXVlcnkgXCIgK1xuICAgICAgICBcInRvIHJlY2VpdmUgbXVsdGlwbGUgcmVzdWx0cyBmcm9tIHRoZSBjYWNoZSBhbmQgdGhlIG5ldHdvcmssIG9yIGNvbnNpZGVyIFwiICtcbiAgICAgICAgXCJ1c2luZyBhIGRpZmZlcmVudCBmZXRjaFBvbGljeSwgc3VjaCBhcyBjYWNoZS1maXJzdCBvciBuZXR3b3JrLW9ubHkuXCJcbiAgfSxcblxuICAxODoge1xuICAgIGZpbGU6IFwiQGFwb2xsby9jbGllbnQvY29yZS9Mb2NhbFN0YXRlLmpzXCIsXG4gICAgY29uZGl0aW9uOiBcImZyYWdtZW50XCIsXG4gICAgbWVzc2FnZTogXCJObyBmcmFnbWVudCBuYW1lZCAlc1wiXG4gIH0sXG5cbiAgMTk6IHtcbiAgICBmaWxlOiBcIkBhcG9sbG8vY2xpZW50L2NvcmUvTG9jYWxTdGF0ZS5qc1wiLFxuICAgIGNvbmRpdGlvbjogXCJmcmFnbWVudFwiLFxuICAgIG1lc3NhZ2U6IFwiTm8gZnJhZ21lbnQgbmFtZWQgJXNcIlxuICB9LFxuXG4gIDIyOiB7XG4gICAgZmlsZTogXCJAYXBvbGxvL2NsaWVudC9jb3JlL09ic2VydmFibGVRdWVyeS5qc1wiLFxuICAgIGNvbmRpdGlvbjogXCJwb2xsSW50ZXJ2YWxcIixcbiAgICBtZXNzYWdlOiBcIkF0dGVtcHRlZCB0byBzdGFydCBhIHBvbGxpbmcgcXVlcnkgd2l0aG91dCBhIHBvbGxpbmcgaW50ZXJ2YWwuXCJcbiAgfSxcblxuICAyNToge1xuICAgIGZpbGU6IFwiQGFwb2xsby9jbGllbnQvY29yZS9RdWVyeU1hbmFnZXIuanNcIixcbiAgICBtZXNzYWdlOiBcIlF1ZXJ5TWFuYWdlciBzdG9wcGVkIHdoaWxlIHF1ZXJ5IHdhcyBpbiBmbGlnaHRcIlxuICB9LFxuXG4gIDI2OiB7XG4gICAgZmlsZTogXCJAYXBvbGxvL2NsaWVudC9jb3JlL1F1ZXJ5TWFuYWdlci5qc1wiLFxuICAgIGNvbmRpdGlvbjogXCJtdXRhdGlvblwiLFxuICAgIG1lc3NhZ2U6IFwibXV0YXRpb24gb3B0aW9uIGlzIHJlcXVpcmVkLiBZb3UgbXVzdCBzcGVjaWZ5IHlvdXIgR3JhcGhRTCBkb2N1bWVudCBpbiB0aGUgbXV0YXRpb24gb3B0aW9uLlwiXG4gIH0sXG5cbiAgMjc6IHtcbiAgICBmaWxlOiBcIkBhcG9sbG8vY2xpZW50L2NvcmUvUXVlcnlNYW5hZ2VyLmpzXCIsXG4gICAgY29uZGl0aW9uOiBcImZldGNoUG9saWN5ID09PSBcXFwibmV0d29yay1vbmx5XFxcIiB8fCBmZXRjaFBvbGljeSA9PT0gXFxcIm5vLWNhY2hlXFxcIlwiLFxuICAgIG1lc3NhZ2U6IFwiTXV0YXRpb25zIHN1cHBvcnQgb25seSAnbmV0d29yay1vbmx5JyBvciAnbm8tY2FjaGUnIGZldGNoUG9saWN5IHN0cmluZ3MuIFRoZSBkZWZhdWx0IGBuZXR3b3JrLW9ubHlgIGJlaGF2aW9yIGF1dG9tYXRpY2FsbHkgd3JpdGVzIG11dGF0aW9uIHJlc3VsdHMgdG8gdGhlIGNhY2hlLiBQYXNzaW5nIGBuby1jYWNoZWAgc2tpcHMgdGhlIGNhY2hlIHdyaXRlLlwiXG4gIH0sXG5cbiAgMjg6IHtcbiAgICBmaWxlOiBcIkBhcG9sbG8vY2xpZW50L2NvcmUvUXVlcnlNYW5hZ2VyLmpzXCIsXG4gICAgY29uZGl0aW9uOiBcIm9wdGlvbnMucXVlcnlcIixcblxuICAgIG1lc3NhZ2U6IFwicXVlcnkgb3B0aW9uIGlzIHJlcXVpcmVkLiBZb3UgbXVzdCBzcGVjaWZ5IHlvdXIgR3JhcGhRTCBkb2N1bWVudCBcIiArXG4gICAgICAgIFwiaW4gdGhlIHF1ZXJ5IG9wdGlvbi5cIlxuICB9LFxuXG4gIDI5OiB7XG4gICAgZmlsZTogXCJAYXBvbGxvL2NsaWVudC9jb3JlL1F1ZXJ5TWFuYWdlci5qc1wiLFxuICAgIGNvbmRpdGlvbjogXCJvcHRpb25zLnF1ZXJ5LmtpbmQgPT09IFxcXCJEb2N1bWVudFxcXCJcIixcbiAgICBtZXNzYWdlOiAnWW91IG11c3Qgd3JhcCB0aGUgcXVlcnkgc3RyaW5nIGluIGEgXCJncWxcIiB0YWcuJ1xuICB9LFxuXG4gIDMwOiB7XG4gICAgZmlsZTogXCJAYXBvbGxvL2NsaWVudC9jb3JlL1F1ZXJ5TWFuYWdlci5qc1wiLFxuICAgIGNvbmRpdGlvbjogXCIhb3B0aW9ucy5yZXR1cm5QYXJ0aWFsRGF0YVwiLFxuICAgIG1lc3NhZ2U6IFwicmV0dXJuUGFydGlhbERhdGEgb3B0aW9uIG9ubHkgc3VwcG9ydGVkIG9uIHdhdGNoUXVlcnkuXCJcbiAgfSxcblxuICAzMToge1xuICAgIGZpbGU6IFwiQGFwb2xsby9jbGllbnQvY29yZS9RdWVyeU1hbmFnZXIuanNcIixcbiAgICBjb25kaXRpb246IFwiIW9wdGlvbnMucG9sbEludGVydmFsXCIsXG4gICAgbWVzc2FnZTogXCJwb2xsSW50ZXJ2YWwgb3B0aW9uIG9ubHkgc3VwcG9ydGVkIG9uIHdhdGNoUXVlcnkuXCJcbiAgfSxcblxuICAzMjoge1xuICAgIGZpbGU6IFwiQGFwb2xsby9jbGllbnQvY29yZS9RdWVyeU1hbmFnZXIuanNcIixcbiAgICBtZXNzYWdlOiBcIlN0b3JlIHJlc2V0IHdoaWxlIHF1ZXJ5IHdhcyBpbiBmbGlnaHQgKG5vdCBjb21wbGV0ZWQgaW4gbGluayBjaGFpbilcIlxuICB9LFxuXG4gIDM2OiB7XG4gICAgZmlsZTogXCJAYXBvbGxvL2NsaWVudC9saW5rL2NvcmUvQXBvbGxvTGluay5qc1wiLFxuICAgIG1lc3NhZ2U6IFwicmVxdWVzdCBpcyBub3QgaW1wbGVtZW50ZWRcIlxuICB9LFxuXG4gIDM3OiB7XG4gICAgZmlsZTogXCJAYXBvbGxvL2NsaWVudC9saW5rL2h0dHAvY2hlY2tGZXRjaGVyLmpzXCIsXG4gICAgbWVzc2FnZTogXCJcXG5cXFwiZmV0Y2hcXFwiIGhhcyBub3QgYmVlbiBmb3VuZCBnbG9iYWxseSBhbmQgbm8gZmV0Y2hlciBoYXMgYmVlbiBjb25maWd1cmVkLiBUbyBmaXggdGhpcywgaW5zdGFsbCBhIGZldGNoIHBhY2thZ2UgKGxpa2UgaHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvY3Jvc3MtZmV0Y2gpLCBpbnN0YW50aWF0ZSB0aGUgZmV0Y2hlciwgYW5kIHBhc3MgaXQgaW50byB5b3VyIEh0dHBMaW5rIGNvbnN0cnVjdG9yLiBGb3IgZXhhbXBsZTpcXG5cXG5pbXBvcnQgZmV0Y2ggZnJvbSAnY3Jvc3MtZmV0Y2gnO1xcbmltcG9ydCB7IEFwb2xsb0NsaWVudCwgSHR0cExpbmsgfSBmcm9tICdAYXBvbGxvL2NsaWVudCc7XFxuY29uc3QgY2xpZW50ID0gbmV3IEFwb2xsb0NsaWVudCh7XFxuICBsaW5rOiBuZXcgSHR0cExpbmsoeyB1cmk6ICcvZ3JhcGhxbCcsIGZldGNoIH0pXFxufSk7XFxuICAgIFwiXG4gIH0sXG5cbiAgMzk6IHtcbiAgICBmaWxlOiBcIkBhcG9sbG8vY2xpZW50L2xpbmsvaHR0cC9zZXJpYWxpemVGZXRjaFBhcmFtZXRlci5qc1wiLFxuICAgIG1lc3NhZ2U6IFwiTmV0d29yayByZXF1ZXN0IGZhaWxlZC4gJXMgaXMgbm90IHNlcmlhbGl6YWJsZTogJXNcIlxuICB9LFxuXG4gIDQwOiB7XG4gICAgZmlsZTogXCJAYXBvbGxvL2NsaWVudC9saW5rL3BlcnNpc3RlZC1xdWVyaWVzL2luZGV4LmpzXCIsXG4gICAgY29uZGl0aW9uOiBcIm9wdGlvbnMgJiZcXG4gICAgKHR5cGVvZiBvcHRpb25zLnNoYTI1NiA9PT0gXFxcImZ1bmN0aW9uXFxcIiB8fFxcbiAgICAgICAgdHlwZW9mIG9wdGlvbnMuZ2VuZXJhdGVIYXNoID09PSBcXFwiZnVuY3Rpb25cXFwiKVwiLFxuXG4gICAgbWVzc2FnZTogJ01pc3NpbmcvaW52YWxpZCBcInNoYTI1NlwiIG9yIFwiZ2VuZXJhdGVIYXNoXCIgZnVuY3Rpb24uIFBsZWFzZSAnICtcbiAgICAgICAgJ2NvbmZpZ3VyZSBvbmUgdXNpbmcgdGhlIFwiY3JlYXRlUGVyc2lzdGVkUXVlcnlMaW5rKG9wdGlvbnMpXCIgb3B0aW9ucyAnICtcbiAgICAgICAgXCJwYXJhbWV0ZXIuXCJcbiAgfSxcblxuICA0MToge1xuICAgIGZpbGU6IFwiQGFwb2xsby9jbGllbnQvbGluay9wZXJzaXN0ZWQtcXVlcmllcy9pbmRleC5qc1wiLFxuICAgIGNvbmRpdGlvbjogXCJmb3J3YXJkXCIsXG4gICAgbWVzc2FnZTogXCJQZXJzaXN0ZWRRdWVyeUxpbmsgY2Fubm90IGJlIHRoZSBsYXN0IGxpbmsgaW4gdGhlIGNoYWluLlwiXG4gIH0sXG5cbiAgNDM6IHtcbiAgICBmaWxlOiBcIkBhcG9sbG8vY2xpZW50L2xpbmsvdXRpbHMvdmFsaWRhdGVPcGVyYXRpb24uanNcIixcbiAgICBtZXNzYWdlOiBcImlsbGVnYWwgYXJndW1lbnQ6ICVzXCJcbiAgfSxcblxuICA0NDoge1xuICAgIGZpbGU6IFwiQGFwb2xsby9jbGllbnQvcmVhY3QvY29udGV4dC9BcG9sbG9Db25zdW1lci5qc1wiLFxuICAgIGNvbmRpdGlvbjogXCJjb250ZXh0ICYmIGNvbnRleHQuY2xpZW50XCIsXG5cbiAgICBtZXNzYWdlOiAnQ291bGQgbm90IGZpbmQgXCJjbGllbnRcIiBpbiB0aGUgY29udGV4dCBvZiBBcG9sbG9Db25zdW1lci4gJyArXG4gICAgICAgIFwiV3JhcCB0aGUgcm9vdCBjb21wb25lbnQgaW4gYW4gPEFwb2xsb1Byb3ZpZGVyPi5cIlxuICB9LFxuXG4gIDQ1OiB7XG4gICAgZmlsZTogXCJAYXBvbGxvL2NsaWVudC9yZWFjdC9jb250ZXh0L0Fwb2xsb0NvbnRleHQuanNcIixcbiAgICBjb25kaXRpb246IFwiXFxcImNyZWF0ZUNvbnRleHRcXFwiIGluIFJlYWN0XCIsXG5cbiAgICBtZXNzYWdlOiBcIkludm9raW5nIGBnZXRBcG9sbG9Db250ZXh0YCBpbiBhbiBlbnZpcm9ubWVudCB3aGVyZSBgUmVhY3QuY3JlYXRlQ29udGV4dGAgaXMgbm90IGF2YWlsYWJsZS5cXG5cIiArXG4gICAgICAgIFwiVGhlIEFwb2xsbyBDbGllbnQgZnVuY3Rpb25hbGl0eSB5b3UgYXJlIHRyeWluZyB0byB1c2UgaXMgb25seSBhdmFpbGFibGUgaW4gUmVhY3QgQ2xpZW50IENvbXBvbmVudHMuXFxuXCIgK1xuICAgICAgICAnUGxlYXNlIG1ha2Ugc3VyZSB0byBhZGQgXCJ1c2UgY2xpZW50XCIgYXQgdGhlIHRvcCBvZiB5b3VyIGZpbGUuXFxuJyArXG4gICAgICAgIFwiRm9yIG1vcmUgaW5mb3JtYXRpb24sIHNlZSBodHRwczovL25leHRqcy5vcmcvZG9jcy9nZXR0aW5nLXN0YXJ0ZWQvcmVhY3QtZXNzZW50aWFscyNjbGllbnQtY29tcG9uZW50c1wiXG4gIH0sXG5cbiAgNDY6IHtcbiAgICBmaWxlOiBcIkBhcG9sbG8vY2xpZW50L3JlYWN0L2NvbnRleHQvQXBvbGxvUHJvdmlkZXIuanNcIixcbiAgICBjb25kaXRpb246IFwiY29udGV4dC5jbGllbnRcIixcblxuICAgIG1lc3NhZ2U6IFwiQXBvbGxvUHJvdmlkZXIgd2FzIG5vdCBwYXNzZWQgYSBjbGllbnQgaW5zdGFuY2UuIE1ha2UgXCIgK1xuICAgICAgICAnc3VyZSB5b3UgcGFzcyBpbiB5b3VyIGNsaWVudCB2aWEgdGhlIFwiY2xpZW50XCIgcHJvcC4nXG4gIH0sXG5cbiAgNDc6IHtcbiAgICBmaWxlOiBcIkBhcG9sbG8vY2xpZW50L3JlYWN0L2hvYy9ob2MtdXRpbHMuanNcIixcbiAgICBjb25kaXRpb246IFwidGhpcy53aXRoUmVmXCIsXG5cbiAgICBtZXNzYWdlOiBcIlRvIGFjY2VzcyB0aGUgd3JhcHBlZCBpbnN0YW5jZSwgeW91IG5lZWQgdG8gc3BlY2lmeSBcIiArXG4gICAgICAgIFwieyB3aXRoUmVmOiB0cnVlIH0gaW4gdGhlIG9wdGlvbnNcIlxuICB9LFxuXG4gIDQ4OiB7XG4gICAgZmlsZTogXCJAYXBvbGxvL2NsaWVudC9yZWFjdC9ob2Mvd2l0aEFwb2xsby5qc1wiLFxuICAgIGNvbmRpdGlvbjogXCJvcGVyYXRpb25PcHRpb25zLndpdGhSZWZcIixcblxuICAgIG1lc3NhZ2U6IFwiVG8gYWNjZXNzIHRoZSB3cmFwcGVkIGluc3RhbmNlLCB5b3UgbmVlZCB0byBzcGVjaWZ5IFwiICtcbiAgICAgICAgXCJ7IHdpdGhSZWY6IHRydWUgfSBpbiB0aGUgb3B0aW9uc1wiXG4gIH0sXG5cbiAgNDk6IHtcbiAgICBmaWxlOiBcIkBhcG9sbG8vY2xpZW50L3JlYWN0L2hvb2tzL3VzZUFwb2xsb0NsaWVudC5qc1wiLFxuICAgIGNvbmRpdGlvbjogXCIhIWNsaWVudFwiLFxuXG4gICAgbWVzc2FnZTogJ0NvdWxkIG5vdCBmaW5kIFwiY2xpZW50XCIgaW4gdGhlIGNvbnRleHQgb3IgcGFzc2VkIGluIGFzIGFuIG9wdGlvbi4gJyArXG4gICAgICAgIFwiV3JhcCB0aGUgcm9vdCBjb21wb25lbnQgaW4gYW4gPEFwb2xsb1Byb3ZpZGVyPiwgb3IgcGFzcyBhbiBBcG9sbG9DbGllbnQgXCIgK1xuICAgICAgICBcImluc3RhbmNlIGluIHZpYSBvcHRpb25zLlwiXG4gIH0sXG5cbiAgNTE6IHtcbiAgICBmaWxlOiBcIkBhcG9sbG8vY2xpZW50L3JlYWN0L2hvb2tzL3VzZVJlYWRRdWVyeS5qc1wiLFxuICAgIGNvbmRpdGlvbjogXCJpbnRlcm5hbFF1ZXJ5UmVmLnByb21pc2VDYWNoZVwiLFxuXG4gICAgbWVzc2FnZTogXCJJdCBhcHBlYXJzIHRoYXQgYHVzZVJlYWRRdWVyeWAgd2FzIHVzZWQgb3V0c2lkZSBvZiBgdXNlQmFja2dyb3VuZFF1ZXJ5YC4gXCIgK1xuICAgICAgICBcImB1c2VSZWFkUXVlcnlgIGlzIG9ubHkgc3VwcG9ydGVkIGZvciB1c2Ugd2l0aCBgdXNlQmFja2dyb3VuZFF1ZXJ5YC4gXCIgK1xuICAgICAgICBcIlBsZWFzZSBlbnN1cmUgeW91IGFyZSBwYXNzaW5nIHRoZSBgcXVlcnlSZWZgIHJldHVybmVkIGZyb20gYHVzZUJhY2tncm91bmRRdWVyeWAuXCJcbiAgfSxcblxuICA1Njoge1xuICAgIGZpbGU6IFwiQGFwb2xsby9jbGllbnQvcmVhY3QvaG9va3MvdXNlU3VzcGVuc2VRdWVyeS5qc1wiLFxuICAgIGNvbmRpdGlvbjogXCJzdXBwb3J0ZWRGZXRjaFBvbGljaWVzLmluY2x1ZGVzKGZldGNoUG9saWN5KVwiLFxuICAgIG1lc3NhZ2U6IFwiVGhlIGZldGNoIHBvbGljeSBgJXNgIGlzIG5vdCBzdXBwb3J0ZWQgd2l0aCBzdXNwZW5zZS5cIlxuICB9LFxuXG4gIDU5OiB7XG4gICAgZmlsZTogXCJAYXBvbGxvL2NsaWVudC9yZWFjdC9wYXJzZXIvaW5kZXguanNcIixcbiAgICBjb25kaXRpb246IFwiISFkb2N1bWVudCAmJiAhIWRvY3VtZW50LmtpbmRcIixcblxuICAgIG1lc3NhZ2U6IFwiQXJndW1lbnQgb2YgJXMgcGFzc2VkIHRvIHBhcnNlciB3YXMgbm90IGEgdmFsaWQgR3JhcGhRTCBcIiArXG4gICAgICAgIFwiRG9jdW1lbnROb2RlLiBZb3UgbWF5IG5lZWQgdG8gdXNlICdncmFwaHFsLXRhZycgb3IgYW5vdGhlciBtZXRob2QgXCIgK1xuICAgICAgICBcInRvIGNvbnZlcnQgeW91ciBvcGVyYXRpb24gaW50byBhIGRvY3VtZW50XCJcbiAgfSxcblxuICA2MDoge1xuICAgIGZpbGU6IFwiQGFwb2xsby9jbGllbnQvcmVhY3QvcGFyc2VyL2luZGV4LmpzXCIsXG4gICAgY29uZGl0aW9uOiBcIiFmcmFnbWVudHMubGVuZ3RoIHx8XFxuICAgIHF1ZXJpZXMubGVuZ3RoIHx8XFxuICAgIG11dGF0aW9ucy5sZW5ndGggfHxcXG4gICAgc3Vic2NyaXB0aW9ucy5sZW5ndGhcIixcblxuICAgIG1lc3NhZ2U6IFwiUGFzc2luZyBvbmx5IGEgZnJhZ21lbnQgdG8gJ2dyYXBocWwnIGlzIG5vdCB5ZXQgc3VwcG9ydGVkLiBcIiArXG4gICAgICAgIFwiWW91IG11c3QgaW5jbHVkZSBhIHF1ZXJ5LCBzdWJzY3JpcHRpb24gb3IgbXV0YXRpb24gYXMgd2VsbFwiXG4gIH0sXG5cbiAgNjE6IHtcbiAgICBmaWxlOiBcIkBhcG9sbG8vY2xpZW50L3JlYWN0L3BhcnNlci9pbmRleC5qc1wiLFxuICAgIGNvbmRpdGlvbjogXCJxdWVyaWVzLmxlbmd0aCArIG11dGF0aW9ucy5sZW5ndGggKyBzdWJzY3JpcHRpb25zLmxlbmd0aCA8PSAxXCIsXG5cbiAgICBtZXNzYWdlOiBcInJlYWN0LWFwb2xsbyBvbmx5IHN1cHBvcnRzIGEgcXVlcnksIHN1YnNjcmlwdGlvbiwgb3IgYSBtdXRhdGlvbiBwZXIgSE9DLiBcIiArXG4gICAgICAgIFwiJXMgaGFkICVzIHF1ZXJpZXMsICVzIFwiICtcbiAgICAgICAgXCJzdWJzY3JpcHRpb25zIGFuZCAlcyBtdXRhdGlvbnMuIFwiICtcbiAgICAgICAgXCJZb3UgY2FuIHVzZSAnY29tcG9zZScgdG8gam9pbiBtdWx0aXBsZSBvcGVyYXRpb24gdHlwZXMgdG8gYSBjb21wb25lbnRcIlxuICB9LFxuXG4gIDYyOiB7XG4gICAgZmlsZTogXCJAYXBvbGxvL2NsaWVudC9yZWFjdC9wYXJzZXIvaW5kZXguanNcIixcbiAgICBjb25kaXRpb246IFwiZGVmaW5pdGlvbnMubGVuZ3RoID09PSAxXCIsXG5cbiAgICBtZXNzYWdlOiBcInJlYWN0LWFwb2xsbyBvbmx5IHN1cHBvcnRzIG9uZSBkZWZpbml0aW9uIHBlciBIT0MuICVzIGhhZCBcIiArXG4gICAgICAgIFwiJXMgZGVmaW5pdGlvbnMuIFwiICtcbiAgICAgICAgXCJZb3UgY2FuIHVzZSAnY29tcG9zZScgdG8gam9pbiBtdWx0aXBsZSBvcGVyYXRpb24gdHlwZXMgdG8gYSBjb21wb25lbnRcIlxuICB9LFxuXG4gIDYzOiB7XG4gICAgZmlsZTogXCJAYXBvbGxvL2NsaWVudC9yZWFjdC9wYXJzZXIvaW5kZXguanNcIixcbiAgICBjb25kaXRpb246IFwib3BlcmF0aW9uLnR5cGUgPT09IHR5cGVcIixcbiAgICBtZXNzYWdlOiBcIlJ1bm5pbmcgYSAlcyByZXF1aXJlcyBhIGdyYXBocWwgXCIgKyBcIiVzLCBidXQgYSAlcyB3YXMgdXNlZCBpbnN0ZWFkLlwiXG4gIH0sXG5cbiAgNjQ6IHtcbiAgICBmaWxlOiBcIkBhcG9sbG8vY2xpZW50L3Rlc3RpbmcvY29yZS9tb2NraW5nL21vY2tMaW5rLmpzXCIsXG4gICAgY29uZGl0aW9uOiBcInF1ZXJ5V2l0aG91dENvbm5lY3Rpb25cIixcbiAgICBtZXNzYWdlOiBcInF1ZXJ5IGlzIHJlcXVpcmVkXCJcbiAgfSxcblxuICA2NToge1xuICAgIGZpbGU6IFwiQGFwb2xsby9jbGllbnQvdXRpbGl0aWVzL2dyYXBocWwvRG9jdW1lbnRUcmFuc2Zvcm0uanNcIixcbiAgICBjb25kaXRpb246IFwiQXJyYXkuaXNBcnJheShjYWNoZUtleXMpXCIsXG4gICAgbWVzc2FnZTogXCJgZ2V0Q2FjaGVLZXlgIG11c3QgcmV0dXJuIGFuIGFycmF5IG9yIHVuZGVmaW5lZFwiXG4gIH0sXG5cbiAgNjY6IHtcbiAgICBmaWxlOiBcIkBhcG9sbG8vY2xpZW50L3V0aWxpdGllcy9ncmFwaHFsL2RpcmVjdGl2ZXMuanNcIixcbiAgICBjb25kaXRpb246IFwiZXZhbGVkVmFsdWUgIT09IHZvaWQgMFwiLFxuICAgIG1lc3NhZ2U6IFwiSW52YWxpZCB2YXJpYWJsZSByZWZlcmVuY2VkIGluIEAlcyBkaXJlY3RpdmUuXCJcbiAgfSxcblxuICA2Nzoge1xuICAgIGZpbGU6IFwiQGFwb2xsby9jbGllbnQvdXRpbGl0aWVzL2dyYXBocWwvZGlyZWN0aXZlcy5qc1wiLFxuICAgIGNvbmRpdGlvbjogXCJkaXJlY3RpdmVBcmd1bWVudHMgJiYgZGlyZWN0aXZlQXJndW1lbnRzLmxlbmd0aCA9PT0gMVwiLFxuICAgIG1lc3NhZ2U6IFwiSW5jb3JyZWN0IG51bWJlciBvZiBhcmd1bWVudHMgZm9yIHRoZSBAJXMgZGlyZWN0aXZlLlwiXG4gIH0sXG5cbiAgNjg6IHtcbiAgICBmaWxlOiBcIkBhcG9sbG8vY2xpZW50L3V0aWxpdGllcy9ncmFwaHFsL2RpcmVjdGl2ZXMuanNcIixcbiAgICBjb25kaXRpb246IFwiaWZBcmd1bWVudC5uYW1lICYmIGlmQXJndW1lbnQubmFtZS52YWx1ZSA9PT0gXFxcImlmXFxcIlwiLFxuICAgIG1lc3NhZ2U6IFwiSW52YWxpZCBhcmd1bWVudCBmb3IgdGhlIEAlcyBkaXJlY3RpdmUuXCJcbiAgfSxcblxuICA2OToge1xuICAgIGZpbGU6IFwiQGFwb2xsby9jbGllbnQvdXRpbGl0aWVzL2dyYXBocWwvZGlyZWN0aXZlcy5qc1wiLFxuICAgIGNvbmRpdGlvbjogXCJpZlZhbHVlICYmXFxuICAgIChpZlZhbHVlLmtpbmQgPT09IFxcXCJWYXJpYWJsZVxcXCIgfHwgaWZWYWx1ZS5raW5kID09PSBcXFwiQm9vbGVhblZhbHVlXFxcIilcIixcbiAgICBtZXNzYWdlOiBcIkFyZ3VtZW50IGZvciB0aGUgQCVzIGRpcmVjdGl2ZSBtdXN0IGJlIGEgdmFyaWFibGUgb3IgYSBib29sZWFuIHZhbHVlLlwiXG4gIH0sXG5cbiAgNzA6IHtcbiAgICBmaWxlOiBcIkBhcG9sbG8vY2xpZW50L3V0aWxpdGllcy9ncmFwaHFsL2ZyYWdtZW50cy5qc1wiLFxuXG4gICAgbWVzc2FnZTogXCJGb3VuZCBhICVzIG9wZXJhdGlvbiVzLiBcIiArXG4gICAgICAgIFwiTm8gb3BlcmF0aW9ucyBhcmUgYWxsb3dlZCB3aGVuIHVzaW5nIGEgZnJhZ21lbnQgYXMgYSBxdWVyeS4gT25seSBmcmFnbWVudHMgYXJlIGFsbG93ZWQuXCJcbiAgfSxcblxuICA3MToge1xuICAgIGZpbGU6IFwiQGFwb2xsby9jbGllbnQvdXRpbGl0aWVzL2dyYXBocWwvZnJhZ21lbnRzLmpzXCIsXG4gICAgY29uZGl0aW9uOiBcImZyYWdtZW50cy5sZW5ndGggPT09IDFcIixcbiAgICBtZXNzYWdlOiBcIkZvdW5kICVzIGZyYWdtZW50cy4gYGZyYWdtZW50TmFtZWAgbXVzdCBiZSBwcm92aWRlZCB3aGVuIHRoZXJlIGlzIG5vdCBleGFjdGx5IDEgZnJhZ21lbnQuXCJcbiAgfSxcblxuICA3Mjoge1xuICAgIGZpbGU6IFwiQGFwb2xsby9jbGllbnQvdXRpbGl0aWVzL2dyYXBocWwvZnJhZ21lbnRzLmpzXCIsXG4gICAgY29uZGl0aW9uOiBcImZyYWdtZW50XCIsXG4gICAgbWVzc2FnZTogXCJObyBmcmFnbWVudCBuYW1lZCAlc1wiXG4gIH0sXG5cbiAgNzM6IHtcbiAgICBmaWxlOiBcIkBhcG9sbG8vY2xpZW50L3V0aWxpdGllcy9ncmFwaHFsL2dldEZyb21BU1QuanNcIixcbiAgICBjb25kaXRpb246IFwiZG9jICYmIGRvYy5raW5kID09PSBcXFwiRG9jdW1lbnRcXFwiXCIsXG4gICAgbWVzc2FnZTogXCJFeHBlY3RpbmcgYSBwYXJzZWQgR3JhcGhRTCBkb2N1bWVudC4gUGVyaGFwcyB5b3UgbmVlZCB0byB3cmFwIHRoZSBxdWVyeSBzdHJpbmcgaW4gYSBcXFwiZ3FsXFxcIiB0YWc/IGh0dHA6Ly9kb2NzLmFwb2xsb3N0YWNrLmNvbS9hcG9sbG8tY2xpZW50L2NvcmUuaHRtbCNncWxcIlxuICB9LFxuXG4gIDc0OiB7XG4gICAgZmlsZTogXCJAYXBvbGxvL2NsaWVudC91dGlsaXRpZXMvZ3JhcGhxbC9nZXRGcm9tQVNULmpzXCIsXG4gICAgbWVzc2FnZTogXCJTY2hlbWEgdHlwZSBkZWZpbml0aW9ucyBub3QgYWxsb3dlZCBpbiBxdWVyaWVzLiBGb3VuZDogXFxcIiVzXFxcIlwiXG4gIH0sXG5cbiAgNzU6IHtcbiAgICBmaWxlOiBcIkBhcG9sbG8vY2xpZW50L3V0aWxpdGllcy9ncmFwaHFsL2dldEZyb21BU1QuanNcIixcbiAgICBjb25kaXRpb246IFwib3BlcmF0aW9ucy5sZW5ndGggPD0gMVwiLFxuICAgIG1lc3NhZ2U6IFwiQW1iaWd1b3VzIEdyYXBoUUwgZG9jdW1lbnQ6IGNvbnRhaW5zICVzIG9wZXJhdGlvbnNcIlxuICB9LFxuXG4gIDc2OiB7XG4gICAgZmlsZTogXCJAYXBvbGxvL2NsaWVudC91dGlsaXRpZXMvZ3JhcGhxbC9nZXRGcm9tQVNULmpzXCIsXG4gICAgY29uZGl0aW9uOiBcInF1ZXJ5RGVmICYmIHF1ZXJ5RGVmLm9wZXJhdGlvbiA9PT0gXFxcInF1ZXJ5XFxcIlwiLFxuICAgIG1lc3NhZ2U6IFwiTXVzdCBjb250YWluIGEgcXVlcnkgZGVmaW5pdGlvbi5cIlxuICB9LFxuXG4gIDc3OiB7XG4gICAgZmlsZTogXCJAYXBvbGxvL2NsaWVudC91dGlsaXRpZXMvZ3JhcGhxbC9nZXRGcm9tQVNULmpzXCIsXG4gICAgY29uZGl0aW9uOiBcImRvYy5raW5kID09PSBcXFwiRG9jdW1lbnRcXFwiXCIsXG4gICAgbWVzc2FnZTogXCJFeHBlY3RpbmcgYSBwYXJzZWQgR3JhcGhRTCBkb2N1bWVudC4gUGVyaGFwcyB5b3UgbmVlZCB0byB3cmFwIHRoZSBxdWVyeSBzdHJpbmcgaW4gYSBcXFwiZ3FsXFxcIiB0YWc/IGh0dHA6Ly9kb2NzLmFwb2xsb3N0YWNrLmNvbS9hcG9sbG8tY2xpZW50L2NvcmUuaHRtbCNncWxcIlxuICB9LFxuXG4gIDc4OiB7XG4gICAgZmlsZTogXCJAYXBvbGxvL2NsaWVudC91dGlsaXRpZXMvZ3JhcGhxbC9nZXRGcm9tQVNULmpzXCIsXG4gICAgY29uZGl0aW9uOiBcImRvYy5kZWZpbml0aW9ucy5sZW5ndGggPD0gMVwiLFxuICAgIG1lc3NhZ2U6IFwiRnJhZ21lbnQgbXVzdCBoYXZlIGV4YWN0bHkgb25lIGRlZmluaXRpb24uXCJcbiAgfSxcblxuICA3OToge1xuICAgIGZpbGU6IFwiQGFwb2xsby9jbGllbnQvdXRpbGl0aWVzL2dyYXBocWwvZ2V0RnJvbUFTVC5qc1wiLFxuICAgIGNvbmRpdGlvbjogXCJmcmFnbWVudERlZi5raW5kID09PSBcXFwiRnJhZ21lbnREZWZpbml0aW9uXFxcIlwiLFxuICAgIG1lc3NhZ2U6IFwiTXVzdCBiZSBhIGZyYWdtZW50IGRlZmluaXRpb24uXCJcbiAgfSxcblxuICA4MDoge1xuICAgIGZpbGU6IFwiQGFwb2xsby9jbGllbnQvdXRpbGl0aWVzL2dyYXBocWwvZ2V0RnJvbUFTVC5qc1wiLFxuICAgIG1lc3NhZ2U6IFwiRXhwZWN0ZWQgYSBwYXJzZWQgR3JhcGhRTCBxdWVyeSB3aXRoIGEgcXVlcnksIG11dGF0aW9uLCBzdWJzY3JpcHRpb24sIG9yIGEgZnJhZ21lbnQuXCJcbiAgfSxcblxuICA4MToge1xuICAgIGZpbGU6IFwiQGFwb2xsby9jbGllbnQvdXRpbGl0aWVzL2dyYXBocWwvc3RvcmVVdGlscy5qc1wiLFxuXG4gICAgbWVzc2FnZTogXCJUaGUgaW5saW5lIGFyZ3VtZW50IFxcXCIlc1xcXCIgb2Yga2luZCBcXFwiJXNcXFwiXCIgK1xuICAgICAgICBcImlzIG5vdCBzdXBwb3J0ZWQuIFVzZSB2YXJpYWJsZXMgaW5zdGVhZCBvZiBpbmxpbmUgYXJndW1lbnRzIHRvIFwiICtcbiAgICAgICAgXCJvdmVyY29tZSB0aGlzIGxpbWl0YXRpb24uXCJcbiAgfVxufTtcblxuZXhwb3J0IGNvbnN0IGRldkRlYnVnID0ge1xuICAxNzoge1xuICAgIGZpbGU6IFwiQGFwb2xsby9jbGllbnQvY29yZS9BcG9sbG9DbGllbnQuanNcIixcbiAgICBtZXNzYWdlOiBcIkluIGNsaWVudC5yZWZldGNoUXVlcmllcywgUHJvbWlzZS5hbGwgcHJvbWlzZSByZWplY3RlZCB3aXRoIGVycm9yICVvXCJcbiAgfSxcblxuICAyNDoge1xuICAgIGZpbGU6IFwiQGFwb2xsby9jbGllbnQvY29yZS9PYnNlcnZhYmxlUXVlcnkuanNcIixcbiAgICBtZXNzYWdlOiBcIk1pc3NpbmcgY2FjaGUgcmVzdWx0IGZpZWxkczogJW9cIlxuICB9XG59O1xuXG5leHBvcnQgY29uc3QgZGV2TG9nID0ge307XG5cbmV4cG9ydCBjb25zdCBkZXZXYXJuID0ge1xuICAyOiB7XG4gICAgZmlsZTogXCJAYXBvbGxvL2NsaWVudC9jYWNoZS9pbm1lbW9yeS9lbnRpdHlTdG9yZS5qc1wiLFxuXG4gICAgbWVzc2FnZTogXCJjYWNoZS5tb2RpZnk6IFlvdSBhcmUgdHJ5aW5nIHRvIHdyaXRlIGEgUmVmZXJlbmNlIHRoYXQgaXMgbm90IHBhcnQgb2YgdGhlIHN0b3JlOiAlb1xcblwiICtcbiAgICAgICAgXCJQbGVhc2UgbWFrZSBzdXJlIHRvIHNldCB0aGUgYG1lcmdlSW50b1N0b3JlYCBwYXJhbWV0ZXIgdG8gYHRydWVgIHdoZW4gY3JlYXRpbmcgYSBSZWZlcmVuY2UgdGhhdCBpcyBub3QgcGFydCBvZiB0aGUgc3RvcmUgeWV0OlxcblwiICtcbiAgICAgICAgXCJgdG9SZWZlcmVuY2Uob2JqZWN0LCB0cnVlKWBcIlxuICB9LFxuXG4gIDM6IHtcbiAgICBmaWxlOiBcIkBhcG9sbG8vY2xpZW50L2NhY2hlL2lubWVtb3J5L2VudGl0eVN0b3JlLmpzXCIsXG5cbiAgICBtZXNzYWdlOiBcImNhY2hlLm1vZGlmeTogV3JpdGluZyBhbiBhcnJheSB3aXRoIGEgbWl4IG9mIGJvdGggUmVmZXJlbmNlcyBhbmQgT2JqZWN0cyB3aWxsIG5vdCByZXN1bHQgaW4gdGhlIE9iamVjdHMgYmVpbmcgbm9ybWFsaXplZCBjb3JyZWN0bHkuXFxuXCIgK1xuICAgICAgICBcIlBsZWFzZSBjb252ZXJ0IHRoZSBvYmplY3QgaW5zdGFuY2UgJW8gdG8gYSBSZWZlcmVuY2UgYmVmb3JlIHdyaXRpbmcgaXQgdG8gdGhlIGNhY2hlIGJ5IGNhbGxpbmcgYHRvUmVmZXJlbmNlKG9iamVjdCwgdHJ1ZSlgLlwiXG4gIH0sXG5cbiAgNjoge1xuICAgIGZpbGU6IFwiQGFwb2xsby9jbGllbnQvY2FjaGUvaW5tZW1vcnkvcG9saWNpZXMuanNcIixcbiAgICBtZXNzYWdlOiBcIkluZmVycmluZyBzdWJ0eXBlICVzIG9mIHN1cGVydHlwZSAlc1wiXG4gIH0sXG5cbiAgNzoge1xuICAgIGZpbGU6IFwiQGFwb2xsby9jbGllbnQvY2FjaGUvaW5tZW1vcnkvcG9saWNpZXMuanNcIixcbiAgICBtZXNzYWdlOiBcIlVuZGVmaW5lZCAnZnJvbScgcGFzc2VkIHRvIHJlYWRGaWVsZCB3aXRoIGFyZ3VtZW50cyAlc1wiXG4gIH0sXG5cbiAgMTQ6IHtcbiAgICBmaWxlOiBcIkBhcG9sbG8vY2xpZW50L2NhY2hlL2lubWVtb3J5L3dyaXRlVG9TdG9yZS5qc1wiLFxuICAgIG1lc3NhZ2U6IFwiQ2FjaGUgZGF0YSBtYXkgYmUgbG9zdCB3aGVuIHJlcGxhY2luZyB0aGUgJXMgZmllbGQgb2YgYSAlcyBvYmplY3QuXFxuXFxuVGhpcyBjb3VsZCBjYXVzZSBhZGRpdGlvbmFsICh1c3VhbGx5IGF2b2lkYWJsZSkgbmV0d29yayByZXF1ZXN0cyB0byBmZXRjaCBkYXRhIHRoYXQgd2VyZSBvdGhlcndpc2UgY2FjaGVkLlxcblxcblRvIGFkZHJlc3MgdGhpcyBwcm9ibGVtICh3aGljaCBpcyBub3QgYSBidWcgaW4gQXBvbGxvIENsaWVudCksICVzZGVmaW5lIGEgY3VzdG9tIG1lcmdlIGZ1bmN0aW9uIGZvciB0aGUgJXMgZmllbGQsIHNvIEluTWVtb3J5Q2FjaGUgY2FuIHNhZmVseSBtZXJnZSB0aGVzZSBvYmplY3RzOlxcblxcbiAgZXhpc3Rpbmc6ICVzXFxuICBpbmNvbWluZzogJXNcXG5cXG5Gb3IgbW9yZSBpbmZvcm1hdGlvbiBhYm91dCB0aGVzZSBvcHRpb25zLCBwbGVhc2UgcmVmZXIgdG8gdGhlIGRvY3VtZW50YXRpb246XFxuXFxuICAqIEVuc3VyaW5nIGVudGl0eSBvYmplY3RzIGhhdmUgSURzOiBodHRwczovL2dvLmFwb2xsby5kZXYvYy9nZW5lcmF0aW5nLXVuaXF1ZS1pZGVudGlmaWVyc1xcbiAgKiBEZWZpbmluZyBjdXN0b20gbWVyZ2UgZnVuY3Rpb25zOiBodHRwczovL2dvLmFwb2xsby5kZXYvYy9tZXJnaW5nLW5vbi1ub3JtYWxpemVkLW9iamVjdHNcXG5cIlxuICB9LFxuXG4gIDIwOiB7XG4gICAgZmlsZTogXCJAYXBvbGxvL2NsaWVudC9jb3JlL09ic2VydmFibGVRdWVyeS5qc1wiLFxuICAgIG1lc3NhZ2U6IFwiQ2FsbGVkIHJlZmV0Y2goJW8pIGZvciBxdWVyeSAlbywgd2hpY2ggZG9lcyBub3QgZGVjbGFyZSBhICR2YXJpYWJsZXMgdmFyaWFibGUuXFxuRGlkIHlvdSBtZWFuIHRvIGNhbGwgcmVmZXRjaCh2YXJpYWJsZXMpIGluc3RlYWQgb2YgcmVmZXRjaCh7IHZhcmlhYmxlcyB9KT9cIlxuICB9LFxuXG4gIDMzOiB7XG4gICAgZmlsZTogXCJAYXBvbGxvL2NsaWVudC9jb3JlL1F1ZXJ5TWFuYWdlci5qc1wiLFxuICAgIG1lc3NhZ2U6IFwiVW5rbm93biBxdWVyeSBuYW1lZCBcXFwiJXNcXFwiIHJlcXVlc3RlZCBpbiByZWZldGNoUXVlcmllcyBvcHRpb25zLmluY2x1ZGUgYXJyYXlcIlxuICB9LFxuXG4gIDM0OiB7XG4gICAgZmlsZTogXCJAYXBvbGxvL2NsaWVudC9jb3JlL1F1ZXJ5TWFuYWdlci5qc1wiLFxuICAgIG1lc3NhZ2U6IFwiVW5rbm93biBxdWVyeSAlcyByZXF1ZXN0ZWQgaW4gcmVmZXRjaFF1ZXJpZXMgb3B0aW9ucy5pbmNsdWRlIGFycmF5XCJcbiAgfSxcblxuICAzNToge1xuICAgIGZpbGU6IFwiQGFwb2xsby9jbGllbnQvbGluay9jb3JlL0Fwb2xsb0xpbmsuanNcIixcbiAgICBtZXNzYWdlOiBcIllvdSBhcmUgY2FsbGluZyBjb25jYXQgb24gYSB0ZXJtaW5hdGluZyBsaW5rLCB3aGljaCB3aWxsIGhhdmUgbm8gZWZmZWN0ICVvXCJcbiAgfSxcblxuICAzODoge1xuICAgIGZpbGU6IFwiQGFwb2xsby9jbGllbnQvbGluay9odHRwL2NyZWF0ZUh0dHBMaW5rLmpzXCIsXG4gICAgbWVzc2FnZTogXCJNdWx0aXBhcnQtc3Vic2NyaXB0aW9ucyBkbyBub3Qgc3VwcG9ydCBAZGVmZXJcIlxuICB9LFxuXG4gIDQyOiB7XG4gICAgZmlsZTogXCJAYXBvbGxvL2NsaWVudC9saW5rL3V0aWxzL3RvUHJvbWlzZS5qc1wiLFxuICAgIG1lc3NhZ2U6IFwiUHJvbWlzZSBXcmFwcGVyIGRvZXMgbm90IHN1cHBvcnQgbXVsdGlwbGUgcmVzdWx0cyBmcm9tIE9ic2VydmFibGVcIlxuICB9LFxuXG4gIDUwOiB7XG4gICAgZmlsZTogXCJAYXBvbGxvL2NsaWVudC9yZWFjdC9ob29rcy91c2VRdWVyeS5qc1wiLFxuICAgIG1lc3NhZ2U6IFwiQ2FsbGluZyBkZWZhdWx0IG5vLW9wIGltcGxlbWVudGF0aW9uIG9mIEludGVybmFsU3RhdGUjZm9yY2VVcGRhdGVcIlxuICB9LFxuXG4gIDUyOiB7XG4gICAgZmlsZTogXCJAYXBvbGxvL2NsaWVudC9yZWFjdC9ob29rcy91c2VTdWJzY3JpcHRpb24uanNcIixcbiAgICBtZXNzYWdlOiBcIid1c2VTdWJzY3JpcHRpb24nIHN1cHBvcnRzIG9ubHkgdGhlICdvblN1YnNjcmlwdGlvbkRhdGEnIG9yICdvbkRhdGEnIG9wdGlvbiwgYnV0IG5vdCBib3RoLiBPbmx5IHRoZSAnb25EYXRhJyBvcHRpb24gd2lsbCBiZSB1c2VkLlwiXG4gIH0sXG5cbiAgNTM6IHtcbiAgICBmaWxlOiBcIkBhcG9sbG8vY2xpZW50L3JlYWN0L2hvb2tzL3VzZVN1YnNjcmlwdGlvbi5qc1wiLFxuICAgIG1lc3NhZ2U6IFwiJ29uU3Vic2NyaXB0aW9uRGF0YScgaXMgZGVwcmVjYXRlZCBhbmQgd2lsbCBiZSByZW1vdmVkIGluIGEgZnV0dXJlIG1ham9yIHZlcnNpb24uIFBsZWFzZSB1c2UgdGhlICdvbkRhdGEnIG9wdGlvbiBpbnN0ZWFkLlwiXG4gIH0sXG5cbiAgNTQ6IHtcbiAgICBmaWxlOiBcIkBhcG9sbG8vY2xpZW50L3JlYWN0L2hvb2tzL3VzZVN1YnNjcmlwdGlvbi5qc1wiLFxuICAgIG1lc3NhZ2U6IFwiJ3VzZVN1YnNjcmlwdGlvbicgc3VwcG9ydHMgb25seSB0aGUgJ29uU3Vic2NyaXB0aW9uQ29tcGxldGUnIG9yICdvbkNvbXBsZXRlJyBvcHRpb24sIGJ1dCBub3QgYm90aC4gT25seSB0aGUgJ29uQ29tcGxldGUnIG9wdGlvbiB3aWxsIGJlIHVzZWQuXCJcbiAgfSxcblxuICA1NToge1xuICAgIGZpbGU6IFwiQGFwb2xsby9jbGllbnQvcmVhY3QvaG9va3MvdXNlU3Vic2NyaXB0aW9uLmpzXCIsXG4gICAgbWVzc2FnZTogXCInb25TdWJzY3JpcHRpb25Db21wbGV0ZScgaXMgZGVwcmVjYXRlZCBhbmQgd2lsbCBiZSByZW1vdmVkIGluIGEgZnV0dXJlIG1ham9yIHZlcnNpb24uIFBsZWFzZSB1c2UgdGhlICdvbkNvbXBsZXRlJyBvcHRpb24gaW5zdGVhZC5cIlxuICB9LFxuXG4gIDU3OiB7XG4gICAgZmlsZTogXCJAYXBvbGxvL2NsaWVudC9yZWFjdC9ob29rcy91c2VTdXNwZW5zZVF1ZXJ5LmpzXCIsXG4gICAgbWVzc2FnZTogXCJVc2luZyBgcmV0dXJuUGFydGlhbERhdGFgIHdpdGggYSBgbm8tY2FjaGVgIGZldGNoIHBvbGljeSBoYXMgbm8gZWZmZWN0LiBUbyByZWFkIHBhcnRpYWwgZGF0YSBmcm9tIHRoZSBjYWNoZSwgY29uc2lkZXIgdXNpbmcgYW4gYWx0ZXJuYXRlIGZldGNoIHBvbGljeS5cIlxuICB9LFxuXG4gIDgzOiB7XG4gICAgZmlsZTogXCJAYXBvbGxvL2NsaWVudC91dGlsaXRpZXMvZ3JhcGhxbC90cmFuc2Zvcm0uanNcIixcblxuICAgIG1lc3NhZ2U6IFwiUmVtb3ZpbmcgYW4gQGNvbm5lY3Rpb24gZGlyZWN0aXZlIGV2ZW4gdGhvdWdoIGl0IGRvZXMgbm90IGhhdmUgYSBrZXkuIFwiICtcbiAgICAgICAgXCJZb3UgbWF5IHdhbnQgdG8gdXNlIHRoZSBrZXkgcGFyYW1ldGVyIHRvIHNwZWNpZnkgYSBzdG9yZSBrZXkuXCJcbiAgfVxufTtcblxuZXhwb3J0IGNvbnN0IGRldkVycm9yID0ge1xuICAxMjoge1xuICAgIGZpbGU6IFwiQGFwb2xsby9jbGllbnQvY2FjaGUvaW5tZW1vcnkvd3JpdGVUb1N0b3JlLmpzXCIsXG4gICAgbWVzc2FnZTogXCJNaXNzaW5nIGZpZWxkICclcycgd2hpbGUgd3JpdGluZyByZXN1bHQgJW9cIlxuICB9LFxuXG4gIDIxOiB7XG4gICAgZmlsZTogXCJAYXBvbGxvL2NsaWVudC9jb3JlL09ic2VydmFibGVRdWVyeS5qc1wiLFxuICAgIG1lc3NhZ2U6IFwiVW5oYW5kbGVkIEdyYXBoUUwgc3Vic2NyaXB0aW9uIGVycm9yXCJcbiAgfSxcblxuICAyMzoge1xuICAgIGZpbGU6IFwiQGFwb2xsby9jbGllbnQvY29yZS9PYnNlcnZhYmxlUXVlcnkuanNcIixcbiAgICBtZXNzYWdlOiBcIlVuaGFuZGxlZCBlcnJvclwiXG4gIH0sXG5cbiAgNTg6IHtcbiAgICBmaWxlOiBcIkBhcG9sbG8vY2xpZW50L3JlYWN0L2hvb2tzL3VzZVN5bmNFeHRlcm5hbFN0b3JlLmpzXCIsXG4gICAgbWVzc2FnZTogXCJUaGUgcmVzdWx0IG9mIGdldFNuYXBzaG90IHNob3VsZCBiZSBjYWNoZWQgdG8gYXZvaWQgYW4gaW5maW5pdGUgbG9vcFwiXG4gIH0sXG5cbiAgODI6IHtcbiAgICBmaWxlOiBcIkBhcG9sbG8vY2xpZW50L3V0aWxpdGllcy9ncmFwaHFsL3RyYW5zZm9ybS5qc1wiLFxuICAgIG1lc3NhZ2U6IFwiQ291bGQgbm90IGZpbmQgb3BlcmF0aW9uIG9yIGZyYWdtZW50XCJcbiAgfVxufTtcbiJdLCJuYW1lcyI6WyJlcnJvckNvZGVzIiwiZmlsZSIsImNvbmRpdGlvbiIsIm1lc3NhZ2UiLCJkZXZEZWJ1ZyIsImRldkxvZyIsImRldldhcm4iLCJkZXZFcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/invariantErrorCodes.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/link/core/ApolloLink.js":
/*!*************************************************************!*\
  !*** ./node_modules/@apollo/client/link/core/ApolloLink.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ApolloLink: () => (/* binding */ ApolloLink)\n/* harmony export */ });\n/* harmony import */ var _utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utilities/globals/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/globals/index.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utilities/index.js */ \"(ssr)/./node_modules/zen-observable-ts/module.js\");\n/* harmony import */ var _utils_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/index.js */ \"(ssr)/./node_modules/@apollo/client/link/utils/createOperation.js\");\n/* harmony import */ var _utils_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/index.js */ \"(ssr)/./node_modules/@apollo/client/link/utils/transformOperation.js\");\n/* harmony import */ var _utils_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/index.js */ \"(ssr)/./node_modules/@apollo/client/link/utils/validateOperation.js\");\n\n\n\nfunction passthrough(op, forward) {\n    return forward ? forward(op) : _utilities_index_js__WEBPACK_IMPORTED_MODULE_1__.Observable.of();\n}\nfunction toLink(handler) {\n    return typeof handler === \"function\" ? new ApolloLink(handler) : handler;\n}\nfunction isTerminating(link) {\n    return link.request.length <= 1;\n}\nvar ApolloLink = function() {\n    function ApolloLink(request) {\n        if (request) this.request = request;\n    }\n    ApolloLink.empty = function() {\n        return new ApolloLink(function() {\n            return _utilities_index_js__WEBPACK_IMPORTED_MODULE_1__.Observable.of();\n        });\n    };\n    ApolloLink.from = function(links) {\n        if (links.length === 0) return ApolloLink.empty();\n        return links.map(toLink).reduce(function(x, y) {\n            return x.concat(y);\n        });\n    };\n    ApolloLink.split = function(test, left, right) {\n        var leftLink = toLink(left);\n        var rightLink = toLink(right || new ApolloLink(passthrough));\n        if (isTerminating(leftLink) && isTerminating(rightLink)) {\n            return new ApolloLink(function(operation) {\n                return test(operation) ? leftLink.request(operation) || _utilities_index_js__WEBPACK_IMPORTED_MODULE_1__.Observable.of() : rightLink.request(operation) || _utilities_index_js__WEBPACK_IMPORTED_MODULE_1__.Observable.of();\n            });\n        } else {\n            return new ApolloLink(function(operation, forward) {\n                return test(operation) ? leftLink.request(operation, forward) || _utilities_index_js__WEBPACK_IMPORTED_MODULE_1__.Observable.of() : rightLink.request(operation, forward) || _utilities_index_js__WEBPACK_IMPORTED_MODULE_1__.Observable.of();\n            });\n        }\n    };\n    ApolloLink.execute = function(link, operation) {\n        return link.request((0,_utils_index_js__WEBPACK_IMPORTED_MODULE_2__.createOperation)(operation.context, (0,_utils_index_js__WEBPACK_IMPORTED_MODULE_3__.transformOperation)((0,_utils_index_js__WEBPACK_IMPORTED_MODULE_4__.validateOperation)(operation)))) || _utilities_index_js__WEBPACK_IMPORTED_MODULE_1__.Observable.of();\n    };\n    ApolloLink.concat = function(first, second) {\n        var firstLink = toLink(first);\n        if (isTerminating(firstLink)) {\n            globalThis.__DEV__ !== false && _utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.invariant.warn(35, firstLink);\n            return firstLink;\n        }\n        var nextLink = toLink(second);\n        if (isTerminating(nextLink)) {\n            return new ApolloLink(function(operation) {\n                return firstLink.request(operation, function(op) {\n                    return nextLink.request(op) || _utilities_index_js__WEBPACK_IMPORTED_MODULE_1__.Observable.of();\n                }) || _utilities_index_js__WEBPACK_IMPORTED_MODULE_1__.Observable.of();\n            });\n        } else {\n            return new ApolloLink(function(operation, forward) {\n                return firstLink.request(operation, function(op) {\n                    return nextLink.request(op, forward) || _utilities_index_js__WEBPACK_IMPORTED_MODULE_1__.Observable.of();\n                }) || _utilities_index_js__WEBPACK_IMPORTED_MODULE_1__.Observable.of();\n            });\n        }\n    };\n    ApolloLink.prototype.split = function(test, left, right) {\n        return this.concat(ApolloLink.split(test, left, right || new ApolloLink(passthrough)));\n    };\n    ApolloLink.prototype.concat = function(next) {\n        return ApolloLink.concat(this, next);\n    };\n    ApolloLink.prototype.request = function(operation, forward) {\n        throw (0,_utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.newInvariantError)(36);\n    };\n    ApolloLink.prototype.onError = function(error, observer) {\n        if (observer && observer.error) {\n            observer.error(error);\n            return false;\n        }\n        throw error;\n    };\n    ApolloLink.prototype.setOnError = function(fn) {\n        this.onError = fn;\n        return this;\n    };\n    return ApolloLink;\n}();\n //# sourceMappingURL=ApolloLink.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/link/core/ApolloLink.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/link/core/execute.js":
/*!**********************************************************!*\
  !*** ./node_modules/@apollo/client/link/core/execute.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   execute: () => (/* binding */ execute)\n/* harmony export */ });\n/* harmony import */ var _ApolloLink_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ApolloLink.js */ \"(ssr)/./node_modules/@apollo/client/link/core/ApolloLink.js\");\n\nvar execute = _ApolloLink_js__WEBPACK_IMPORTED_MODULE_0__.ApolloLink.execute; //# sourceMappingURL=execute.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFwb2xsby9jbGllbnQvbGluay9jb3JlL2V4ZWN1dGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBNkM7QUFDdEMsSUFBSUMsVUFBVUQsc0RBQVVBLENBQUNDLE9BQU8sQ0FBQyxDQUN4QyxtQ0FBbUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdXJuaS1hcHAvLi9ub2RlX21vZHVsZXMvQGFwb2xsby9jbGllbnQvbGluay9jb3JlL2V4ZWN1dGUuanM/MjM1MCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcG9sbG9MaW5rIH0gZnJvbSBcIi4vQXBvbGxvTGluay5qc1wiO1xuZXhwb3J0IHZhciBleGVjdXRlID0gQXBvbGxvTGluay5leGVjdXRlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZXhlY3V0ZS5qcy5tYXAiXSwibmFtZXMiOlsiQXBvbGxvTGluayIsImV4ZWN1dGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/link/core/execute.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/link/http/HttpLink.js":
/*!***********************************************************!*\
  !*** ./node_modules/@apollo/client/link/http/HttpLink.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HttpLink: () => (/* binding */ HttpLink)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.mjs\");\n/* harmony import */ var _core_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/index.js */ \"(ssr)/./node_modules/@apollo/client/link/core/ApolloLink.js\");\n/* harmony import */ var _createHttpLink_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./createHttpLink.js */ \"(ssr)/./node_modules/@apollo/client/link/http/createHttpLink.js\");\n\n\n\nvar HttpLink = function(_super) {\n    (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__extends)(HttpLink, _super);\n    function HttpLink(options) {\n        if (options === void 0) {\n            options = {};\n        }\n        var _this = _super.call(this, (0,_createHttpLink_js__WEBPACK_IMPORTED_MODULE_1__.createHttpLink)(options).request) || this;\n        _this.options = options;\n        return _this;\n    }\n    return HttpLink;\n}(_core_index_js__WEBPACK_IMPORTED_MODULE_2__.ApolloLink);\n //# sourceMappingURL=HttpLink.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFwb2xsby9jbGllbnQvbGluay9odHRwL0h0dHBMaW5rLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBa0M7QUFDWTtBQUNPO0FBQ3JELElBQUlHLFdBQVksU0FBVUMsTUFBTTtJQUM1QkosZ0RBQVNBLENBQUNHLFVBQVVDO0lBQ3BCLFNBQVNELFNBQVNFLE9BQU87UUFDckIsSUFBSUEsWUFBWSxLQUFLLEdBQUc7WUFBRUEsVUFBVSxDQUFDO1FBQUc7UUFDeEMsSUFBSUMsUUFBUUYsT0FBT0csSUFBSSxDQUFDLElBQUksRUFBRUwsa0VBQWNBLENBQUNHLFNBQVNHLE9BQU8sS0FBSyxJQUFJO1FBQ3RFRixNQUFNRCxPQUFPLEdBQUdBO1FBQ2hCLE9BQU9DO0lBQ1g7SUFDQSxPQUFPSDtBQUNYLEVBQUVGLHNEQUFVQTtBQUNRLENBQ3BCLG9DQUFvQyIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1cm5pLWFwcC8uL25vZGVfbW9kdWxlcy9AYXBvbGxvL2NsaWVudC9saW5rL2h0dHAvSHR0cExpbmsuanM/ZWM0NyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBfX2V4dGVuZHMgfSBmcm9tIFwidHNsaWJcIjtcbmltcG9ydCB7IEFwb2xsb0xpbmsgfSBmcm9tIFwiLi4vY29yZS9pbmRleC5qc1wiO1xuaW1wb3J0IHsgY3JlYXRlSHR0cExpbmsgfSBmcm9tIFwiLi9jcmVhdGVIdHRwTGluay5qc1wiO1xudmFyIEh0dHBMaW5rID0gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoSHR0cExpbmssIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gSHR0cExpbmsob3B0aW9ucykge1xuICAgICAgICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7IG9wdGlvbnMgPSB7fTsgfVxuICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzLCBjcmVhdGVIdHRwTGluayhvcHRpb25zKS5yZXF1ZXN0KSB8fCB0aGlzO1xuICAgICAgICBfdGhpcy5vcHRpb25zID0gb3B0aW9ucztcbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cbiAgICByZXR1cm4gSHR0cExpbms7XG59KEFwb2xsb0xpbmspKTtcbmV4cG9ydCB7IEh0dHBMaW5rIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1IdHRwTGluay5qcy5tYXAiXSwibmFtZXMiOlsiX19leHRlbmRzIiwiQXBvbGxvTGluayIsImNyZWF0ZUh0dHBMaW5rIiwiSHR0cExpbmsiLCJfc3VwZXIiLCJvcHRpb25zIiwiX3RoaXMiLCJjYWxsIiwicmVxdWVzdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/link/http/HttpLink.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/link/http/checkFetcher.js":
/*!***************************************************************!*\
  !*** ./node_modules/@apollo/client/link/http/checkFetcher.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkFetcher: () => (/* binding */ checkFetcher)\n/* harmony export */ });\n/* harmony import */ var _utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utilities/globals/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/globals/index.js\");\n\nvar checkFetcher = function(fetcher) {\n    if (!fetcher && typeof fetch === \"undefined\") {\n        throw (0,_utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.newInvariantError)(37);\n    }\n}; //# sourceMappingURL=checkFetcher.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFwb2xsby9jbGllbnQvbGluay9odHRwL2NoZWNrRmV0Y2hlci5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFxRTtBQUM5RCxJQUFJQyxlQUFlLFNBQVVDLE9BQU87SUFDdkMsSUFBSSxDQUFDQSxXQUFXLE9BQU9DLFVBQVUsYUFBYTtRQUMxQyxNQUFNSCw4RUFBaUJBLENBQUM7SUFDNUI7QUFDSixFQUFFLENBQ0Ysd0NBQXdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVybmktYXBwLy4vbm9kZV9tb2R1bGVzL0BhcG9sbG8vY2xpZW50L2xpbmsvaHR0cC9jaGVja0ZldGNoZXIuanM/NDBjMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBuZXdJbnZhcmlhbnRFcnJvciB9IGZyb20gXCIuLi8uLi91dGlsaXRpZXMvZ2xvYmFscy9pbmRleC5qc1wiO1xuZXhwb3J0IHZhciBjaGVja0ZldGNoZXIgPSBmdW5jdGlvbiAoZmV0Y2hlcikge1xuICAgIGlmICghZmV0Y2hlciAmJiB0eXBlb2YgZmV0Y2ggPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgdGhyb3cgbmV3SW52YXJpYW50RXJyb3IoMzcpO1xuICAgIH1cbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jaGVja0ZldGNoZXIuanMubWFwIl0sIm5hbWVzIjpbIm5ld0ludmFyaWFudEVycm9yIiwiY2hlY2tGZXRjaGVyIiwiZmV0Y2hlciIsImZldGNoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/link/http/checkFetcher.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/link/http/createHttpLink.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@apollo/client/link/http/createHttpLink.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createHttpLink: () => (/* binding */ createHttpLink)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.mjs\");\n/* harmony import */ var _utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/globals/index.js\");\n/* harmony import */ var _core_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/index.js */ \"(ssr)/./node_modules/@apollo/client/link/core/ApolloLink.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/graphql/directives.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../utilities/index.js */ \"(ssr)/./node_modules/zen-observable-ts/module.js\");\n/* harmony import */ var _serializeFetchParameter_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./serializeFetchParameter.js */ \"(ssr)/./node_modules/@apollo/client/link/http/serializeFetchParameter.js\");\n/* harmony import */ var _selectURI_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./selectURI.js */ \"(ssr)/./node_modules/@apollo/client/link/http/selectURI.js\");\n/* harmony import */ var _parseAndCheckHttpResponse_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./parseAndCheckHttpResponse.js */ \"(ssr)/./node_modules/@apollo/client/link/http/parseAndCheckHttpResponse.js\");\n/* harmony import */ var _checkFetcher_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./checkFetcher.js */ \"(ssr)/./node_modules/@apollo/client/link/http/checkFetcher.js\");\n/* harmony import */ var _selectHttpOptionsAndBody_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./selectHttpOptionsAndBody.js */ \"(ssr)/./node_modules/@apollo/client/link/http/selectHttpOptionsAndBody.js\");\n/* harmony import */ var _rewriteURIForGET_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./rewriteURIForGET.js */ \"(ssr)/./node_modules/@apollo/client/link/http/rewriteURIForGET.js\");\n/* harmony import */ var _utils_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../utils/index.js */ \"(ssr)/./node_modules/@apollo/client/link/utils/fromError.js\");\n/* harmony import */ var _utils_index_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../utils/index.js */ \"(ssr)/./node_modules/@apollo/client/link/utils/filterOperationVariables.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/graphql/transform.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/graphql/getFromAST.js\");\n\n\n\n\n\n\n\n\n\n\n\n\nvar backupFetch = (0,_utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.maybe)(function() {\n    return fetch;\n});\nvar createHttpLink = function(linkOptions) {\n    if (linkOptions === void 0) {\n        linkOptions = {};\n    }\n    var _a = linkOptions.uri, uri = _a === void 0 ? \"/graphql\" : _a, preferredFetch = linkOptions.fetch, _b = linkOptions.print, print = _b === void 0 ? _selectHttpOptionsAndBody_js__WEBPACK_IMPORTED_MODULE_1__.defaultPrinter : _b, includeExtensions = linkOptions.includeExtensions, preserveHeaderCase = linkOptions.preserveHeaderCase, useGETForQueries = linkOptions.useGETForQueries, _c = linkOptions.includeUnusedVariables, includeUnusedVariables = _c === void 0 ? false : _c, requestOptions = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__rest)(linkOptions, [\n        \"uri\",\n        \"fetch\",\n        \"print\",\n        \"includeExtensions\",\n        \"preserveHeaderCase\",\n        \"useGETForQueries\",\n        \"includeUnusedVariables\"\n    ]);\n    if (globalThis.__DEV__ !== false) {\n        (0,_checkFetcher_js__WEBPACK_IMPORTED_MODULE_3__.checkFetcher)(preferredFetch || backupFetch);\n    }\n    var linkConfig = {\n        http: {\n            includeExtensions: includeExtensions,\n            preserveHeaderCase: preserveHeaderCase\n        },\n        options: requestOptions.fetchOptions,\n        credentials: requestOptions.credentials,\n        headers: requestOptions.headers\n    };\n    return new _core_index_js__WEBPACK_IMPORTED_MODULE_4__.ApolloLink(function(operation) {\n        var chosenURI = (0,_selectURI_js__WEBPACK_IMPORTED_MODULE_5__.selectURI)(operation, uri);\n        var context = operation.getContext();\n        var clientAwarenessHeaders = {};\n        if (context.clientAwareness) {\n            var _a = context.clientAwareness, name_1 = _a.name, version = _a.version;\n            if (name_1) {\n                clientAwarenessHeaders[\"apollographql-client-name\"] = name_1;\n            }\n            if (version) {\n                clientAwarenessHeaders[\"apollographql-client-version\"] = version;\n            }\n        }\n        var contextHeaders = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, clientAwarenessHeaders), context.headers);\n        var contextConfig = {\n            http: context.http,\n            options: context.fetchOptions,\n            credentials: context.credentials,\n            headers: contextHeaders\n        };\n        if ((0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_6__.hasDirectives)([\n            \"client\"\n        ], operation.query)) {\n            var transformedQuery = (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_7__.removeClientSetsFromDocument)(operation.query);\n            if (!transformedQuery) {\n                return (0,_utils_index_js__WEBPACK_IMPORTED_MODULE_8__.fromError)(new Error(\"HttpLink: Trying to send a client-only query to the server. To send to the server, ensure a non-client field is added to the query or set the `transformOptions.removeClientFields` option to `true`.\"));\n            }\n            operation.query = transformedQuery;\n        }\n        var _b = (0,_selectHttpOptionsAndBody_js__WEBPACK_IMPORTED_MODULE_1__.selectHttpOptionsAndBodyInternal)(operation, print, _selectHttpOptionsAndBody_js__WEBPACK_IMPORTED_MODULE_1__.fallbackHttpConfig, linkConfig, contextConfig), options = _b.options, body = _b.body;\n        if (body.variables && !includeUnusedVariables) {\n            body.variables = (0,_utils_index_js__WEBPACK_IMPORTED_MODULE_9__.filterOperationVariables)(body.variables, operation.query);\n        }\n        var controller;\n        if (!options.signal && typeof AbortController !== \"undefined\") {\n            controller = new AbortController();\n            options.signal = controller.signal;\n        }\n        var definitionIsMutation = function(d) {\n            return d.kind === \"OperationDefinition\" && d.operation === \"mutation\";\n        };\n        var definitionIsSubscription = function(d) {\n            return d.kind === \"OperationDefinition\" && d.operation === \"subscription\";\n        };\n        var isSubscription = definitionIsSubscription((0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_10__.getMainDefinition)(operation.query));\n        var hasDefer = (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_6__.hasDirectives)([\n            \"defer\"\n        ], operation.query);\n        if (useGETForQueries && !operation.query.definitions.some(definitionIsMutation)) {\n            options.method = \"GET\";\n        }\n        if (hasDefer || isSubscription) {\n            options.headers = options.headers || {};\n            var acceptHeader = \"multipart/mixed;\";\n            if (isSubscription && hasDefer) {\n                globalThis.__DEV__ !== false && _utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.invariant.warn(38);\n            }\n            if (isSubscription) {\n                acceptHeader += \"boundary=graphql;subscriptionSpec=1.0,application/json\";\n            } else if (hasDefer) {\n                acceptHeader += \"deferSpec=20220824,application/json\";\n            }\n            options.headers.accept = acceptHeader;\n        }\n        if (options.method === \"GET\") {\n            var _c = (0,_rewriteURIForGET_js__WEBPACK_IMPORTED_MODULE_11__.rewriteURIForGET)(chosenURI, body), newURI = _c.newURI, parseError = _c.parseError;\n            if (parseError) {\n                return (0,_utils_index_js__WEBPACK_IMPORTED_MODULE_8__.fromError)(parseError);\n            }\n            chosenURI = newURI;\n        } else {\n            try {\n                options.body = (0,_serializeFetchParameter_js__WEBPACK_IMPORTED_MODULE_12__.serializeFetchParameter)(body, \"Payload\");\n            } catch (parseError) {\n                return (0,_utils_index_js__WEBPACK_IMPORTED_MODULE_8__.fromError)(parseError);\n            }\n        }\n        return new _utilities_index_js__WEBPACK_IMPORTED_MODULE_13__.Observable(function(observer) {\n            var currentFetch = preferredFetch || (0,_utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.maybe)(function() {\n                return fetch;\n            }) || backupFetch;\n            var observerNext = observer.next.bind(observer);\n            currentFetch(chosenURI, options).then(function(response) {\n                var _a;\n                operation.setContext({\n                    response: response\n                });\n                var ctype = (_a = response.headers) === null || _a === void 0 ? void 0 : _a.get(\"content-type\");\n                if (ctype !== null && /^multipart\\/mixed/i.test(ctype)) {\n                    return (0,_parseAndCheckHttpResponse_js__WEBPACK_IMPORTED_MODULE_14__.readMultipartBody)(response, observerNext);\n                } else {\n                    return (0,_parseAndCheckHttpResponse_js__WEBPACK_IMPORTED_MODULE_14__.parseAndCheckHttpResponse)(operation)(response).then(observerNext);\n                }\n            }).then(function() {\n                controller = undefined;\n                observer.complete();\n            }).catch(function(err) {\n                controller = undefined;\n                (0,_parseAndCheckHttpResponse_js__WEBPACK_IMPORTED_MODULE_14__.handleError)(err, observer);\n            });\n            return function() {\n                if (controller) controller.abort();\n            };\n        });\n    });\n}; //# sourceMappingURL=createHttpLink.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/link/http/createHttpLink.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/link/http/iterators/async.js":
/*!******************************************************************!*\
  !*** ./node_modules/@apollo/client/link/http/iterators/async.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ asyncIterator)\n/* harmony export */ });\nfunction asyncIterator(source) {\n    var _a;\n    var iterator = source[Symbol.asyncIterator]();\n    return _a = {\n        next: function() {\n            return iterator.next();\n        }\n    }, _a[Symbol.asyncIterator] = function() {\n        return this;\n    }, _a;\n} //# sourceMappingURL=async.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFwb2xsby9jbGllbnQvbGluay9odHRwL2l0ZXJhdG9ycy9hc3luYy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQWUsU0FBU0EsY0FBY0MsTUFBTTtJQUN4QyxJQUFJQztJQUNKLElBQUlDLFdBQVdGLE1BQU0sQ0FBQ0csT0FBT0osYUFBYSxDQUFDO0lBQzNDLE9BQU9FLEtBQUs7UUFDSkcsTUFBTTtZQUNGLE9BQU9GLFNBQVNFLElBQUk7UUFDeEI7SUFDSixHQUNBSCxFQUFFLENBQUNFLE9BQU9KLGFBQWEsQ0FBQyxHQUFHO1FBQ3ZCLE9BQU8sSUFBSTtJQUNmLEdBQ0FFO0FBQ1IsRUFDQSxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdXJuaS1hcHAvLi9ub2RlX21vZHVsZXMvQGFwb2xsby9jbGllbnQvbGluay9odHRwL2l0ZXJhdG9ycy9hc3luYy5qcz84MzZjIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGFzeW5jSXRlcmF0b3Ioc291cmNlKSB7XG4gICAgdmFyIF9hO1xuICAgIHZhciBpdGVyYXRvciA9IHNvdXJjZVtTeW1ib2wuYXN5bmNJdGVyYXRvcl0oKTtcbiAgICByZXR1cm4gX2EgPSB7XG4gICAgICAgICAgICBuZXh0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGl0ZXJhdG9yLm5leHQoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgX2FbU3ltYm9sLmFzeW5jSXRlcmF0b3JdID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgIH0sXG4gICAgICAgIF9hO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXN5bmMuanMubWFwIl0sIm5hbWVzIjpbImFzeW5jSXRlcmF0b3IiLCJzb3VyY2UiLCJfYSIsIml0ZXJhdG9yIiwiU3ltYm9sIiwibmV4dCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/link/http/iterators/async.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/link/http/iterators/nodeStream.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@apollo/client/link/http/iterators/nodeStream.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ nodeStreamIterator)\n/* harmony export */ });\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/common/canUse.js\");\n\nfunction nodeStreamIterator(stream) {\n    var cleanup = null;\n    var error = null;\n    var done = false;\n    var data = [];\n    var waiting = [];\n    function onData(chunk) {\n        if (error) return;\n        if (waiting.length) {\n            var shiftedArr = waiting.shift();\n            if (Array.isArray(shiftedArr) && shiftedArr[0]) {\n                return shiftedArr[0]({\n                    value: chunk,\n                    done: false\n                });\n            }\n        }\n        data.push(chunk);\n    }\n    function onError(err) {\n        error = err;\n        var all = waiting.slice();\n        all.forEach(function(pair) {\n            pair[1](err);\n        });\n        !cleanup || cleanup();\n    }\n    function onEnd() {\n        done = true;\n        var all = waiting.slice();\n        all.forEach(function(pair) {\n            pair[0]({\n                value: undefined,\n                done: true\n            });\n        });\n        !cleanup || cleanup();\n    }\n    cleanup = function() {\n        cleanup = null;\n        stream.removeListener(\"data\", onData);\n        stream.removeListener(\"error\", onError);\n        stream.removeListener(\"end\", onEnd);\n        stream.removeListener(\"finish\", onEnd);\n        stream.removeListener(\"close\", onEnd);\n    };\n    stream.on(\"data\", onData);\n    stream.on(\"error\", onError);\n    stream.on(\"end\", onEnd);\n    stream.on(\"finish\", onEnd);\n    stream.on(\"close\", onEnd);\n    function getNext() {\n        return new Promise(function(resolve, reject) {\n            if (error) return reject(error);\n            if (data.length) return resolve({\n                value: data.shift(),\n                done: false\n            });\n            if (done) return resolve({\n                value: undefined,\n                done: true\n            });\n            waiting.push([\n                resolve,\n                reject\n            ]);\n        });\n    }\n    var iterator = {\n        next: function() {\n            return getNext();\n        }\n    };\n    if (_utilities_index_js__WEBPACK_IMPORTED_MODULE_0__.canUseAsyncIteratorSymbol) {\n        iterator[Symbol.asyncIterator] = function() {\n            return this;\n        };\n    }\n    return iterator;\n} //# sourceMappingURL=nodeStream.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFwb2xsby9jbGllbnQvbGluay9odHRwL2l0ZXJhdG9ycy9ub2RlU3RyZWFtLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXdFO0FBQ3pELFNBQVNDLG1CQUFtQkMsTUFBTTtJQUM3QyxJQUFJQyxVQUFVO0lBQ2QsSUFBSUMsUUFBUTtJQUNaLElBQUlDLE9BQU87SUFDWCxJQUFJQyxPQUFPLEVBQUU7SUFDYixJQUFJQyxVQUFVLEVBQUU7SUFDaEIsU0FBU0MsT0FBT0MsS0FBSztRQUNqQixJQUFJTCxPQUNBO1FBQ0osSUFBSUcsUUFBUUcsTUFBTSxFQUFFO1lBQ2hCLElBQUlDLGFBQWFKLFFBQVFLLEtBQUs7WUFDOUIsSUFBSUMsTUFBTUMsT0FBTyxDQUFDSCxlQUFlQSxVQUFVLENBQUMsRUFBRSxFQUFFO2dCQUM1QyxPQUFPQSxVQUFVLENBQUMsRUFBRSxDQUFDO29CQUFFSSxPQUFPTjtvQkFBT0osTUFBTTtnQkFBTTtZQUNyRDtRQUNKO1FBQ0FDLEtBQUtVLElBQUksQ0FBQ1A7SUFDZDtJQUNBLFNBQVNRLFFBQVFDLEdBQUc7UUFDaEJkLFFBQVFjO1FBQ1IsSUFBSUMsTUFBTVosUUFBUWEsS0FBSztRQUN2QkQsSUFBSUUsT0FBTyxDQUFDLFNBQVVDLElBQUk7WUFDdEJBLElBQUksQ0FBQyxFQUFFLENBQUNKO1FBQ1o7UUFDQSxDQUFDZixXQUFXQTtJQUNoQjtJQUNBLFNBQVNvQjtRQUNMbEIsT0FBTztRQUNQLElBQUljLE1BQU1aLFFBQVFhLEtBQUs7UUFDdkJELElBQUlFLE9BQU8sQ0FBQyxTQUFVQyxJQUFJO1lBQ3RCQSxJQUFJLENBQUMsRUFBRSxDQUFDO2dCQUFFUCxPQUFPUztnQkFBV25CLE1BQU07WUFBSztRQUMzQztRQUNBLENBQUNGLFdBQVdBO0lBQ2hCO0lBQ0FBLFVBQVU7UUFDTkEsVUFBVTtRQUNWRCxPQUFPdUIsY0FBYyxDQUFDLFFBQVFqQjtRQUM5Qk4sT0FBT3VCLGNBQWMsQ0FBQyxTQUFTUjtRQUMvQmYsT0FBT3VCLGNBQWMsQ0FBQyxPQUFPRjtRQUM3QnJCLE9BQU91QixjQUFjLENBQUMsVUFBVUY7UUFDaENyQixPQUFPdUIsY0FBYyxDQUFDLFNBQVNGO0lBQ25DO0lBQ0FyQixPQUFPd0IsRUFBRSxDQUFDLFFBQVFsQjtJQUNsQk4sT0FBT3dCLEVBQUUsQ0FBQyxTQUFTVDtJQUNuQmYsT0FBT3dCLEVBQUUsQ0FBQyxPQUFPSDtJQUNqQnJCLE9BQU93QixFQUFFLENBQUMsVUFBVUg7SUFDcEJyQixPQUFPd0IsRUFBRSxDQUFDLFNBQVNIO0lBQ25CLFNBQVNJO1FBQ0wsT0FBTyxJQUFJQyxRQUFRLFNBQVVDLE9BQU8sRUFBRUMsTUFBTTtZQUN4QyxJQUFJMUIsT0FDQSxPQUFPMEIsT0FBTzFCO1lBQ2xCLElBQUlFLEtBQUtJLE1BQU0sRUFDWCxPQUFPbUIsUUFBUTtnQkFBRWQsT0FBT1QsS0FBS00sS0FBSztnQkFBSVAsTUFBTTtZQUFNO1lBQ3RELElBQUlBLE1BQ0EsT0FBT3dCLFFBQVE7Z0JBQUVkLE9BQU9TO2dCQUFXbkIsTUFBTTtZQUFLO1lBQ2xERSxRQUFRUyxJQUFJLENBQUM7Z0JBQUNhO2dCQUFTQzthQUFPO1FBQ2xDO0lBQ0o7SUFDQSxJQUFJQyxXQUFXO1FBQ1hDLE1BQU07WUFDRixPQUFPTDtRQUNYO0lBQ0o7SUFDQSxJQUFJM0IsMEVBQXlCQSxFQUFFO1FBQzNCK0IsUUFBUSxDQUFDRSxPQUFPQyxhQUFhLENBQUMsR0FBRztZQUM3QixPQUFPLElBQUk7UUFDZjtJQUNKO0lBQ0EsT0FBT0g7QUFDWCxFQUNBLHNDQUFzQyIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1cm5pLWFwcC8uL25vZGVfbW9kdWxlcy9AYXBvbGxvL2NsaWVudC9saW5rL2h0dHAvaXRlcmF0b3JzL25vZGVTdHJlYW0uanM/MjcyNCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjYW5Vc2VBc3luY0l0ZXJhdG9yU3ltYm9sIH0gZnJvbSBcIi4uLy4uLy4uL3V0aWxpdGllcy9pbmRleC5qc1wiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gbm9kZVN0cmVhbUl0ZXJhdG9yKHN0cmVhbSkge1xuICAgIHZhciBjbGVhbnVwID0gbnVsbDtcbiAgICB2YXIgZXJyb3IgPSBudWxsO1xuICAgIHZhciBkb25lID0gZmFsc2U7XG4gICAgdmFyIGRhdGEgPSBbXTtcbiAgICB2YXIgd2FpdGluZyA9IFtdO1xuICAgIGZ1bmN0aW9uIG9uRGF0YShjaHVuaykge1xuICAgICAgICBpZiAoZXJyb3IpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIGlmICh3YWl0aW5nLmxlbmd0aCkge1xuICAgICAgICAgICAgdmFyIHNoaWZ0ZWRBcnIgPSB3YWl0aW5nLnNoaWZ0KCk7XG4gICAgICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShzaGlmdGVkQXJyKSAmJiBzaGlmdGVkQXJyWzBdKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHNoaWZ0ZWRBcnJbMF0oeyB2YWx1ZTogY2h1bmssIGRvbmU6IGZhbHNlIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGRhdGEucHVzaChjaHVuayk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIG9uRXJyb3IoZXJyKSB7XG4gICAgICAgIGVycm9yID0gZXJyO1xuICAgICAgICB2YXIgYWxsID0gd2FpdGluZy5zbGljZSgpO1xuICAgICAgICBhbGwuZm9yRWFjaChmdW5jdGlvbiAocGFpcikge1xuICAgICAgICAgICAgcGFpclsxXShlcnIpO1xuICAgICAgICB9KTtcbiAgICAgICAgIWNsZWFudXAgfHwgY2xlYW51cCgpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBvbkVuZCgpIHtcbiAgICAgICAgZG9uZSA9IHRydWU7XG4gICAgICAgIHZhciBhbGwgPSB3YWl0aW5nLnNsaWNlKCk7XG4gICAgICAgIGFsbC5mb3JFYWNoKGZ1bmN0aW9uIChwYWlyKSB7XG4gICAgICAgICAgICBwYWlyWzBdKHsgdmFsdWU6IHVuZGVmaW5lZCwgZG9uZTogdHJ1ZSB9KTtcbiAgICAgICAgfSk7XG4gICAgICAgICFjbGVhbnVwIHx8IGNsZWFudXAoKTtcbiAgICB9XG4gICAgY2xlYW51cCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgY2xlYW51cCA9IG51bGw7XG4gICAgICAgIHN0cmVhbS5yZW1vdmVMaXN0ZW5lcihcImRhdGFcIiwgb25EYXRhKTtcbiAgICAgICAgc3RyZWFtLnJlbW92ZUxpc3RlbmVyKFwiZXJyb3JcIiwgb25FcnJvcik7XG4gICAgICAgIHN0cmVhbS5yZW1vdmVMaXN0ZW5lcihcImVuZFwiLCBvbkVuZCk7XG4gICAgICAgIHN0cmVhbS5yZW1vdmVMaXN0ZW5lcihcImZpbmlzaFwiLCBvbkVuZCk7XG4gICAgICAgIHN0cmVhbS5yZW1vdmVMaXN0ZW5lcihcImNsb3NlXCIsIG9uRW5kKTtcbiAgICB9O1xuICAgIHN0cmVhbS5vbihcImRhdGFcIiwgb25EYXRhKTtcbiAgICBzdHJlYW0ub24oXCJlcnJvclwiLCBvbkVycm9yKTtcbiAgICBzdHJlYW0ub24oXCJlbmRcIiwgb25FbmQpO1xuICAgIHN0cmVhbS5vbihcImZpbmlzaFwiLCBvbkVuZCk7XG4gICAgc3RyZWFtLm9uKFwiY2xvc2VcIiwgb25FbmQpO1xuICAgIGZ1bmN0aW9uIGdldE5leHQoKSB7XG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgICAgICBpZiAoZXJyb3IpXG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlamVjdChlcnJvcik7XG4gICAgICAgICAgICBpZiAoZGF0YS5sZW5ndGgpXG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlc29sdmUoeyB2YWx1ZTogZGF0YS5zaGlmdCgpLCBkb25lOiBmYWxzZSB9KTtcbiAgICAgICAgICAgIGlmIChkb25lKVxuICAgICAgICAgICAgICAgIHJldHVybiByZXNvbHZlKHsgdmFsdWU6IHVuZGVmaW5lZCwgZG9uZTogdHJ1ZSB9KTtcbiAgICAgICAgICAgIHdhaXRpbmcucHVzaChbcmVzb2x2ZSwgcmVqZWN0XSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICB2YXIgaXRlcmF0b3IgPSB7XG4gICAgICAgIG5leHQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBnZXROZXh0KCk7XG4gICAgICAgIH0sXG4gICAgfTtcbiAgICBpZiAoY2FuVXNlQXN5bmNJdGVyYXRvclN5bWJvbCkge1xuICAgICAgICBpdGVyYXRvcltTeW1ib2wuYXN5bmNJdGVyYXRvcl0gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgfTtcbiAgICB9XG4gICAgcmV0dXJuIGl0ZXJhdG9yO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bm9kZVN0cmVhbS5qcy5tYXAiXSwibmFtZXMiOlsiY2FuVXNlQXN5bmNJdGVyYXRvclN5bWJvbCIsIm5vZGVTdHJlYW1JdGVyYXRvciIsInN0cmVhbSIsImNsZWFudXAiLCJlcnJvciIsImRvbmUiLCJkYXRhIiwid2FpdGluZyIsIm9uRGF0YSIsImNodW5rIiwibGVuZ3RoIiwic2hpZnRlZEFyciIsInNoaWZ0IiwiQXJyYXkiLCJpc0FycmF5IiwidmFsdWUiLCJwdXNoIiwib25FcnJvciIsImVyciIsImFsbCIsInNsaWNlIiwiZm9yRWFjaCIsInBhaXIiLCJvbkVuZCIsInVuZGVmaW5lZCIsInJlbW92ZUxpc3RlbmVyIiwib24iLCJnZXROZXh0IiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJpdGVyYXRvciIsIm5leHQiLCJTeW1ib2wiLCJhc3luY0l0ZXJhdG9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/link/http/iterators/nodeStream.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/link/http/iterators/promise.js":
/*!********************************************************************!*\
  !*** ./node_modules/@apollo/client/link/http/iterators/promise.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ promiseIterator)\n/* harmony export */ });\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/common/canUse.js\");\n\nfunction promiseIterator(promise) {\n    var resolved = false;\n    var iterator = {\n        next: function() {\n            if (resolved) return Promise.resolve({\n                value: undefined,\n                done: true\n            });\n            resolved = true;\n            return new Promise(function(resolve, reject) {\n                promise.then(function(value) {\n                    resolve({\n                        value: value,\n                        done: false\n                    });\n                }).catch(reject);\n            });\n        }\n    };\n    if (_utilities_index_js__WEBPACK_IMPORTED_MODULE_0__.canUseAsyncIteratorSymbol) {\n        iterator[Symbol.asyncIterator] = function() {\n            return this;\n        };\n    }\n    return iterator;\n} //# sourceMappingURL=promise.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFwb2xsby9jbGllbnQvbGluay9odHRwL2l0ZXJhdG9ycy9wcm9taXNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXdFO0FBQ3pELFNBQVNDLGdCQUFnQkMsT0FBTztJQUMzQyxJQUFJQyxXQUFXO0lBQ2YsSUFBSUMsV0FBVztRQUNYQyxNQUFNO1lBQ0YsSUFBSUYsVUFDQSxPQUFPRyxRQUFRQyxPQUFPLENBQUM7Z0JBQ25CQyxPQUFPQztnQkFDUEMsTUFBTTtZQUNWO1lBQ0pQLFdBQVc7WUFDWCxPQUFPLElBQUlHLFFBQVEsU0FBVUMsT0FBTyxFQUFFSSxNQUFNO2dCQUN4Q1QsUUFDS1UsSUFBSSxDQUFDLFNBQVVKLEtBQUs7b0JBQ3JCRCxRQUFRO3dCQUFFQyxPQUFPQTt3QkFBT0UsTUFBTTtvQkFBTTtnQkFDeEMsR0FDS0csS0FBSyxDQUFDRjtZQUNmO1FBQ0o7SUFDSjtJQUNBLElBQUlYLDBFQUF5QkEsRUFBRTtRQUMzQkksUUFBUSxDQUFDVSxPQUFPQyxhQUFhLENBQUMsR0FBRztZQUM3QixPQUFPLElBQUk7UUFDZjtJQUNKO0lBQ0EsT0FBT1g7QUFDWCxFQUNBLG1DQUFtQyIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1cm5pLWFwcC8uL25vZGVfbW9kdWxlcy9AYXBvbGxvL2NsaWVudC9saW5rL2h0dHAvaXRlcmF0b3JzL3Byb21pc2UuanM/MDk3OSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjYW5Vc2VBc3luY0l0ZXJhdG9yU3ltYm9sIH0gZnJvbSBcIi4uLy4uLy4uL3V0aWxpdGllcy9pbmRleC5qc1wiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcHJvbWlzZUl0ZXJhdG9yKHByb21pc2UpIHtcbiAgICB2YXIgcmVzb2x2ZWQgPSBmYWxzZTtcbiAgICB2YXIgaXRlcmF0b3IgPSB7XG4gICAgICAgIG5leHQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGlmIChyZXNvbHZlZClcbiAgICAgICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHtcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgICAgICAgICAgZG9uZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHJlc29sdmVkID0gdHJ1ZTtcbiAgICAgICAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgICAgICAgICAgcHJvbWlzZVxuICAgICAgICAgICAgICAgICAgICAudGhlbihmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZSh7IHZhbHVlOiB2YWx1ZSwgZG9uZTogZmFsc2UgfSk7XG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgLmNhdGNoKHJlamVjdCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSxcbiAgICB9O1xuICAgIGlmIChjYW5Vc2VBc3luY0l0ZXJhdG9yU3ltYm9sKSB7XG4gICAgICAgIGl0ZXJhdG9yW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICB9O1xuICAgIH1cbiAgICByZXR1cm4gaXRlcmF0b3I7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wcm9taXNlLmpzLm1hcCJdLCJuYW1lcyI6WyJjYW5Vc2VBc3luY0l0ZXJhdG9yU3ltYm9sIiwicHJvbWlzZUl0ZXJhdG9yIiwicHJvbWlzZSIsInJlc29sdmVkIiwiaXRlcmF0b3IiLCJuZXh0IiwiUHJvbWlzZSIsInJlc29sdmUiLCJ2YWx1ZSIsInVuZGVmaW5lZCIsImRvbmUiLCJyZWplY3QiLCJ0aGVuIiwiY2F0Y2giLCJTeW1ib2wiLCJhc3luY0l0ZXJhdG9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/link/http/iterators/promise.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/link/http/iterators/reader.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@apollo/client/link/http/iterators/reader.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ readerIterator)\n/* harmony export */ });\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/common/canUse.js\");\n\nfunction readerIterator(reader) {\n    var iterator = {\n        next: function() {\n            return reader.read();\n        }\n    };\n    if (_utilities_index_js__WEBPACK_IMPORTED_MODULE_0__.canUseAsyncIteratorSymbol) {\n        iterator[Symbol.asyncIterator] = function() {\n            return this;\n        };\n    }\n    return iterator;\n} //# sourceMappingURL=reader.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFwb2xsby9jbGllbnQvbGluay9odHRwL2l0ZXJhdG9ycy9yZWFkZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBd0U7QUFDekQsU0FBU0MsZUFBZUMsTUFBTTtJQUN6QyxJQUFJQyxXQUFXO1FBQ1hDLE1BQU07WUFDRixPQUFPRixPQUFPRyxJQUFJO1FBQ3RCO0lBQ0o7SUFDQSxJQUFJTCwwRUFBeUJBLEVBQUU7UUFDM0JHLFFBQVEsQ0FBQ0csT0FBT0MsYUFBYSxDQUFDLEdBQUc7WUFDN0IsT0FBTyxJQUFJO1FBQ2Y7SUFDSjtJQUNBLE9BQU9KO0FBQ1gsRUFDQSxrQ0FBa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdXJuaS1hcHAvLi9ub2RlX21vZHVsZXMvQGFwb2xsby9jbGllbnQvbGluay9odHRwL2l0ZXJhdG9ycy9yZWFkZXIuanM/OGUyNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjYW5Vc2VBc3luY0l0ZXJhdG9yU3ltYm9sIH0gZnJvbSBcIi4uLy4uLy4uL3V0aWxpdGllcy9pbmRleC5qc1wiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcmVhZGVySXRlcmF0b3IocmVhZGVyKSB7XG4gICAgdmFyIGl0ZXJhdG9yID0ge1xuICAgICAgICBuZXh0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gcmVhZGVyLnJlYWQoKTtcbiAgICAgICAgfSxcbiAgICB9O1xuICAgIGlmIChjYW5Vc2VBc3luY0l0ZXJhdG9yU3ltYm9sKSB7XG4gICAgICAgIGl0ZXJhdG9yW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICB9O1xuICAgIH1cbiAgICByZXR1cm4gaXRlcmF0b3I7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZWFkZXIuanMubWFwIl0sIm5hbWVzIjpbImNhblVzZUFzeW5jSXRlcmF0b3JTeW1ib2wiLCJyZWFkZXJJdGVyYXRvciIsInJlYWRlciIsIml0ZXJhdG9yIiwibmV4dCIsInJlYWQiLCJTeW1ib2wiLCJhc3luY0l0ZXJhdG9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/link/http/iterators/reader.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/link/http/parseAndCheckHttpResponse.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@apollo/client/link/http/parseAndCheckHttpResponse.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handleError: () => (/* binding */ handleError),\n/* harmony export */   parseAndCheckHttpResponse: () => (/* binding */ parseAndCheckHttpResponse),\n/* harmony export */   parseHeaders: () => (/* binding */ parseHeaders),\n/* harmony export */   parseJsonBody: () => (/* binding */ parseJsonBody),\n/* harmony export */   readMultipartBody: () => (/* binding */ readMultipartBody)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.mjs\");\n/* harmony import */ var _responseIterator_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./responseIterator.js */ \"(ssr)/./node_modules/@apollo/client/link/http/responseIterator.js\");\n/* harmony import */ var _utils_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/index.js */ \"(ssr)/./node_modules/@apollo/client/link/utils/throwServerError.js\");\n/* harmony import */ var _errors_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../errors/index.js */ \"(ssr)/./node_modules/@apollo/client/errors/index.js\");\n/* harmony import */ var _utilities_common_incrementalResult_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utilities/common/incrementalResult.js */ \"(ssr)/./node_modules/@apollo/client/utilities/common/incrementalResult.js\");\n\n\n\n\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction readMultipartBody(response, nextValue) {\n    var _a;\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__awaiter)(this, void 0, void 0, function() {\n        var decoder, contentType, delimiter, boundaryVal, boundary, buffer, iterator, running, _b, value, done, chunk, searchFrom, bi, message, i, headers, contentType_1, body, result, next;\n        var _c, _d;\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__generator)(this, function(_e) {\n            switch(_e.label){\n                case 0:\n                    if (TextDecoder === undefined) {\n                        throw new Error(\"TextDecoder must be defined in the environment: please import a polyfill.\");\n                    }\n                    decoder = new TextDecoder(\"utf-8\");\n                    contentType = (_a = response.headers) === null || _a === void 0 ? void 0 : _a.get(\"content-type\");\n                    delimiter = \"boundary=\";\n                    boundaryVal = (contentType === null || contentType === void 0 ? void 0 : contentType.includes(delimiter)) ? contentType === null || contentType === void 0 ? void 0 : contentType.substring((contentType === null || contentType === void 0 ? void 0 : contentType.indexOf(delimiter)) + delimiter.length).replace(/['\"]/g, \"\").replace(/\\;(.*)/gm, \"\").trim() : \"-\";\n                    boundary = \"\\r\\n--\".concat(boundaryVal);\n                    buffer = \"\";\n                    iterator = (0,_responseIterator_js__WEBPACK_IMPORTED_MODULE_1__.responseIterator)(response);\n                    running = true;\n                    _e.label = 1;\n                case 1:\n                    if (!running) return [\n                        3,\n                        3\n                    ];\n                    return [\n                        4,\n                        iterator.next()\n                    ];\n                case 2:\n                    _b = _e.sent(), value = _b.value, done = _b.done;\n                    chunk = typeof value === \"string\" ? value : decoder.decode(value);\n                    searchFrom = buffer.length - boundary.length + 1;\n                    running = !done;\n                    buffer += chunk;\n                    bi = buffer.indexOf(boundary, searchFrom);\n                    while(bi > -1){\n                        message = void 0;\n                        _c = [\n                            buffer.slice(0, bi),\n                            buffer.slice(bi + boundary.length)\n                        ], message = _c[0], buffer = _c[1];\n                        i = message.indexOf(\"\\r\\n\\r\\n\");\n                        headers = parseHeaders(message.slice(0, i));\n                        contentType_1 = headers[\"content-type\"];\n                        if (contentType_1 && contentType_1.toLowerCase().indexOf(\"application/json\") === -1) {\n                            throw new Error(\"Unsupported patch content type: application/json is required.\");\n                        }\n                        body = message.slice(i);\n                        if (body) {\n                            result = parseJsonBody(response, body);\n                            if (Object.keys(result).length > 1 || \"data\" in result || \"incremental\" in result || \"errors\" in result || \"payload\" in result) {\n                                if ((0,_utilities_common_incrementalResult_js__WEBPACK_IMPORTED_MODULE_2__.isApolloPayloadResult)(result)) {\n                                    next = {};\n                                    if (\"payload\" in result) {\n                                        next = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, result.payload);\n                                    }\n                                    if (\"errors\" in result) {\n                                        next = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, next), {\n                                            extensions: (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, \"extensions\" in next ? next.extensions : null), (_d = {}, _d[_errors_index_js__WEBPACK_IMPORTED_MODULE_3__.PROTOCOL_ERRORS_SYMBOL] = result.errors, _d))\n                                        });\n                                    }\n                                    nextValue(next);\n                                } else {\n                                    nextValue(result);\n                                }\n                            } else if (Object.keys(result).length === 1 && \"hasNext\" in result && !result.hasNext) {\n                                return [\n                                    2\n                                ];\n                            }\n                        }\n                        bi = buffer.indexOf(boundary);\n                    }\n                    return [\n                        3,\n                        1\n                    ];\n                case 3:\n                    return [\n                        2\n                    ];\n            }\n        });\n    });\n}\nfunction parseHeaders(headerText) {\n    var headersInit = {};\n    headerText.split(\"\\n\").forEach(function(line) {\n        var i = line.indexOf(\":\");\n        if (i > -1) {\n            var name_1 = line.slice(0, i).trim().toLowerCase();\n            var value = line.slice(i + 1).trim();\n            headersInit[name_1] = value;\n        }\n    });\n    return headersInit;\n}\nfunction parseJsonBody(response, bodyText) {\n    if (response.status >= 300) {\n        var getResult = function() {\n            try {\n                return JSON.parse(bodyText);\n            } catch (err) {\n                return bodyText;\n            }\n        };\n        (0,_utils_index_js__WEBPACK_IMPORTED_MODULE_4__.throwServerError)(response, getResult(), \"Response not successful: Received status code \".concat(response.status));\n    }\n    try {\n        return JSON.parse(bodyText);\n    } catch (err) {\n        var parseError = err;\n        parseError.name = \"ServerParseError\";\n        parseError.response = response;\n        parseError.statusCode = response.status;\n        parseError.bodyText = bodyText;\n        throw parseError;\n    }\n}\nfunction handleError(err, observer) {\n    if (err.result && err.result.errors && err.result.data) {\n        observer.next(err.result);\n    }\n    observer.error(err);\n}\nfunction parseAndCheckHttpResponse(operations) {\n    return function(response) {\n        return response.text().then(function(bodyText) {\n            return parseJsonBody(response, bodyText);\n        }).then(function(result) {\n            if (response.status >= 300) {\n                (0,_utils_index_js__WEBPACK_IMPORTED_MODULE_4__.throwServerError)(response, result, \"Response not successful: Received status code \".concat(response.status));\n            }\n            if (!Array.isArray(result) && !hasOwnProperty.call(result, \"data\") && !hasOwnProperty.call(result, \"errors\")) {\n                (0,_utils_index_js__WEBPACK_IMPORTED_MODULE_4__.throwServerError)(response, result, \"Server response was missing for query '\".concat(Array.isArray(operations) ? operations.map(function(op) {\n                    return op.operationName;\n                }) : operations.operationName, \"'.\"));\n            }\n            return result;\n        });\n    };\n} //# sourceMappingURL=parseAndCheckHttpResponse.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/link/http/parseAndCheckHttpResponse.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/link/http/responseIterator.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@apollo/client/link/http/responseIterator.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   responseIterator: () => (/* binding */ responseIterator)\n/* harmony export */ });\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/common/canUse.js\");\n/* harmony import */ var _iterators_async_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./iterators/async.js */ \"(ssr)/./node_modules/@apollo/client/link/http/iterators/async.js\");\n/* harmony import */ var _iterators_nodeStream_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./iterators/nodeStream.js */ \"(ssr)/./node_modules/@apollo/client/link/http/iterators/nodeStream.js\");\n/* harmony import */ var _iterators_promise_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./iterators/promise.js */ \"(ssr)/./node_modules/@apollo/client/link/http/iterators/promise.js\");\n/* harmony import */ var _iterators_reader_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./iterators/reader.js */ \"(ssr)/./node_modules/@apollo/client/link/http/iterators/reader.js\");\n\n\n\n\n\nfunction isNodeResponse(value) {\n    return !!value.body;\n}\nfunction isReadableStream(value) {\n    return !!value.getReader;\n}\nfunction isAsyncIterableIterator(value) {\n    return !!(_utilities_index_js__WEBPACK_IMPORTED_MODULE_0__.canUseAsyncIteratorSymbol && value[Symbol.asyncIterator]);\n}\nfunction isStreamableBlob(value) {\n    return !!value.stream;\n}\nfunction isBlob(value) {\n    return !!value.arrayBuffer;\n}\nfunction isNodeReadableStream(value) {\n    return !!value.pipe;\n}\nfunction responseIterator(response) {\n    var body = response;\n    if (isNodeResponse(response)) body = response.body;\n    if (isAsyncIterableIterator(body)) return (0,_iterators_async_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(body);\n    if (isReadableStream(body)) return (0,_iterators_reader_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(body.getReader());\n    if (isStreamableBlob(body)) {\n        return (0,_iterators_reader_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(body.stream().getReader());\n    }\n    if (isBlob(body)) return (0,_iterators_promise_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(body.arrayBuffer());\n    if (isNodeReadableStream(body)) return (0,_iterators_nodeStream_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(body);\n    throw new Error(\"Unknown body type for responseIterator. Please pass a streamable response.\");\n} //# sourceMappingURL=responseIterator.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFwb2xsby9jbGllbnQvbGluay9odHRwL3Jlc3BvbnNlSXRlcmF0b3IuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQXFFO0FBQ3BCO0FBQ1U7QUFDTjtBQUNGO0FBQ25ELFNBQVNLLGVBQWVDLEtBQUs7SUFDekIsT0FBTyxDQUFDLENBQUNBLE1BQU1DLElBQUk7QUFDdkI7QUFDQSxTQUFTQyxpQkFBaUJGLEtBQUs7SUFDM0IsT0FBTyxDQUFDLENBQUNBLE1BQU1HLFNBQVM7QUFDNUI7QUFDQSxTQUFTQyx3QkFBd0JKLEtBQUs7SUFDbEMsT0FBTyxDQUFDLENBQUVOLENBQUFBLDBFQUF5QkEsSUFDL0JNLEtBQUssQ0FBQ0ssT0FBT1YsYUFBYSxDQUFDO0FBQ25DO0FBQ0EsU0FBU1csaUJBQWlCTixLQUFLO0lBQzNCLE9BQU8sQ0FBQyxDQUFDQSxNQUFNTyxNQUFNO0FBQ3pCO0FBQ0EsU0FBU0MsT0FBT1IsS0FBSztJQUNqQixPQUFPLENBQUMsQ0FBQ0EsTUFBTVMsV0FBVztBQUM5QjtBQUNBLFNBQVNDLHFCQUFxQlYsS0FBSztJQUMvQixPQUFPLENBQUMsQ0FBQ0EsTUFBTVcsSUFBSTtBQUN2QjtBQUNPLFNBQVNDLGlCQUFpQkMsUUFBUTtJQUNyQyxJQUFJWixPQUFPWTtJQUNYLElBQUlkLGVBQWVjLFdBQ2ZaLE9BQU9ZLFNBQVNaLElBQUk7SUFDeEIsSUFBSUcsd0JBQXdCSCxPQUN4QixPQUFPTiwrREFBYUEsQ0FBQ007SUFDekIsSUFBSUMsaUJBQWlCRCxPQUNqQixPQUFPSCxnRUFBY0EsQ0FBQ0csS0FBS0UsU0FBUztJQUN4QyxJQUFJRyxpQkFBaUJMLE9BQU87UUFDeEIsT0FBT0gsZ0VBQWNBLENBQUNHLEtBQUtNLE1BQU0sR0FBR0osU0FBUztJQUNqRDtJQUNBLElBQUlLLE9BQU9QLE9BQ1AsT0FBT0osaUVBQWVBLENBQUNJLEtBQUtRLFdBQVc7SUFDM0MsSUFBSUMscUJBQXFCVCxPQUNyQixPQUFPTCxvRUFBa0JBLENBQUNLO0lBQzlCLE1BQU0sSUFBSWEsTUFBTTtBQUNwQixFQUNBLDRDQUE0QyIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1cm5pLWFwcC8uL25vZGVfbW9kdWxlcy9AYXBvbGxvL2NsaWVudC9saW5rL2h0dHAvcmVzcG9uc2VJdGVyYXRvci5qcz83ZjM0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNhblVzZUFzeW5jSXRlcmF0b3JTeW1ib2wgfSBmcm9tIFwiLi4vLi4vdXRpbGl0aWVzL2luZGV4LmpzXCI7XG5pbXBvcnQgYXN5bmNJdGVyYXRvciBmcm9tIFwiLi9pdGVyYXRvcnMvYXN5bmMuanNcIjtcbmltcG9ydCBub2RlU3RyZWFtSXRlcmF0b3IgZnJvbSBcIi4vaXRlcmF0b3JzL25vZGVTdHJlYW0uanNcIjtcbmltcG9ydCBwcm9taXNlSXRlcmF0b3IgZnJvbSBcIi4vaXRlcmF0b3JzL3Byb21pc2UuanNcIjtcbmltcG9ydCByZWFkZXJJdGVyYXRvciBmcm9tIFwiLi9pdGVyYXRvcnMvcmVhZGVyLmpzXCI7XG5mdW5jdGlvbiBpc05vZGVSZXNwb25zZSh2YWx1ZSkge1xuICAgIHJldHVybiAhIXZhbHVlLmJvZHk7XG59XG5mdW5jdGlvbiBpc1JlYWRhYmxlU3RyZWFtKHZhbHVlKSB7XG4gICAgcmV0dXJuICEhdmFsdWUuZ2V0UmVhZGVyO1xufVxuZnVuY3Rpb24gaXNBc3luY0l0ZXJhYmxlSXRlcmF0b3IodmFsdWUpIHtcbiAgICByZXR1cm4gISEoY2FuVXNlQXN5bmNJdGVyYXRvclN5bWJvbCAmJlxuICAgICAgICB2YWx1ZVtTeW1ib2wuYXN5bmNJdGVyYXRvcl0pO1xufVxuZnVuY3Rpb24gaXNTdHJlYW1hYmxlQmxvYih2YWx1ZSkge1xuICAgIHJldHVybiAhIXZhbHVlLnN0cmVhbTtcbn1cbmZ1bmN0aW9uIGlzQmxvYih2YWx1ZSkge1xuICAgIHJldHVybiAhIXZhbHVlLmFycmF5QnVmZmVyO1xufVxuZnVuY3Rpb24gaXNOb2RlUmVhZGFibGVTdHJlYW0odmFsdWUpIHtcbiAgICByZXR1cm4gISF2YWx1ZS5waXBlO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHJlc3BvbnNlSXRlcmF0b3IocmVzcG9uc2UpIHtcbiAgICB2YXIgYm9keSA9IHJlc3BvbnNlO1xuICAgIGlmIChpc05vZGVSZXNwb25zZShyZXNwb25zZSkpXG4gICAgICAgIGJvZHkgPSByZXNwb25zZS5ib2R5O1xuICAgIGlmIChpc0FzeW5jSXRlcmFibGVJdGVyYXRvcihib2R5KSlcbiAgICAgICAgcmV0dXJuIGFzeW5jSXRlcmF0b3IoYm9keSk7XG4gICAgaWYgKGlzUmVhZGFibGVTdHJlYW0oYm9keSkpXG4gICAgICAgIHJldHVybiByZWFkZXJJdGVyYXRvcihib2R5LmdldFJlYWRlcigpKTtcbiAgICBpZiAoaXNTdHJlYW1hYmxlQmxvYihib2R5KSkge1xuICAgICAgICByZXR1cm4gcmVhZGVySXRlcmF0b3IoYm9keS5zdHJlYW0oKS5nZXRSZWFkZXIoKSk7XG4gICAgfVxuICAgIGlmIChpc0Jsb2IoYm9keSkpXG4gICAgICAgIHJldHVybiBwcm9taXNlSXRlcmF0b3IoYm9keS5hcnJheUJ1ZmZlcigpKTtcbiAgICBpZiAoaXNOb2RlUmVhZGFibGVTdHJlYW0oYm9keSkpXG4gICAgICAgIHJldHVybiBub2RlU3RyZWFtSXRlcmF0b3IoYm9keSk7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiVW5rbm93biBib2R5IHR5cGUgZm9yIHJlc3BvbnNlSXRlcmF0b3IuIFBsZWFzZSBwYXNzIGEgc3RyZWFtYWJsZSByZXNwb25zZS5cIik7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZXNwb25zZUl0ZXJhdG9yLmpzLm1hcCJdLCJuYW1lcyI6WyJjYW5Vc2VBc3luY0l0ZXJhdG9yU3ltYm9sIiwiYXN5bmNJdGVyYXRvciIsIm5vZGVTdHJlYW1JdGVyYXRvciIsInByb21pc2VJdGVyYXRvciIsInJlYWRlckl0ZXJhdG9yIiwiaXNOb2RlUmVzcG9uc2UiLCJ2YWx1ZSIsImJvZHkiLCJpc1JlYWRhYmxlU3RyZWFtIiwiZ2V0UmVhZGVyIiwiaXNBc3luY0l0ZXJhYmxlSXRlcmF0b3IiLCJTeW1ib2wiLCJpc1N0cmVhbWFibGVCbG9iIiwic3RyZWFtIiwiaXNCbG9iIiwiYXJyYXlCdWZmZXIiLCJpc05vZGVSZWFkYWJsZVN0cmVhbSIsInBpcGUiLCJyZXNwb25zZUl0ZXJhdG9yIiwicmVzcG9uc2UiLCJFcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/link/http/responseIterator.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/link/http/rewriteURIForGET.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@apollo/client/link/http/rewriteURIForGET.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   rewriteURIForGET: () => (/* binding */ rewriteURIForGET)\n/* harmony export */ });\n/* harmony import */ var _serializeFetchParameter_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./serializeFetchParameter.js */ \"(ssr)/./node_modules/@apollo/client/link/http/serializeFetchParameter.js\");\n\nfunction rewriteURIForGET(chosenURI, body) {\n    var queryParams = [];\n    var addQueryParam = function(key, value) {\n        queryParams.push(\"\".concat(key, \"=\").concat(encodeURIComponent(value)));\n    };\n    if (\"query\" in body) {\n        addQueryParam(\"query\", body.query);\n    }\n    if (body.operationName) {\n        addQueryParam(\"operationName\", body.operationName);\n    }\n    if (body.variables) {\n        var serializedVariables = void 0;\n        try {\n            serializedVariables = (0,_serializeFetchParameter_js__WEBPACK_IMPORTED_MODULE_0__.serializeFetchParameter)(body.variables, \"Variables map\");\n        } catch (parseError) {\n            return {\n                parseError: parseError\n            };\n        }\n        addQueryParam(\"variables\", serializedVariables);\n    }\n    if (body.extensions) {\n        var serializedExtensions = void 0;\n        try {\n            serializedExtensions = (0,_serializeFetchParameter_js__WEBPACK_IMPORTED_MODULE_0__.serializeFetchParameter)(body.extensions, \"Extensions map\");\n        } catch (parseError) {\n            return {\n                parseError: parseError\n            };\n        }\n        addQueryParam(\"extensions\", serializedExtensions);\n    }\n    var fragment = \"\", preFragment = chosenURI;\n    var fragmentStart = chosenURI.indexOf(\"#\");\n    if (fragmentStart !== -1) {\n        fragment = chosenURI.substr(fragmentStart);\n        preFragment = chosenURI.substr(0, fragmentStart);\n    }\n    var queryParamsPrefix = preFragment.indexOf(\"?\") === -1 ? \"?\" : \"&\";\n    var newURI = preFragment + queryParamsPrefix + queryParams.join(\"&\") + fragment;\n    return {\n        newURI: newURI\n    };\n} //# sourceMappingURL=rewriteURIForGET.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFwb2xsby9jbGllbnQvbGluay9odHRwL3Jld3JpdGVVUklGb3JHRVQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBdUU7QUFDaEUsU0FBU0MsaUJBQWlCQyxTQUFTLEVBQUVDLElBQUk7SUFDNUMsSUFBSUMsY0FBYyxFQUFFO0lBQ3BCLElBQUlDLGdCQUFnQixTQUFVQyxHQUFHLEVBQUVDLEtBQUs7UUFDcENILFlBQVlJLElBQUksQ0FBQyxHQUFHQyxNQUFNLENBQUNILEtBQUssS0FBS0csTUFBTSxDQUFDQyxtQkFBbUJIO0lBQ25FO0lBQ0EsSUFBSSxXQUFXSixNQUFNO1FBQ2pCRSxjQUFjLFNBQVNGLEtBQUtRLEtBQUs7SUFDckM7SUFDQSxJQUFJUixLQUFLUyxhQUFhLEVBQUU7UUFDcEJQLGNBQWMsaUJBQWlCRixLQUFLUyxhQUFhO0lBQ3JEO0lBQ0EsSUFBSVQsS0FBS1UsU0FBUyxFQUFFO1FBQ2hCLElBQUlDLHNCQUFzQixLQUFLO1FBQy9CLElBQUk7WUFDQUEsc0JBQXNCZCxvRkFBdUJBLENBQUNHLEtBQUtVLFNBQVMsRUFBRTtRQUNsRSxFQUNBLE9BQU9FLFlBQVk7WUFDZixPQUFPO2dCQUFFQSxZQUFZQTtZQUFXO1FBQ3BDO1FBQ0FWLGNBQWMsYUFBYVM7SUFDL0I7SUFDQSxJQUFJWCxLQUFLYSxVQUFVLEVBQUU7UUFDakIsSUFBSUMsdUJBQXVCLEtBQUs7UUFDaEMsSUFBSTtZQUNBQSx1QkFBdUJqQixvRkFBdUJBLENBQUNHLEtBQUthLFVBQVUsRUFBRTtRQUNwRSxFQUNBLE9BQU9ELFlBQVk7WUFDZixPQUFPO2dCQUFFQSxZQUFZQTtZQUFXO1FBQ3BDO1FBQ0FWLGNBQWMsY0FBY1k7SUFDaEM7SUFDQSxJQUFJQyxXQUFXLElBQUlDLGNBQWNqQjtJQUNqQyxJQUFJa0IsZ0JBQWdCbEIsVUFBVW1CLE9BQU8sQ0FBQztJQUN0QyxJQUFJRCxrQkFBa0IsQ0FBQyxHQUFHO1FBQ3RCRixXQUFXaEIsVUFBVW9CLE1BQU0sQ0FBQ0Y7UUFDNUJELGNBQWNqQixVQUFVb0IsTUFBTSxDQUFDLEdBQUdGO0lBQ3RDO0lBQ0EsSUFBSUcsb0JBQW9CSixZQUFZRSxPQUFPLENBQUMsU0FBUyxDQUFDLElBQUksTUFBTTtJQUNoRSxJQUFJRyxTQUFTTCxjQUFjSSxvQkFBb0JuQixZQUFZcUIsSUFBSSxDQUFDLE9BQU9QO0lBQ3ZFLE9BQU87UUFBRU0sUUFBUUE7SUFBTztBQUM1QixFQUNBLDRDQUE0QyIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1cm5pLWFwcC8uL25vZGVfbW9kdWxlcy9AYXBvbGxvL2NsaWVudC9saW5rL2h0dHAvcmV3cml0ZVVSSUZvckdFVC5qcz82NTcwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHNlcmlhbGl6ZUZldGNoUGFyYW1ldGVyIH0gZnJvbSBcIi4vc2VyaWFsaXplRmV0Y2hQYXJhbWV0ZXIuanNcIjtcbmV4cG9ydCBmdW5jdGlvbiByZXdyaXRlVVJJRm9yR0VUKGNob3NlblVSSSwgYm9keSkge1xuICAgIHZhciBxdWVyeVBhcmFtcyA9IFtdO1xuICAgIHZhciBhZGRRdWVyeVBhcmFtID0gZnVuY3Rpb24gKGtleSwgdmFsdWUpIHtcbiAgICAgICAgcXVlcnlQYXJhbXMucHVzaChcIlwiLmNvbmNhdChrZXksIFwiPVwiKS5jb25jYXQoZW5jb2RlVVJJQ29tcG9uZW50KHZhbHVlKSkpO1xuICAgIH07XG4gICAgaWYgKFwicXVlcnlcIiBpbiBib2R5KSB7XG4gICAgICAgIGFkZFF1ZXJ5UGFyYW0oXCJxdWVyeVwiLCBib2R5LnF1ZXJ5KTtcbiAgICB9XG4gICAgaWYgKGJvZHkub3BlcmF0aW9uTmFtZSkge1xuICAgICAgICBhZGRRdWVyeVBhcmFtKFwib3BlcmF0aW9uTmFtZVwiLCBib2R5Lm9wZXJhdGlvbk5hbWUpO1xuICAgIH1cbiAgICBpZiAoYm9keS52YXJpYWJsZXMpIHtcbiAgICAgICAgdmFyIHNlcmlhbGl6ZWRWYXJpYWJsZXMgPSB2b2lkIDA7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBzZXJpYWxpemVkVmFyaWFibGVzID0gc2VyaWFsaXplRmV0Y2hQYXJhbWV0ZXIoYm9keS52YXJpYWJsZXMsIFwiVmFyaWFibGVzIG1hcFwiKTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAocGFyc2VFcnJvcikge1xuICAgICAgICAgICAgcmV0dXJuIHsgcGFyc2VFcnJvcjogcGFyc2VFcnJvciB9O1xuICAgICAgICB9XG4gICAgICAgIGFkZFF1ZXJ5UGFyYW0oXCJ2YXJpYWJsZXNcIiwgc2VyaWFsaXplZFZhcmlhYmxlcyk7XG4gICAgfVxuICAgIGlmIChib2R5LmV4dGVuc2lvbnMpIHtcbiAgICAgICAgdmFyIHNlcmlhbGl6ZWRFeHRlbnNpb25zID0gdm9pZCAwO1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgc2VyaWFsaXplZEV4dGVuc2lvbnMgPSBzZXJpYWxpemVGZXRjaFBhcmFtZXRlcihib2R5LmV4dGVuc2lvbnMsIFwiRXh0ZW5zaW9ucyBtYXBcIik7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKHBhcnNlRXJyb3IpIHtcbiAgICAgICAgICAgIHJldHVybiB7IHBhcnNlRXJyb3I6IHBhcnNlRXJyb3IgfTtcbiAgICAgICAgfVxuICAgICAgICBhZGRRdWVyeVBhcmFtKFwiZXh0ZW5zaW9uc1wiLCBzZXJpYWxpemVkRXh0ZW5zaW9ucyk7XG4gICAgfVxuICAgIHZhciBmcmFnbWVudCA9IFwiXCIsIHByZUZyYWdtZW50ID0gY2hvc2VuVVJJO1xuICAgIHZhciBmcmFnbWVudFN0YXJ0ID0gY2hvc2VuVVJJLmluZGV4T2YoXCIjXCIpO1xuICAgIGlmIChmcmFnbWVudFN0YXJ0ICE9PSAtMSkge1xuICAgICAgICBmcmFnbWVudCA9IGNob3NlblVSSS5zdWJzdHIoZnJhZ21lbnRTdGFydCk7XG4gICAgICAgIHByZUZyYWdtZW50ID0gY2hvc2VuVVJJLnN1YnN0cigwLCBmcmFnbWVudFN0YXJ0KTtcbiAgICB9XG4gICAgdmFyIHF1ZXJ5UGFyYW1zUHJlZml4ID0gcHJlRnJhZ21lbnQuaW5kZXhPZihcIj9cIikgPT09IC0xID8gXCI/XCIgOiBcIiZcIjtcbiAgICB2YXIgbmV3VVJJID0gcHJlRnJhZ21lbnQgKyBxdWVyeVBhcmFtc1ByZWZpeCArIHF1ZXJ5UGFyYW1zLmpvaW4oXCImXCIpICsgZnJhZ21lbnQ7XG4gICAgcmV0dXJuIHsgbmV3VVJJOiBuZXdVUkkgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJld3JpdGVVUklGb3JHRVQuanMubWFwIl0sIm5hbWVzIjpbInNlcmlhbGl6ZUZldGNoUGFyYW1ldGVyIiwicmV3cml0ZVVSSUZvckdFVCIsImNob3NlblVSSSIsImJvZHkiLCJxdWVyeVBhcmFtcyIsImFkZFF1ZXJ5UGFyYW0iLCJrZXkiLCJ2YWx1ZSIsInB1c2giLCJjb25jYXQiLCJlbmNvZGVVUklDb21wb25lbnQiLCJxdWVyeSIsIm9wZXJhdGlvbk5hbWUiLCJ2YXJpYWJsZXMiLCJzZXJpYWxpemVkVmFyaWFibGVzIiwicGFyc2VFcnJvciIsImV4dGVuc2lvbnMiLCJzZXJpYWxpemVkRXh0ZW5zaW9ucyIsImZyYWdtZW50IiwicHJlRnJhZ21lbnQiLCJmcmFnbWVudFN0YXJ0IiwiaW5kZXhPZiIsInN1YnN0ciIsInF1ZXJ5UGFyYW1zUHJlZml4IiwibmV3VVJJIiwiam9pbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/link/http/rewriteURIForGET.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/link/http/selectHttpOptionsAndBody.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@apollo/client/link/http/selectHttpOptionsAndBody.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defaultPrinter: () => (/* binding */ defaultPrinter),\n/* harmony export */   fallbackHttpConfig: () => (/* binding */ fallbackHttpConfig),\n/* harmony export */   selectHttpOptionsAndBody: () => (/* binding */ selectHttpOptionsAndBody),\n/* harmony export */   selectHttpOptionsAndBodyInternal: () => (/* binding */ selectHttpOptionsAndBodyInternal)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.mjs\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/graphql/print.js\");\n\n\nvar defaultHttpOptions = {\n    includeQuery: true,\n    includeExtensions: false,\n    preserveHeaderCase: false\n};\nvar defaultHeaders = {\n    accept: \"*/*\",\n    \"content-type\": \"application/json\"\n};\nvar defaultOptions = {\n    method: \"POST\"\n};\nvar fallbackHttpConfig = {\n    http: defaultHttpOptions,\n    headers: defaultHeaders,\n    options: defaultOptions\n};\nvar defaultPrinter = function(ast, printer) {\n    return printer(ast);\n};\nfunction selectHttpOptionsAndBody(operation, fallbackConfig) {\n    var configs = [];\n    for(var _i = 2; _i < arguments.length; _i++){\n        configs[_i - 2] = arguments[_i];\n    }\n    configs.unshift(fallbackConfig);\n    return selectHttpOptionsAndBodyInternal.apply(void 0, (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__spreadArray)([\n        operation,\n        defaultPrinter\n    ], configs, false));\n}\nfunction selectHttpOptionsAndBodyInternal(operation, printer) {\n    var configs = [];\n    for(var _i = 2; _i < arguments.length; _i++){\n        configs[_i - 2] = arguments[_i];\n    }\n    var options = {};\n    var http = {};\n    configs.forEach(function(config) {\n        options = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, options), config.options), {\n            headers: (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, options.headers), config.headers)\n        });\n        if (config.credentials) {\n            options.credentials = config.credentials;\n        }\n        http = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, http), config.http);\n    });\n    if (options.headers) {\n        options.headers = removeDuplicateHeaders(options.headers, http.preserveHeaderCase);\n    }\n    var operationName = operation.operationName, extensions = operation.extensions, variables = operation.variables, query = operation.query;\n    var body = {\n        operationName: operationName,\n        variables: variables\n    };\n    if (http.includeExtensions) body.extensions = extensions;\n    if (http.includeQuery) body.query = printer(query, _utilities_index_js__WEBPACK_IMPORTED_MODULE_1__.print);\n    return {\n        options: options,\n        body: body\n    };\n}\nfunction removeDuplicateHeaders(headers, preserveHeaderCase) {\n    if (!preserveHeaderCase) {\n        var normalizedHeaders_1 = Object.create(null);\n        Object.keys(Object(headers)).forEach(function(name) {\n            normalizedHeaders_1[name.toLowerCase()] = headers[name];\n        });\n        return normalizedHeaders_1;\n    }\n    var headerData = Object.create(null);\n    Object.keys(Object(headers)).forEach(function(name) {\n        headerData[name.toLowerCase()] = {\n            originalName: name,\n            value: headers[name]\n        };\n    });\n    var normalizedHeaders = Object.create(null);\n    Object.keys(headerData).forEach(function(name) {\n        normalizedHeaders[headerData[name].originalName] = headerData[name].value;\n    });\n    return normalizedHeaders;\n} //# sourceMappingURL=selectHttpOptionsAndBody.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/link/http/selectHttpOptionsAndBody.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/link/http/selectURI.js":
/*!************************************************************!*\
  !*** ./node_modules/@apollo/client/link/http/selectURI.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   selectURI: () => (/* binding */ selectURI)\n/* harmony export */ });\nvar selectURI = function(operation, fallbackURI) {\n    var context = operation.getContext();\n    var contextURI = context.uri;\n    if (contextURI) {\n        return contextURI;\n    } else if (typeof fallbackURI === \"function\") {\n        return fallbackURI(operation);\n    } else {\n        return fallbackURI || \"/graphql\";\n    }\n}; //# sourceMappingURL=selectURI.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFwb2xsby9jbGllbnQvbGluay9odHRwL3NlbGVjdFVSSS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU8sSUFBSUEsWUFBWSxTQUFVQyxTQUFTLEVBQUVDLFdBQVc7SUFDbkQsSUFBSUMsVUFBVUYsVUFBVUcsVUFBVTtJQUNsQyxJQUFJQyxhQUFhRixRQUFRRyxHQUFHO0lBQzVCLElBQUlELFlBQVk7UUFDWixPQUFPQTtJQUNYLE9BQ0ssSUFBSSxPQUFPSCxnQkFBZ0IsWUFBWTtRQUN4QyxPQUFPQSxZQUFZRDtJQUN2QixPQUNLO1FBQ0QsT0FBT0MsZUFBZTtJQUMxQjtBQUNKLEVBQUUsQ0FDRixxQ0FBcUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdXJuaS1hcHAvLi9ub2RlX21vZHVsZXMvQGFwb2xsby9jbGllbnQvbGluay9odHRwL3NlbGVjdFVSSS5qcz9mMGZhIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB2YXIgc2VsZWN0VVJJID0gZnVuY3Rpb24gKG9wZXJhdGlvbiwgZmFsbGJhY2tVUkkpIHtcbiAgICB2YXIgY29udGV4dCA9IG9wZXJhdGlvbi5nZXRDb250ZXh0KCk7XG4gICAgdmFyIGNvbnRleHRVUkkgPSBjb250ZXh0LnVyaTtcbiAgICBpZiAoY29udGV4dFVSSSkge1xuICAgICAgICByZXR1cm4gY29udGV4dFVSSTtcbiAgICB9XG4gICAgZWxzZSBpZiAodHlwZW9mIGZhbGxiYWNrVVJJID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgcmV0dXJuIGZhbGxiYWNrVVJJKG9wZXJhdGlvbik7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICByZXR1cm4gZmFsbGJhY2tVUkkgfHwgXCIvZ3JhcGhxbFwiO1xuICAgIH1cbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zZWxlY3RVUkkuanMubWFwIl0sIm5hbWVzIjpbInNlbGVjdFVSSSIsIm9wZXJhdGlvbiIsImZhbGxiYWNrVVJJIiwiY29udGV4dCIsImdldENvbnRleHQiLCJjb250ZXh0VVJJIiwidXJpIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/link/http/selectURI.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/link/http/serializeFetchParameter.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@apollo/client/link/http/serializeFetchParameter.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   serializeFetchParameter: () => (/* binding */ serializeFetchParameter)\n/* harmony export */ });\n/* harmony import */ var _utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utilities/globals/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/globals/index.js\");\n\nvar serializeFetchParameter = function(p, label) {\n    var serialized;\n    try {\n        serialized = JSON.stringify(p);\n    } catch (e) {\n        var parseError = (0,_utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.newInvariantError)(39, label, e.message);\n        parseError.parseError = e;\n        throw parseError;\n    }\n    return serialized;\n}; //# sourceMappingURL=serializeFetchParameter.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFwb2xsby9jbGllbnQvbGluay9odHRwL3NlcmlhbGl6ZUZldGNoUGFyYW1ldGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXFFO0FBQzlELElBQUlDLDBCQUEwQixTQUFVQyxDQUFDLEVBQUVDLEtBQUs7SUFDbkQsSUFBSUM7SUFDSixJQUFJO1FBQ0FBLGFBQWFDLEtBQUtDLFNBQVMsQ0FBQ0o7SUFDaEMsRUFDQSxPQUFPSyxHQUFHO1FBQ04sSUFBSUMsYUFBYVIsOEVBQWlCQSxDQUFDLElBQUlHLE9BQU9JLEVBQUVFLE9BQU87UUFDdkRELFdBQVdBLFVBQVUsR0FBR0Q7UUFDeEIsTUFBTUM7SUFDVjtJQUNBLE9BQU9KO0FBQ1gsRUFBRSxDQUNGLG1EQUFtRCIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1cm5pLWFwcC8uL25vZGVfbW9kdWxlcy9AYXBvbGxvL2NsaWVudC9saW5rL2h0dHAvc2VyaWFsaXplRmV0Y2hQYXJhbWV0ZXIuanM/YmQ2NyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBuZXdJbnZhcmlhbnRFcnJvciB9IGZyb20gXCIuLi8uLi91dGlsaXRpZXMvZ2xvYmFscy9pbmRleC5qc1wiO1xuZXhwb3J0IHZhciBzZXJpYWxpemVGZXRjaFBhcmFtZXRlciA9IGZ1bmN0aW9uIChwLCBsYWJlbCkge1xuICAgIHZhciBzZXJpYWxpemVkO1xuICAgIHRyeSB7XG4gICAgICAgIHNlcmlhbGl6ZWQgPSBKU09OLnN0cmluZ2lmeShwKTtcbiAgICB9XG4gICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgdmFyIHBhcnNlRXJyb3IgPSBuZXdJbnZhcmlhbnRFcnJvcigzOSwgbGFiZWwsIGUubWVzc2FnZSk7XG4gICAgICAgIHBhcnNlRXJyb3IucGFyc2VFcnJvciA9IGU7XG4gICAgICAgIHRocm93IHBhcnNlRXJyb3I7XG4gICAgfVxuICAgIHJldHVybiBzZXJpYWxpemVkO1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNlcmlhbGl6ZUZldGNoUGFyYW1ldGVyLmpzLm1hcCJdLCJuYW1lcyI6WyJuZXdJbnZhcmlhbnRFcnJvciIsInNlcmlhbGl6ZUZldGNoUGFyYW1ldGVyIiwicCIsImxhYmVsIiwic2VyaWFsaXplZCIsIkpTT04iLCJzdHJpbmdpZnkiLCJlIiwicGFyc2VFcnJvciIsIm1lc3NhZ2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/link/http/serializeFetchParameter.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/link/utils/createOperation.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@apollo/client/link/utils/createOperation.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createOperation: () => (/* binding */ createOperation)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.mjs\");\n\nfunction createOperation(starting, operation) {\n    var context = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, starting);\n    var setContext = function(next) {\n        if (typeof next === \"function\") {\n            context = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, context), next(context));\n        } else {\n            context = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, context), next);\n        }\n    };\n    var getContext = function() {\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, context);\n    };\n    Object.defineProperty(operation, \"setContext\", {\n        enumerable: false,\n        value: setContext\n    });\n    Object.defineProperty(operation, \"getContext\", {\n        enumerable: false,\n        value: getContext\n    });\n    return operation;\n} //# sourceMappingURL=createOperation.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFwb2xsby9jbGllbnQvbGluay91dGlscy9jcmVhdGVPcGVyYXRpb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBaUM7QUFDMUIsU0FBU0MsZ0JBQWdCQyxRQUFRLEVBQUVDLFNBQVM7SUFDL0MsSUFBSUMsVUFBVUosK0NBQVFBLENBQUMsQ0FBQyxHQUFHRTtJQUMzQixJQUFJRyxhQUFhLFNBQVVDLElBQUk7UUFDM0IsSUFBSSxPQUFPQSxTQUFTLFlBQVk7WUFDNUJGLFVBQVVKLCtDQUFRQSxDQUFDQSwrQ0FBUUEsQ0FBQyxDQUFDLEdBQUdJLFVBQVVFLEtBQUtGO1FBQ25ELE9BQ0s7WUFDREEsVUFBVUosK0NBQVFBLENBQUNBLCtDQUFRQSxDQUFDLENBQUMsR0FBR0ksVUFBVUU7UUFDOUM7SUFDSjtJQUNBLElBQUlDLGFBQWE7UUFBYyxPQUFRUCwrQ0FBUUEsQ0FBQyxDQUFDLEdBQUdJO0lBQVc7SUFDL0RJLE9BQU9DLGNBQWMsQ0FBQ04sV0FBVyxjQUFjO1FBQzNDTyxZQUFZO1FBQ1pDLE9BQU9OO0lBQ1g7SUFDQUcsT0FBT0MsY0FBYyxDQUFDTixXQUFXLGNBQWM7UUFDM0NPLFlBQVk7UUFDWkMsT0FBT0o7SUFDWDtJQUNBLE9BQU9KO0FBQ1gsRUFDQSwyQ0FBMkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdXJuaS1hcHAvLi9ub2RlX21vZHVsZXMvQGFwb2xsby9jbGllbnQvbGluay91dGlscy9jcmVhdGVPcGVyYXRpb24uanM/NTMxNCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBfX2Fzc2lnbiB9IGZyb20gXCJ0c2xpYlwiO1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZU9wZXJhdGlvbihzdGFydGluZywgb3BlcmF0aW9uKSB7XG4gICAgdmFyIGNvbnRleHQgPSBfX2Fzc2lnbih7fSwgc3RhcnRpbmcpO1xuICAgIHZhciBzZXRDb250ZXh0ID0gZnVuY3Rpb24gKG5leHQpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBuZXh0ID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgIGNvbnRleHQgPSBfX2Fzc2lnbihfX2Fzc2lnbih7fSwgY29udGV4dCksIG5leHQoY29udGV4dCkpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgY29udGV4dCA9IF9fYXNzaWduKF9fYXNzaWduKHt9LCBjb250ZXh0KSwgbmV4dCk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIHZhciBnZXRDb250ZXh0ID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gKF9fYXNzaWduKHt9LCBjb250ZXh0KSk7IH07XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9wZXJhdGlvbiwgXCJzZXRDb250ZXh0XCIsIHtcbiAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgIHZhbHVlOiBzZXRDb250ZXh0LFxuICAgIH0pO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvcGVyYXRpb24sIFwiZ2V0Q29udGV4dFwiLCB7XG4gICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgICB2YWx1ZTogZ2V0Q29udGV4dCxcbiAgICB9KTtcbiAgICByZXR1cm4gb3BlcmF0aW9uO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y3JlYXRlT3BlcmF0aW9uLmpzLm1hcCJdLCJuYW1lcyI6WyJfX2Fzc2lnbiIsImNyZWF0ZU9wZXJhdGlvbiIsInN0YXJ0aW5nIiwib3BlcmF0aW9uIiwiY29udGV4dCIsInNldENvbnRleHQiLCJuZXh0IiwiZ2V0Q29udGV4dCIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsInZhbHVlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/link/utils/createOperation.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/link/utils/filterOperationVariables.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@apollo/client/link/utils/filterOperationVariables.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   filterOperationVariables: () => (/* binding */ filterOperationVariables)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/./node_modules/graphql/language/visitor.mjs\");\n\n\nfunction filterOperationVariables(variables, query) {\n    var result = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, variables);\n    var unusedNames = new Set(Object.keys(variables));\n    (0,graphql__WEBPACK_IMPORTED_MODULE_1__.visit)(query, {\n        Variable: function(node, _key, parent) {\n            if (parent && parent.kind !== \"VariableDefinition\") {\n                unusedNames.delete(node.name.value);\n            }\n        }\n    });\n    unusedNames.forEach(function(name) {\n        delete result[name];\n    });\n    return result;\n} //# sourceMappingURL=filterOperationVariables.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFwb2xsby9jbGllbnQvbGluay91dGlscy9maWx0ZXJPcGVyYXRpb25WYXJpYWJsZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWlDO0FBQ0Q7QUFDekIsU0FBU0UseUJBQXlCQyxTQUFTLEVBQUVDLEtBQUs7SUFDckQsSUFBSUMsU0FBU0wsK0NBQVFBLENBQUMsQ0FBQyxHQUFHRztJQUMxQixJQUFJRyxjQUFjLElBQUlDLElBQUlDLE9BQU9DLElBQUksQ0FBQ047SUFDdENGLDhDQUFLQSxDQUFDRyxPQUFPO1FBQ1RNLFVBQVUsU0FBVUMsSUFBSSxFQUFFQyxJQUFJLEVBQUVDLE1BQU07WUFDbEMsSUFBSUEsVUFDQUEsT0FBT0MsSUFBSSxLQUFLLHNCQUFzQjtnQkFDdENSLFlBQVlTLE1BQU0sQ0FBQ0osS0FBS0ssSUFBSSxDQUFDQyxLQUFLO1lBQ3RDO1FBQ0o7SUFDSjtJQUNBWCxZQUFZWSxPQUFPLENBQUMsU0FBVUYsSUFBSTtRQUM5QixPQUFPWCxNQUFNLENBQUNXLEtBQUs7SUFDdkI7SUFDQSxPQUFPWDtBQUNYLEVBQ0Esb0RBQW9EIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVybmktYXBwLy4vbm9kZV9tb2R1bGVzL0BhcG9sbG8vY2xpZW50L2xpbmsvdXRpbHMvZmlsdGVyT3BlcmF0aW9uVmFyaWFibGVzLmpzPzhhY2UiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgX19hc3NpZ24gfSBmcm9tIFwidHNsaWJcIjtcbmltcG9ydCB7IHZpc2l0IH0gZnJvbSBcImdyYXBocWxcIjtcbmV4cG9ydCBmdW5jdGlvbiBmaWx0ZXJPcGVyYXRpb25WYXJpYWJsZXModmFyaWFibGVzLCBxdWVyeSkge1xuICAgIHZhciByZXN1bHQgPSBfX2Fzc2lnbih7fSwgdmFyaWFibGVzKTtcbiAgICB2YXIgdW51c2VkTmFtZXMgPSBuZXcgU2V0KE9iamVjdC5rZXlzKHZhcmlhYmxlcykpO1xuICAgIHZpc2l0KHF1ZXJ5LCB7XG4gICAgICAgIFZhcmlhYmxlOiBmdW5jdGlvbiAobm9kZSwgX2tleSwgcGFyZW50KSB7XG4gICAgICAgICAgICBpZiAocGFyZW50ICYmXG4gICAgICAgICAgICAgICAgcGFyZW50LmtpbmQgIT09IFwiVmFyaWFibGVEZWZpbml0aW9uXCIpIHtcbiAgICAgICAgICAgICAgICB1bnVzZWROYW1lcy5kZWxldGUobm9kZS5uYW1lLnZhbHVlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICB9KTtcbiAgICB1bnVzZWROYW1lcy5mb3JFYWNoKGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgICAgIGRlbGV0ZSByZXN1bHRbbmFtZV07XG4gICAgfSk7XG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWZpbHRlck9wZXJhdGlvblZhcmlhYmxlcy5qcy5tYXAiXSwibmFtZXMiOlsiX19hc3NpZ24iLCJ2aXNpdCIsImZpbHRlck9wZXJhdGlvblZhcmlhYmxlcyIsInZhcmlhYmxlcyIsInF1ZXJ5IiwicmVzdWx0IiwidW51c2VkTmFtZXMiLCJTZXQiLCJPYmplY3QiLCJrZXlzIiwiVmFyaWFibGUiLCJub2RlIiwiX2tleSIsInBhcmVudCIsImtpbmQiLCJkZWxldGUiLCJuYW1lIiwidmFsdWUiLCJmb3JFYWNoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/link/utils/filterOperationVariables.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/link/utils/fromError.js":
/*!*************************************************************!*\
  !*** ./node_modules/@apollo/client/link/utils/fromError.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fromError: () => (/* binding */ fromError)\n/* harmony export */ });\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utilities/index.js */ \"(ssr)/./node_modules/zen-observable-ts/module.js\");\n\nfunction fromError(errorValue) {\n    return new _utilities_index_js__WEBPACK_IMPORTED_MODULE_0__.Observable(function(observer) {\n        observer.error(errorValue);\n    });\n} //# sourceMappingURL=fromError.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFwb2xsby9jbGllbnQvbGluay91dGlscy9mcm9tRXJyb3IuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBc0Q7QUFDL0MsU0FBU0MsVUFBVUMsVUFBVTtJQUNoQyxPQUFPLElBQUlGLDJEQUFVQSxDQUFDLFNBQVVHLFFBQVE7UUFDcENBLFNBQVNDLEtBQUssQ0FBQ0Y7SUFDbkI7QUFDSixFQUNBLHFDQUFxQyIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1cm5pLWFwcC8uL25vZGVfbW9kdWxlcy9AYXBvbGxvL2NsaWVudC9saW5rL3V0aWxzL2Zyb21FcnJvci5qcz84ZTI3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tIFwiLi4vLi4vdXRpbGl0aWVzL2luZGV4LmpzXCI7XG5leHBvcnQgZnVuY3Rpb24gZnJvbUVycm9yKGVycm9yVmFsdWUpIHtcbiAgICByZXR1cm4gbmV3IE9ic2VydmFibGUoZnVuY3Rpb24gKG9ic2VydmVyKSB7XG4gICAgICAgIG9ic2VydmVyLmVycm9yKGVycm9yVmFsdWUpO1xuICAgIH0pO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZnJvbUVycm9yLmpzLm1hcCJdLCJuYW1lcyI6WyJPYnNlcnZhYmxlIiwiZnJvbUVycm9yIiwiZXJyb3JWYWx1ZSIsIm9ic2VydmVyIiwiZXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/link/utils/fromError.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/link/utils/throwServerError.js":
/*!********************************************************************!*\
  !*** ./node_modules/@apollo/client/link/utils/throwServerError.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   throwServerError: () => (/* binding */ throwServerError)\n/* harmony export */ });\nvar throwServerError = function(response, result, message) {\n    var error = new Error(message);\n    error.name = \"ServerError\";\n    error.response = response;\n    error.statusCode = response.status;\n    error.result = result;\n    throw error;\n}; //# sourceMappingURL=throwServerError.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFwb2xsby9jbGllbnQvbGluay91dGlscy90aHJvd1NlcnZlckVycm9yLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTyxJQUFJQSxtQkFBbUIsU0FBVUMsUUFBUSxFQUFFQyxNQUFNLEVBQUVDLE9BQU87SUFDN0QsSUFBSUMsUUFBUSxJQUFJQyxNQUFNRjtJQUN0QkMsTUFBTUUsSUFBSSxHQUFHO0lBQ2JGLE1BQU1ILFFBQVEsR0FBR0E7SUFDakJHLE1BQU1HLFVBQVUsR0FBR04sU0FBU08sTUFBTTtJQUNsQ0osTUFBTUYsTUFBTSxHQUFHQTtJQUNmLE1BQU1FO0FBQ1YsRUFBRSxDQUNGLDRDQUE0QyIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1cm5pLWFwcC8uL25vZGVfbW9kdWxlcy9AYXBvbGxvL2NsaWVudC9saW5rL3V0aWxzL3Rocm93U2VydmVyRXJyb3IuanM/NDllZCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgdmFyIHRocm93U2VydmVyRXJyb3IgPSBmdW5jdGlvbiAocmVzcG9uc2UsIHJlc3VsdCwgbWVzc2FnZSkge1xuICAgIHZhciBlcnJvciA9IG5ldyBFcnJvcihtZXNzYWdlKTtcbiAgICBlcnJvci5uYW1lID0gXCJTZXJ2ZXJFcnJvclwiO1xuICAgIGVycm9yLnJlc3BvbnNlID0gcmVzcG9uc2U7XG4gICAgZXJyb3Iuc3RhdHVzQ29kZSA9IHJlc3BvbnNlLnN0YXR1cztcbiAgICBlcnJvci5yZXN1bHQgPSByZXN1bHQ7XG4gICAgdGhyb3cgZXJyb3I7XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dGhyb3dTZXJ2ZXJFcnJvci5qcy5tYXAiXSwibmFtZXMiOlsidGhyb3dTZXJ2ZXJFcnJvciIsInJlc3BvbnNlIiwicmVzdWx0IiwibWVzc2FnZSIsImVycm9yIiwiRXJyb3IiLCJuYW1lIiwic3RhdHVzQ29kZSIsInN0YXR1cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/link/utils/throwServerError.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/link/utils/transformOperation.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@apollo/client/link/utils/transformOperation.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   transformOperation: () => (/* binding */ transformOperation)\n/* harmony export */ });\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/graphql/getFromAST.js\");\n\nfunction transformOperation(operation) {\n    var transformedOperation = {\n        variables: operation.variables || {},\n        extensions: operation.extensions || {},\n        operationName: operation.operationName,\n        query: operation.query\n    };\n    if (!transformedOperation.operationName) {\n        transformedOperation.operationName = typeof transformedOperation.query !== \"string\" ? (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_0__.getOperationName)(transformedOperation.query) || undefined : \"\";\n    }\n    return transformedOperation;\n} //# sourceMappingURL=transformOperation.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFwb2xsby9jbGllbnQvbGluay91dGlscy90cmFuc2Zvcm1PcGVyYXRpb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBNEQ7QUFDckQsU0FBU0MsbUJBQW1CQyxTQUFTO0lBQ3hDLElBQUlDLHVCQUF1QjtRQUN2QkMsV0FBV0YsVUFBVUUsU0FBUyxJQUFJLENBQUM7UUFDbkNDLFlBQVlILFVBQVVHLFVBQVUsSUFBSSxDQUFDO1FBQ3JDQyxlQUFlSixVQUFVSSxhQUFhO1FBQ3RDQyxPQUFPTCxVQUFVSyxLQUFLO0lBQzFCO0lBQ0EsSUFBSSxDQUFDSixxQkFBcUJHLGFBQWEsRUFBRTtRQUNyQ0gscUJBQXFCRyxhQUFhLEdBQzlCLE9BQU9ILHFCQUFxQkksS0FBSyxLQUFLLFdBQ2hDUCxxRUFBZ0JBLENBQUNHLHFCQUFxQkksS0FBSyxLQUFLQyxZQUNoRDtJQUNkO0lBQ0EsT0FBT0w7QUFDWCxFQUNBLDhDQUE4QyIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1cm5pLWFwcC8uL25vZGVfbW9kdWxlcy9AYXBvbGxvL2NsaWVudC9saW5rL3V0aWxzL3RyYW5zZm9ybU9wZXJhdGlvbi5qcz9lYTEwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldE9wZXJhdGlvbk5hbWUgfSBmcm9tIFwiLi4vLi4vdXRpbGl0aWVzL2luZGV4LmpzXCI7XG5leHBvcnQgZnVuY3Rpb24gdHJhbnNmb3JtT3BlcmF0aW9uKG9wZXJhdGlvbikge1xuICAgIHZhciB0cmFuc2Zvcm1lZE9wZXJhdGlvbiA9IHtcbiAgICAgICAgdmFyaWFibGVzOiBvcGVyYXRpb24udmFyaWFibGVzIHx8IHt9LFxuICAgICAgICBleHRlbnNpb25zOiBvcGVyYXRpb24uZXh0ZW5zaW9ucyB8fCB7fSxcbiAgICAgICAgb3BlcmF0aW9uTmFtZTogb3BlcmF0aW9uLm9wZXJhdGlvbk5hbWUsXG4gICAgICAgIHF1ZXJ5OiBvcGVyYXRpb24ucXVlcnksXG4gICAgfTtcbiAgICBpZiAoIXRyYW5zZm9ybWVkT3BlcmF0aW9uLm9wZXJhdGlvbk5hbWUpIHtcbiAgICAgICAgdHJhbnNmb3JtZWRPcGVyYXRpb24ub3BlcmF0aW9uTmFtZSA9XG4gICAgICAgICAgICB0eXBlb2YgdHJhbnNmb3JtZWRPcGVyYXRpb24ucXVlcnkgIT09IFwic3RyaW5nXCJcbiAgICAgICAgICAgICAgICA/IGdldE9wZXJhdGlvbk5hbWUodHJhbnNmb3JtZWRPcGVyYXRpb24ucXVlcnkpIHx8IHVuZGVmaW5lZFxuICAgICAgICAgICAgICAgIDogXCJcIjtcbiAgICB9XG4gICAgcmV0dXJuIHRyYW5zZm9ybWVkT3BlcmF0aW9uO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHJhbnNmb3JtT3BlcmF0aW9uLmpzLm1hcCJdLCJuYW1lcyI6WyJnZXRPcGVyYXRpb25OYW1lIiwidHJhbnNmb3JtT3BlcmF0aW9uIiwib3BlcmF0aW9uIiwidHJhbnNmb3JtZWRPcGVyYXRpb24iLCJ2YXJpYWJsZXMiLCJleHRlbnNpb25zIiwib3BlcmF0aW9uTmFtZSIsInF1ZXJ5IiwidW5kZWZpbmVkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/link/utils/transformOperation.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/link/utils/validateOperation.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@apollo/client/link/utils/validateOperation.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   validateOperation: () => (/* binding */ validateOperation)\n/* harmony export */ });\n/* harmony import */ var _utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utilities/globals/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/globals/index.js\");\n\nfunction validateOperation(operation) {\n    var OPERATION_FIELDS = [\n        \"query\",\n        \"operationName\",\n        \"variables\",\n        \"extensions\",\n        \"context\"\n    ];\n    for(var _i = 0, _a = Object.keys(operation); _i < _a.length; _i++){\n        var key = _a[_i];\n        if (OPERATION_FIELDS.indexOf(key) < 0) {\n            throw (0,_utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.newInvariantError)(43, key);\n        }\n    }\n    return operation;\n} //# sourceMappingURL=validateOperation.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFwb2xsby9jbGllbnQvbGluay91dGlscy92YWxpZGF0ZU9wZXJhdGlvbi5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFxRTtBQUM5RCxTQUFTQyxrQkFBa0JDLFNBQVM7SUFDdkMsSUFBSUMsbUJBQW1CO1FBQ25CO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7S0FDSDtJQUNELElBQUssSUFBSUMsS0FBSyxHQUFHQyxLQUFLQyxPQUFPQyxJQUFJLENBQUNMLFlBQVlFLEtBQUtDLEdBQUdHLE1BQU0sRUFBRUosS0FBTTtRQUNoRSxJQUFJSyxNQUFNSixFQUFFLENBQUNELEdBQUc7UUFDaEIsSUFBSUQsaUJBQWlCTyxPQUFPLENBQUNELE9BQU8sR0FBRztZQUNuQyxNQUFNVCw4RUFBaUJBLENBQUMsSUFBSVM7UUFDaEM7SUFDSjtJQUNBLE9BQU9QO0FBQ1gsRUFDQSw2Q0FBNkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdXJuaS1hcHAvLi9ub2RlX21vZHVsZXMvQGFwb2xsby9jbGllbnQvbGluay91dGlscy92YWxpZGF0ZU9wZXJhdGlvbi5qcz8wZjA4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG5ld0ludmFyaWFudEVycm9yIH0gZnJvbSBcIi4uLy4uL3V0aWxpdGllcy9nbG9iYWxzL2luZGV4LmpzXCI7XG5leHBvcnQgZnVuY3Rpb24gdmFsaWRhdGVPcGVyYXRpb24ob3BlcmF0aW9uKSB7XG4gICAgdmFyIE9QRVJBVElPTl9GSUVMRFMgPSBbXG4gICAgICAgIFwicXVlcnlcIixcbiAgICAgICAgXCJvcGVyYXRpb25OYW1lXCIsXG4gICAgICAgIFwidmFyaWFibGVzXCIsXG4gICAgICAgIFwiZXh0ZW5zaW9uc1wiLFxuICAgICAgICBcImNvbnRleHRcIixcbiAgICBdO1xuICAgIGZvciAodmFyIF9pID0gMCwgX2EgPSBPYmplY3Qua2V5cyhvcGVyYXRpb24pOyBfaSA8IF9hLmxlbmd0aDsgX2krKykge1xuICAgICAgICB2YXIga2V5ID0gX2FbX2ldO1xuICAgICAgICBpZiAoT1BFUkFUSU9OX0ZJRUxEUy5pbmRleE9mKGtleSkgPCAwKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXdJbnZhcmlhbnRFcnJvcig0Mywga2V5KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gb3BlcmF0aW9uO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dmFsaWRhdGVPcGVyYXRpb24uanMubWFwIl0sIm5hbWVzIjpbIm5ld0ludmFyaWFudEVycm9yIiwidmFsaWRhdGVPcGVyYXRpb24iLCJvcGVyYXRpb24iLCJPUEVSQVRJT05fRklFTERTIiwiX2kiLCJfYSIsIk9iamVjdCIsImtleXMiLCJsZW5ndGgiLCJrZXkiLCJpbmRleE9mIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/link/utils/validateOperation.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/react/context/ApolloContext.js":
/*!********************************************************************!*\
  !*** ./node_modules/@apollo/client/react/context/ApolloContext.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("var react__WEBPACK_IMPORTED_MODULE_0___namespace_cache;\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getApolloContext: () => (/* binding */ getApolloContext),\n/* harmony export */   resetApolloContext: () => (/* binding */ resetApolloContext)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/common/canUse.js\");\n/* harmony import */ var _utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utilities/globals/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/globals/index.js\");\n\n\n\nvar contextKey = _utilities_index_js__WEBPACK_IMPORTED_MODULE_2__.canUseSymbol ? Symbol.for(\"__APOLLO_CONTEXT__\") : \"__APOLLO_CONTEXT__\";\nfunction getApolloContext() {\n    (0,_utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_1__.invariant)(\"createContext\" in /*#__PURE__*/ (react__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (react__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(react__WEBPACK_IMPORTED_MODULE_0__, 2))), 45);\n    var context = react__WEBPACK_IMPORTED_MODULE_0__.createContext[contextKey];\n    if (!context) {\n        Object.defineProperty(react__WEBPACK_IMPORTED_MODULE_0__.createContext, contextKey, {\n            value: context = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createContext({}),\n            enumerable: false,\n            writable: false,\n            configurable: true\n        });\n        context.displayName = \"ApolloContext\";\n    }\n    return context;\n}\nvar resetApolloContext = getApolloContext; //# sourceMappingURL=ApolloContext.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFwb2xsby9jbGllbnQvcmVhY3QvY29udGV4dC9BcG9sbG9Db250ZXh0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUErQjtBQUN5QjtBQUNLO0FBQzdELElBQUlHLGFBQWFGLDZEQUFZQSxHQUN2QkcsT0FBT0MsR0FBRyxDQUFDLHdCQUNYO0FBQ0MsU0FBU0M7SUFDWkosc0VBQVNBLENBQUMsNE1BQXdCRixFQUFFO0lBQ3BDLElBQUlPLFVBQVVQLGdEQUFtQixDQUFDRyxXQUFXO0lBQzdDLElBQUksQ0FBQ0ksU0FBUztRQUNWRSxPQUFPQyxjQUFjLENBQUNWLGdEQUFtQixFQUFFRyxZQUFZO1lBQ25EUSxPQUFRSix3QkFBVVAsZ0RBQW1CLENBQUMsQ0FBQztZQUN2Q1ksWUFBWTtZQUNaQyxVQUFVO1lBQ1ZDLGNBQWM7UUFDbEI7UUFDQVAsUUFBUVEsV0FBVyxHQUFHO0lBQzFCO0lBQ0EsT0FBT1I7QUFDWDtBQUNPLElBQUlTLHFCQUFxQlYsaUJBQWlCLENBQ2pELHlDQUF5QyIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1cm5pLWFwcC8uL25vZGVfbW9kdWxlcy9AYXBvbGxvL2NsaWVudC9yZWFjdC9jb250ZXh0L0Fwb2xsb0NvbnRleHQuanM/ZmM4NCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IGNhblVzZVN5bWJvbCB9IGZyb20gXCIuLi8uLi91dGlsaXRpZXMvaW5kZXguanNcIjtcbmltcG9ydCB7IGludmFyaWFudCB9IGZyb20gXCIuLi8uLi91dGlsaXRpZXMvZ2xvYmFscy9pbmRleC5qc1wiO1xudmFyIGNvbnRleHRLZXkgPSBjYW5Vc2VTeW1ib2xcbiAgICA/IFN5bWJvbC5mb3IoXCJfX0FQT0xMT19DT05URVhUX19cIilcbiAgICA6IFwiX19BUE9MTE9fQ09OVEVYVF9fXCI7XG5leHBvcnQgZnVuY3Rpb24gZ2V0QXBvbGxvQ29udGV4dCgpIHtcbiAgICBpbnZhcmlhbnQoXCJjcmVhdGVDb250ZXh0XCIgaW4gUmVhY3QsIDQ1KTtcbiAgICB2YXIgY29udGV4dCA9IFJlYWN0LmNyZWF0ZUNvbnRleHRbY29udGV4dEtleV07XG4gICAgaWYgKCFjb250ZXh0KSB7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShSZWFjdC5jcmVhdGVDb250ZXh0LCBjb250ZXh0S2V5LCB7XG4gICAgICAgICAgICB2YWx1ZTogKGNvbnRleHQgPSBSZWFjdC5jcmVhdGVDb250ZXh0KHt9KSksXG4gICAgICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiBmYWxzZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgfSk7XG4gICAgICAgIGNvbnRleHQuZGlzcGxheU5hbWUgPSBcIkFwb2xsb0NvbnRleHRcIjtcbiAgICB9XG4gICAgcmV0dXJuIGNvbnRleHQ7XG59XG5leHBvcnQgdmFyIHJlc2V0QXBvbGxvQ29udGV4dCA9IGdldEFwb2xsb0NvbnRleHQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1BcG9sbG9Db250ZXh0LmpzLm1hcCJdLCJuYW1lcyI6WyJSZWFjdCIsImNhblVzZVN5bWJvbCIsImludmFyaWFudCIsImNvbnRleHRLZXkiLCJTeW1ib2wiLCJmb3IiLCJnZXRBcG9sbG9Db250ZXh0IiwiY29udGV4dCIsImNyZWF0ZUNvbnRleHQiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsInZhbHVlIiwiZW51bWVyYWJsZSIsIndyaXRhYmxlIiwiY29uZmlndXJhYmxlIiwiZGlzcGxheU5hbWUiLCJyZXNldEFwb2xsb0NvbnRleHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/react/context/ApolloContext.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/react/context/ApolloProvider.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@apollo/client/react/context/ApolloProvider.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ApolloProvider: () => (/* binding */ ApolloProvider)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.mjs\");\n/* harmony import */ var _utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utilities/globals/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/globals/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _ApolloContext_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ApolloContext.js */ \"(ssr)/./node_modules/@apollo/client/react/context/ApolloContext.js\");\n\n\n\n\nvar ApolloProvider = function(_a) {\n    var client = _a.client, children = _a.children;\n    var ApolloContext = (0,_ApolloContext_js__WEBPACK_IMPORTED_MODULE_2__.getApolloContext)();\n    var parentContext = react__WEBPACK_IMPORTED_MODULE_1__.useContext(ApolloContext);\n    var context = react__WEBPACK_IMPORTED_MODULE_1__.useMemo(function() {\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({}, parentContext), {\n            client: client || parentContext.client\n        });\n    }, [\n        parentContext,\n        client\n    ]);\n    (0,_utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.invariant)(context.client, 46);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createElement(ApolloContext.Provider, {\n        value: context\n    }, children);\n}; //# sourceMappingURL=ApolloProvider.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFwb2xsby9jbGllbnQvcmVhY3QvY29udGV4dC9BcG9sbG9Qcm92aWRlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFpQztBQUM0QjtBQUM5QjtBQUN1QjtBQUMvQyxJQUFJSSxpQkFBaUIsU0FBVUMsRUFBRTtJQUNwQyxJQUFJQyxTQUFTRCxHQUFHQyxNQUFNLEVBQUVDLFdBQVdGLEdBQUdFLFFBQVE7SUFDOUMsSUFBSUMsZ0JBQWdCTCxtRUFBZ0JBO0lBQ3BDLElBQUlNLGdCQUFnQlAsNkNBQWdCLENBQUNNO0lBQ3JDLElBQUlHLFVBQVVULDBDQUFhLENBQUM7UUFDeEIsT0FBT0YsK0NBQVFBLENBQUNBLCtDQUFRQSxDQUFDLENBQUMsR0FBR1MsZ0JBQWdCO1lBQUVILFFBQVFBLFVBQVVHLGNBQWNILE1BQU07UUFBQztJQUMxRixHQUFHO1FBQUNHO1FBQWVIO0tBQU87SUFDMUJMLHNFQUFTQSxDQUFDVSxRQUFRTCxNQUFNLEVBQUU7SUFDMUIscUJBQVFKLGdEQUFtQixDQUFDTSxjQUFjTSxRQUFRLEVBQUU7UUFBRUMsT0FBT0o7SUFBUSxHQUFHSjtBQUM1RSxFQUFFLENBQ0YsMENBQTBDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVybmktYXBwLy4vbm9kZV9tb2R1bGVzL0BhcG9sbG8vY2xpZW50L3JlYWN0L2NvbnRleHQvQXBvbGxvUHJvdmlkZXIuanM/ZTkyYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBfX2Fzc2lnbiB9IGZyb20gXCJ0c2xpYlwiO1xuaW1wb3J0IHsgaW52YXJpYW50IH0gZnJvbSBcIi4uLy4uL3V0aWxpdGllcy9nbG9iYWxzL2luZGV4LmpzXCI7XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IGdldEFwb2xsb0NvbnRleHQgfSBmcm9tIFwiLi9BcG9sbG9Db250ZXh0LmpzXCI7XG5leHBvcnQgdmFyIEFwb2xsb1Byb3ZpZGVyID0gZnVuY3Rpb24gKF9hKSB7XG4gICAgdmFyIGNsaWVudCA9IF9hLmNsaWVudCwgY2hpbGRyZW4gPSBfYS5jaGlsZHJlbjtcbiAgICB2YXIgQXBvbGxvQ29udGV4dCA9IGdldEFwb2xsb0NvbnRleHQoKTtcbiAgICB2YXIgcGFyZW50Q29udGV4dCA9IFJlYWN0LnVzZUNvbnRleHQoQXBvbGxvQ29udGV4dCk7XG4gICAgdmFyIGNvbnRleHQgPSBSZWFjdC51c2VNZW1vKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIF9fYXNzaWduKF9fYXNzaWduKHt9LCBwYXJlbnRDb250ZXh0KSwgeyBjbGllbnQ6IGNsaWVudCB8fCBwYXJlbnRDb250ZXh0LmNsaWVudCB9KTtcbiAgICB9LCBbcGFyZW50Q29udGV4dCwgY2xpZW50XSk7XG4gICAgaW52YXJpYW50KGNvbnRleHQuY2xpZW50LCA0Nik7XG4gICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KEFwb2xsb0NvbnRleHQuUHJvdmlkZXIsIHsgdmFsdWU6IGNvbnRleHQgfSwgY2hpbGRyZW4pKTtcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1BcG9sbG9Qcm92aWRlci5qcy5tYXAiXSwibmFtZXMiOlsiX19hc3NpZ24iLCJpbnZhcmlhbnQiLCJSZWFjdCIsImdldEFwb2xsb0NvbnRleHQiLCJBcG9sbG9Qcm92aWRlciIsIl9hIiwiY2xpZW50IiwiY2hpbGRyZW4iLCJBcG9sbG9Db250ZXh0IiwicGFyZW50Q29udGV4dCIsInVzZUNvbnRleHQiLCJjb250ZXh0IiwidXNlTWVtbyIsImNyZWF0ZUVsZW1lbnQiLCJQcm92aWRlciIsInZhbHVlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/react/context/ApolloProvider.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/react/hooks/useApolloClient.js":
/*!********************************************************************!*\
  !*** ./node_modules/@apollo/client/react/hooks/useApolloClient.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useApolloClient: () => (/* binding */ useApolloClient)\n/* harmony export */ });\n/* harmony import */ var _utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utilities/globals/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/globals/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _context_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../context/index.js */ \"(ssr)/./node_modules/@apollo/client/react/context/ApolloContext.js\");\n\n\n\nfunction useApolloClient(override) {\n    var context = react__WEBPACK_IMPORTED_MODULE_1__.useContext((0,_context_index_js__WEBPACK_IMPORTED_MODULE_2__.getApolloContext)());\n    var client = override || context.client;\n    (0,_utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.invariant)(!!client, 49);\n    return client;\n} //# sourceMappingURL=useApolloClient.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFwb2xsby9jbGllbnQvcmVhY3QvaG9va3MvdXNlQXBvbGxvQ2xpZW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBNkQ7QUFDOUI7QUFDd0I7QUFDaEQsU0FBU0csZ0JBQWdCQyxRQUFRO0lBQ3BDLElBQUlDLFVBQVVKLDZDQUFnQixDQUFDQyxtRUFBZ0JBO0lBQy9DLElBQUlLLFNBQVNILFlBQVlDLFFBQVFFLE1BQU07SUFDdkNQLHNFQUFTQSxDQUFDLENBQUMsQ0FBQ08sUUFBUTtJQUNwQixPQUFPQTtBQUNYLEVBQ0EsMkNBQTJDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVybmktYXBwLy4vbm9kZV9tb2R1bGVzL0BhcG9sbG8vY2xpZW50L3JlYWN0L2hvb2tzL3VzZUFwb2xsb0NsaWVudC5qcz80M2NjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGludmFyaWFudCB9IGZyb20gXCIuLi8uLi91dGlsaXRpZXMvZ2xvYmFscy9pbmRleC5qc1wiO1xuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBnZXRBcG9sbG9Db250ZXh0IH0gZnJvbSBcIi4uL2NvbnRleHQvaW5kZXguanNcIjtcbmV4cG9ydCBmdW5jdGlvbiB1c2VBcG9sbG9DbGllbnQob3ZlcnJpZGUpIHtcbiAgICB2YXIgY29udGV4dCA9IFJlYWN0LnVzZUNvbnRleHQoZ2V0QXBvbGxvQ29udGV4dCgpKTtcbiAgICB2YXIgY2xpZW50ID0gb3ZlcnJpZGUgfHwgY29udGV4dC5jbGllbnQ7XG4gICAgaW52YXJpYW50KCEhY2xpZW50LCA0OSk7XG4gICAgcmV0dXJuIGNsaWVudDtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXVzZUFwb2xsb0NsaWVudC5qcy5tYXAiXSwibmFtZXMiOlsiaW52YXJpYW50IiwiUmVhY3QiLCJnZXRBcG9sbG9Db250ZXh0IiwidXNlQXBvbGxvQ2xpZW50Iiwib3ZlcnJpZGUiLCJjb250ZXh0IiwidXNlQ29udGV4dCIsImNsaWVudCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/react/hooks/useApolloClient.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/react/hooks/useMutation.js":
/*!****************************************************************!*\
  !*** ./node_modules/@apollo/client/react/hooks/useMutation.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useMutation: () => (/* binding */ useMutation)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/common/mergeOptions.js\");\n/* harmony import */ var _wry_equality__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @wry/equality */ \"(ssr)/./node_modules/@wry/equality/lib/index.js\");\n/* harmony import */ var _parser_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../parser/index.js */ \"(ssr)/./node_modules/@apollo/client/react/parser/index.js\");\n/* harmony import */ var _errors_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../errors/index.js */ \"(ssr)/./node_modules/@apollo/client/errors/index.js\");\n/* harmony import */ var _useApolloClient_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./useApolloClient.js */ \"(ssr)/./node_modules/@apollo/client/react/hooks/useApolloClient.js\");\n\n\n\n\n\n\n\nfunction useMutation(mutation, options) {\n    var client = (0,_useApolloClient_js__WEBPACK_IMPORTED_MODULE_2__.useApolloClient)(options === null || options === void 0 ? void 0 : options.client);\n    (0,_parser_index_js__WEBPACK_IMPORTED_MODULE_3__.verifyDocumentType)(mutation, _parser_index_js__WEBPACK_IMPORTED_MODULE_3__.DocumentType.Mutation);\n    var _a = react__WEBPACK_IMPORTED_MODULE_0__.useState({\n        called: false,\n        loading: false,\n        client: client\n    }), result = _a[0], setResult = _a[1];\n    var ref = react__WEBPACK_IMPORTED_MODULE_0__.useRef({\n        result: result,\n        mutationId: 0,\n        isMounted: true,\n        client: client,\n        mutation: mutation,\n        options: options\n    });\n    {\n        Object.assign(ref.current, {\n            client: client,\n            options: options,\n            mutation: mutation\n        });\n    }\n    var execute = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function(executeOptions) {\n        if (executeOptions === void 0) {\n            executeOptions = {};\n        }\n        var _a = ref.current, options = _a.options, mutation = _a.mutation;\n        var baseOptions = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, options), {\n            mutation: mutation\n        });\n        var client = executeOptions.client || ref.current.client;\n        if (!ref.current.result.loading && !baseOptions.ignoreResults && ref.current.isMounted) {\n            setResult(ref.current.result = {\n                loading: true,\n                error: void 0,\n                data: void 0,\n                called: true,\n                client: client\n            });\n        }\n        var mutationId = ++ref.current.mutationId;\n        var clientOptions = (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_5__.mergeOptions)(baseOptions, executeOptions);\n        return client.mutate(clientOptions).then(function(response) {\n            var _a, _b;\n            var data = response.data, errors = response.errors;\n            var error = errors && errors.length > 0 ? new _errors_index_js__WEBPACK_IMPORTED_MODULE_6__.ApolloError({\n                graphQLErrors: errors\n            }) : void 0;\n            var onError = executeOptions.onError || ((_a = ref.current.options) === null || _a === void 0 ? void 0 : _a.onError);\n            if (error && onError) {\n                onError(error, clientOptions);\n            }\n            if (mutationId === ref.current.mutationId && !clientOptions.ignoreResults) {\n                var result_1 = {\n                    called: true,\n                    loading: false,\n                    data: data,\n                    error: error,\n                    client: client\n                };\n                if (ref.current.isMounted && !(0,_wry_equality__WEBPACK_IMPORTED_MODULE_1__.equal)(ref.current.result, result_1)) {\n                    setResult(ref.current.result = result_1);\n                }\n            }\n            var onCompleted = executeOptions.onCompleted || ((_b = ref.current.options) === null || _b === void 0 ? void 0 : _b.onCompleted);\n            if (!error) {\n                onCompleted === null || onCompleted === void 0 ? void 0 : onCompleted(response.data, clientOptions);\n            }\n            return response;\n        }).catch(function(error) {\n            var _a;\n            if (mutationId === ref.current.mutationId && ref.current.isMounted) {\n                var result_2 = {\n                    loading: false,\n                    error: error,\n                    data: void 0,\n                    called: true,\n                    client: client\n                };\n                if (!(0,_wry_equality__WEBPACK_IMPORTED_MODULE_1__.equal)(ref.current.result, result_2)) {\n                    setResult(ref.current.result = result_2);\n                }\n            }\n            var onError = executeOptions.onError || ((_a = ref.current.options) === null || _a === void 0 ? void 0 : _a.onError);\n            if (onError) {\n                onError(error, clientOptions);\n                return {\n                    data: void 0,\n                    errors: error\n                };\n            }\n            throw error;\n        });\n    }, []);\n    var reset = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function() {\n        if (ref.current.isMounted) {\n            setResult({\n                called: false,\n                loading: false,\n                client: client\n            });\n        }\n    }, []);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(function() {\n        ref.current.isMounted = true;\n        return function() {\n            ref.current.isMounted = false;\n        };\n    }, []);\n    return [\n        execute,\n        (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({\n            reset: reset\n        }, result)\n    ];\n} //# sourceMappingURL=useMutation.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/react/hooks/useMutation.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/react/hooks/useQuery.js":
/*!*************************************************************!*\
  !*** ./node_modules/@apollo/client/react/hooks/useQuery.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useInternalState: () => (/* binding */ useInternalState),\n/* harmony export */   useQuery: () => (/* binding */ useQuery)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.mjs\");\n/* harmony import */ var _utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utilities/globals/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/globals/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _useSyncExternalStore_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./useSyncExternalStore.js */ \"(ssr)/./node_modules/@apollo/client/react/hooks/useSyncExternalStore.js\");\n/* harmony import */ var _wry_equality__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @wry/equality */ \"(ssr)/./node_modules/@wry/equality/lib/index.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/common/mergeOptions.js\");\n/* harmony import */ var _context_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../context/index.js */ \"(ssr)/./node_modules/@apollo/client/react/context/ApolloContext.js\");\n/* harmony import */ var _errors_index_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../errors/index.js */ \"(ssr)/./node_modules/@apollo/client/errors/index.js\");\n/* harmony import */ var _core_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/index.js */ \"(ssr)/./node_modules/@apollo/client/core/networkStatus.js\");\n/* harmony import */ var _parser_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../parser/index.js */ \"(ssr)/./node_modules/@apollo/client/react/parser/index.js\");\n/* harmony import */ var _useApolloClient_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./useApolloClient.js */ \"(ssr)/./node_modules/@apollo/client/react/hooks/useApolloClient.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/common/maybeDeepFreeze.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/common/canUse.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/common/compact.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/common/arrays.js\");\n\n\n\n\n\n\n\n\n\n\n\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction useQuery(query, options) {\n    if (options === void 0) {\n        options = Object.create(null);\n    }\n    return useInternalState((0,_useApolloClient_js__WEBPACK_IMPORTED_MODULE_3__.useApolloClient)(options.client), query).useQuery(options);\n}\nfunction useInternalState(client, query) {\n    var stateRef = react__WEBPACK_IMPORTED_MODULE_1__.useRef();\n    if (!stateRef.current || client !== stateRef.current.client || query !== stateRef.current.query) {\n        stateRef.current = new InternalState(client, query, stateRef.current);\n    }\n    var state = stateRef.current;\n    state.forceUpdateState = react__WEBPACK_IMPORTED_MODULE_1__.useReducer(function(tick) {\n        return tick + 1;\n    }, 0)[1];\n    return state;\n}\nvar InternalState = function() {\n    function InternalState(client, query, previous) {\n        var _this = this;\n        this.client = client;\n        this.query = query;\n        this.forceUpdate = function() {\n            return _this.forceUpdateState();\n        };\n        this.ssrDisabledResult = (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_4__.maybeDeepFreeze)({\n            loading: true,\n            data: void 0,\n            error: void 0,\n            networkStatus: _core_index_js__WEBPACK_IMPORTED_MODULE_5__.NetworkStatus.loading\n        });\n        this.skipStandbyResult = (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_4__.maybeDeepFreeze)({\n            loading: false,\n            data: void 0,\n            error: void 0,\n            networkStatus: _core_index_js__WEBPACK_IMPORTED_MODULE_5__.NetworkStatus.ready\n        });\n        this.toQueryResultCache = new (_utilities_index_js__WEBPACK_IMPORTED_MODULE_6__.canUseWeakMap ? WeakMap : Map)();\n        (0,_parser_index_js__WEBPACK_IMPORTED_MODULE_7__.verifyDocumentType)(query, _parser_index_js__WEBPACK_IMPORTED_MODULE_7__.DocumentType.Query);\n        var previousResult = previous && previous.result;\n        var previousData = previousResult && previousResult.data;\n        if (previousData) {\n            this.previousData = previousData;\n        }\n    }\n    InternalState.prototype.forceUpdateState = function() {\n        globalThis.__DEV__ !== false && _utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.invariant.warn(50);\n    };\n    InternalState.prototype.executeQuery = function(options) {\n        var _this = this;\n        var _a;\n        if (options.query) {\n            Object.assign(this, {\n                query: options.query\n            });\n        }\n        this.watchQueryOptions = this.createWatchQueryOptions(this.queryHookOptions = options);\n        var concast = this.observable.reobserveAsConcast(this.getObsQueryOptions());\n        this.previousData = ((_a = this.result) === null || _a === void 0 ? void 0 : _a.data) || this.previousData;\n        this.result = void 0;\n        this.forceUpdate();\n        return new Promise(function(resolve) {\n            var result;\n            concast.subscribe({\n                next: function(value) {\n                    result = value;\n                },\n                error: function() {\n                    resolve(_this.toQueryResult(_this.observable.getCurrentResult()));\n                },\n                complete: function() {\n                    resolve(_this.toQueryResult(result));\n                }\n            });\n        });\n    };\n    InternalState.prototype.useQuery = function(options) {\n        var _this = this;\n        this.renderPromises = react__WEBPACK_IMPORTED_MODULE_1__.useContext((0,_context_index_js__WEBPACK_IMPORTED_MODULE_8__.getApolloContext)()).renderPromises;\n        this.useOptions(options);\n        var obsQuery = this.useObservableQuery();\n        var result = (0,_useSyncExternalStore_js__WEBPACK_IMPORTED_MODULE_9__.useSyncExternalStore)(react__WEBPACK_IMPORTED_MODULE_1__.useCallback(function(handleStoreChange) {\n            if (_this.renderPromises) {\n                return function() {};\n            }\n            _this.forceUpdate = handleStoreChange;\n            var onNext = function() {\n                var previousResult = _this.result;\n                var result = obsQuery.getCurrentResult();\n                if (previousResult && previousResult.loading === result.loading && previousResult.networkStatus === result.networkStatus && (0,_wry_equality__WEBPACK_IMPORTED_MODULE_2__.equal)(previousResult.data, result.data)) {\n                    return;\n                }\n                _this.setResult(result);\n            };\n            var onError = function(error) {\n                subscription.unsubscribe();\n                subscription = obsQuery.resubscribeAfterError(onNext, onError);\n                if (!hasOwnProperty.call(error, \"graphQLErrors\")) {\n                    throw error;\n                }\n                var previousResult = _this.result;\n                if (!previousResult || previousResult && previousResult.loading || !(0,_wry_equality__WEBPACK_IMPORTED_MODULE_2__.equal)(error, previousResult.error)) {\n                    _this.setResult({\n                        data: previousResult && previousResult.data,\n                        error: error,\n                        loading: false,\n                        networkStatus: _core_index_js__WEBPACK_IMPORTED_MODULE_5__.NetworkStatus.error\n                    });\n                }\n            };\n            var subscription = obsQuery.subscribe(onNext, onError);\n            return function() {\n                setTimeout(function() {\n                    return subscription.unsubscribe();\n                });\n                _this.forceUpdate = function() {\n                    return _this.forceUpdateState();\n                };\n            };\n        }, [\n            obsQuery,\n            this.renderPromises,\n            this.client.disableNetworkFetches\n        ]), function() {\n            return _this.getCurrentResult();\n        }, function() {\n            return _this.getCurrentResult();\n        });\n        this.unsafeHandlePartialRefetch(result);\n        return this.toQueryResult(result);\n    };\n    InternalState.prototype.useOptions = function(options) {\n        var _a;\n        var watchQueryOptions = this.createWatchQueryOptions(this.queryHookOptions = options);\n        var currentWatchQueryOptions = this.watchQueryOptions;\n        if (!(0,_wry_equality__WEBPACK_IMPORTED_MODULE_2__.equal)(watchQueryOptions, currentWatchQueryOptions)) {\n            this.watchQueryOptions = watchQueryOptions;\n            if (currentWatchQueryOptions && this.observable) {\n                this.observable.reobserve(this.getObsQueryOptions());\n                this.previousData = ((_a = this.result) === null || _a === void 0 ? void 0 : _a.data) || this.previousData;\n                this.result = void 0;\n            }\n        }\n        this.onCompleted = options.onCompleted || InternalState.prototype.onCompleted;\n        this.onError = options.onError || InternalState.prototype.onError;\n        if ((this.renderPromises || this.client.disableNetworkFetches) && this.queryHookOptions.ssr === false && !this.queryHookOptions.skip) {\n            this.result = this.ssrDisabledResult;\n        } else if (this.queryHookOptions.skip || this.watchQueryOptions.fetchPolicy === \"standby\") {\n            this.result = this.skipStandbyResult;\n        } else if (this.result === this.ssrDisabledResult || this.result === this.skipStandbyResult) {\n            this.result = void 0;\n        }\n    };\n    InternalState.prototype.getObsQueryOptions = function() {\n        var toMerge = [];\n        var globalDefaults = this.client.defaultOptions.watchQuery;\n        if (globalDefaults) toMerge.push(globalDefaults);\n        if (this.queryHookOptions.defaultOptions) {\n            toMerge.push(this.queryHookOptions.defaultOptions);\n        }\n        toMerge.push((0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_10__.compact)(this.observable && this.observable.options, this.watchQueryOptions));\n        return toMerge.reduce(_utilities_index_js__WEBPACK_IMPORTED_MODULE_11__.mergeOptions);\n    };\n    InternalState.prototype.createWatchQueryOptions = function(_a) {\n        var _b;\n        if (_a === void 0) {\n            _a = {};\n        }\n        var skip = _a.skip, ssr = _a.ssr, onCompleted = _a.onCompleted, onError = _a.onError, defaultOptions = _a.defaultOptions, otherOptions = (0,tslib__WEBPACK_IMPORTED_MODULE_12__.__rest)(_a, [\n            \"skip\",\n            \"ssr\",\n            \"onCompleted\",\n            \"onError\",\n            \"defaultOptions\"\n        ]);\n        var watchQueryOptions = Object.assign(otherOptions, {\n            query: this.query\n        });\n        if (this.renderPromises && (watchQueryOptions.fetchPolicy === \"network-only\" || watchQueryOptions.fetchPolicy === \"cache-and-network\")) {\n            watchQueryOptions.fetchPolicy = \"cache-first\";\n        }\n        if (!watchQueryOptions.variables) {\n            watchQueryOptions.variables = {};\n        }\n        if (skip) {\n            var _c = watchQueryOptions.fetchPolicy, fetchPolicy = _c === void 0 ? this.getDefaultFetchPolicy() : _c, _d = watchQueryOptions.initialFetchPolicy, initialFetchPolicy = _d === void 0 ? fetchPolicy : _d;\n            Object.assign(watchQueryOptions, {\n                initialFetchPolicy: initialFetchPolicy,\n                fetchPolicy: \"standby\"\n            });\n        } else if (!watchQueryOptions.fetchPolicy) {\n            watchQueryOptions.fetchPolicy = ((_b = this.observable) === null || _b === void 0 ? void 0 : _b.options.initialFetchPolicy) || this.getDefaultFetchPolicy();\n        }\n        return watchQueryOptions;\n    };\n    InternalState.prototype.getDefaultFetchPolicy = function() {\n        var _a, _b;\n        return ((_a = this.queryHookOptions.defaultOptions) === null || _a === void 0 ? void 0 : _a.fetchPolicy) || ((_b = this.client.defaultOptions.watchQuery) === null || _b === void 0 ? void 0 : _b.fetchPolicy) || \"cache-first\";\n    };\n    InternalState.prototype.onCompleted = function(data) {};\n    InternalState.prototype.onError = function(error) {};\n    InternalState.prototype.useObservableQuery = function() {\n        var obsQuery = this.observable = this.renderPromises && this.renderPromises.getSSRObservable(this.watchQueryOptions) || this.observable || this.client.watchQuery(this.getObsQueryOptions());\n        this.obsQueryFields = react__WEBPACK_IMPORTED_MODULE_1__.useMemo(function() {\n            return {\n                refetch: obsQuery.refetch.bind(obsQuery),\n                reobserve: obsQuery.reobserve.bind(obsQuery),\n                fetchMore: obsQuery.fetchMore.bind(obsQuery),\n                updateQuery: obsQuery.updateQuery.bind(obsQuery),\n                startPolling: obsQuery.startPolling.bind(obsQuery),\n                stopPolling: obsQuery.stopPolling.bind(obsQuery),\n                subscribeToMore: obsQuery.subscribeToMore.bind(obsQuery)\n            };\n        }, [\n            obsQuery\n        ]);\n        var ssrAllowed = !(this.queryHookOptions.ssr === false || this.queryHookOptions.skip);\n        if (this.renderPromises && ssrAllowed) {\n            this.renderPromises.registerSSRObservable(obsQuery);\n            if (obsQuery.getCurrentResult().loading) {\n                this.renderPromises.addObservableQueryPromise(obsQuery);\n            }\n        }\n        return obsQuery;\n    };\n    InternalState.prototype.setResult = function(nextResult) {\n        var previousResult = this.result;\n        if (previousResult && previousResult.data) {\n            this.previousData = previousResult.data;\n        }\n        this.result = nextResult;\n        this.forceUpdate();\n        this.handleErrorOrCompleted(nextResult, previousResult);\n    };\n    InternalState.prototype.handleErrorOrCompleted = function(result, previousResult) {\n        var _this = this;\n        if (!result.loading) {\n            var error_1 = this.toApolloError(result);\n            Promise.resolve().then(function() {\n                if (error_1) {\n                    _this.onError(error_1);\n                } else if (result.data && (previousResult === null || previousResult === void 0 ? void 0 : previousResult.networkStatus) !== result.networkStatus && result.networkStatus === _core_index_js__WEBPACK_IMPORTED_MODULE_5__.NetworkStatus.ready) {\n                    _this.onCompleted(result.data);\n                }\n            }).catch(function(error) {\n                globalThis.__DEV__ !== false && _utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.invariant.warn(error);\n            });\n        }\n    };\n    InternalState.prototype.toApolloError = function(result) {\n        return (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_13__.isNonEmptyArray)(result.errors) ? new _errors_index_js__WEBPACK_IMPORTED_MODULE_14__.ApolloError({\n            graphQLErrors: result.errors\n        }) : result.error;\n    };\n    InternalState.prototype.getCurrentResult = function() {\n        if (!this.result) {\n            this.handleErrorOrCompleted(this.result = this.observable.getCurrentResult());\n        }\n        return this.result;\n    };\n    InternalState.prototype.toQueryResult = function(result) {\n        var queryResult = this.toQueryResultCache.get(result);\n        if (queryResult) return queryResult;\n        var data = result.data, partial = result.partial, resultWithoutPartial = (0,tslib__WEBPACK_IMPORTED_MODULE_12__.__rest)(result, [\n            \"data\",\n            \"partial\"\n        ]);\n        this.toQueryResultCache.set(result, queryResult = (0,tslib__WEBPACK_IMPORTED_MODULE_12__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_12__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_12__.__assign)({\n            data: data\n        }, resultWithoutPartial), this.obsQueryFields), {\n            client: this.client,\n            observable: this.observable,\n            variables: this.observable.variables,\n            called: !this.queryHookOptions.skip,\n            previousData: this.previousData\n        }));\n        if (!queryResult.error && (0,_utilities_index_js__WEBPACK_IMPORTED_MODULE_13__.isNonEmptyArray)(result.errors)) {\n            queryResult.error = new _errors_index_js__WEBPACK_IMPORTED_MODULE_14__.ApolloError({\n                graphQLErrors: result.errors\n            });\n        }\n        return queryResult;\n    };\n    InternalState.prototype.unsafeHandlePartialRefetch = function(result) {\n        if (result.partial && this.queryHookOptions.partialRefetch && !result.loading && (!result.data || Object.keys(result.data).length === 0) && this.observable.options.fetchPolicy !== \"cache-only\") {\n            Object.assign(result, {\n                loading: true,\n                networkStatus: _core_index_js__WEBPACK_IMPORTED_MODULE_5__.NetworkStatus.refetch\n            });\n            this.observable.refetch();\n        }\n    };\n    return InternalState;\n}(); //# sourceMappingURL=useQuery.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/react/hooks/useQuery.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/react/hooks/useSyncExternalStore.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@apollo/client/react/hooks/useSyncExternalStore.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("var react__WEBPACK_IMPORTED_MODULE_1___namespace_cache;\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useSyncExternalStore: () => (/* binding */ useSyncExternalStore)\n/* harmony export */ });\n/* harmony import */ var _utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utilities/globals/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/globals/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _utilities_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utilities/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/common/canUse.js\");\n\n\n\nvar didWarnUncachedGetSnapshot = false;\nvar uSESKey = \"useSyncExternalStore\";\nvar realHook = /*#__PURE__*/ (react__WEBPACK_IMPORTED_MODULE_1___namespace_cache || (react__WEBPACK_IMPORTED_MODULE_1___namespace_cache = __webpack_require__.t(react__WEBPACK_IMPORTED_MODULE_1__, 2)))[uSESKey];\nvar useSyncExternalStore = realHook || function(subscribe, getSnapshot, getServerSnapshot) {\n    var value = getSnapshot();\n    if (globalThis.__DEV__ !== false && !didWarnUncachedGetSnapshot && value !== getSnapshot()) {\n        didWarnUncachedGetSnapshot = true;\n        globalThis.__DEV__ !== false && _utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.invariant.error(58);\n    }\n    var _a = react__WEBPACK_IMPORTED_MODULE_1__.useState({\n        inst: {\n            value: value,\n            getSnapshot: getSnapshot\n        }\n    }), inst = _a[0].inst, forceUpdate = _a[1];\n    if (_utilities_index_js__WEBPACK_IMPORTED_MODULE_2__.canUseLayoutEffect) {\n        react__WEBPACK_IMPORTED_MODULE_1__.useLayoutEffect(function() {\n            Object.assign(inst, {\n                value: value,\n                getSnapshot: getSnapshot\n            });\n            if (checkIfSnapshotChanged(inst)) {\n                forceUpdate({\n                    inst: inst\n                });\n            }\n        }, [\n            subscribe,\n            value,\n            getSnapshot\n        ]);\n    } else {\n        Object.assign(inst, {\n            value: value,\n            getSnapshot: getSnapshot\n        });\n    }\n    react__WEBPACK_IMPORTED_MODULE_1__.useEffect(function() {\n        if (checkIfSnapshotChanged(inst)) {\n            forceUpdate({\n                inst: inst\n            });\n        }\n        return subscribe(function handleStoreChange() {\n            if (checkIfSnapshotChanged(inst)) {\n                forceUpdate({\n                    inst: inst\n                });\n            }\n        });\n    }, [\n        subscribe\n    ]);\n    return value;\n};\nfunction checkIfSnapshotChanged(_a) {\n    var value = _a.value, getSnapshot = _a.getSnapshot;\n    try {\n        return value !== getSnapshot();\n    } catch (_b) {\n        return true;\n    }\n} //# sourceMappingURL=useSyncExternalStore.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFwb2xsby9jbGllbnQvcmVhY3QvaG9va3MvdXNlU3luY0V4dGVybmFsU3RvcmUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBNkQ7QUFDOUI7QUFDK0I7QUFDOUQsSUFBSUcsNkJBQTZCO0FBQ2pDLElBQUlDLFVBQVU7QUFDZCxJQUFJQyxXQUFXSix5TEFBSyxDQUFDRyxRQUFRO0FBQ3RCLElBQUlFLHVCQUF1QkQsWUFDN0IsU0FBVUUsU0FBUyxFQUFFQyxXQUFXLEVBQUVDLGlCQUFpQjtJQUNoRCxJQUFJQyxRQUFRRjtJQUNaLElBQUlHLFdBQVdDLE9BQU8sS0FBSyxTQUN2QixDQUFDVCw4QkFDRE8sVUFBVUYsZUFBZTtRQUN6QkwsNkJBQTZCO1FBQzdCUSxXQUFXQyxPQUFPLEtBQUssU0FBU1osa0VBQVNBLENBQUNhLEtBQUssQ0FBQztJQUNwRDtJQUNBLElBQUlDLEtBQUtiLDJDQUFjLENBQUM7UUFDcEJlLE1BQU07WUFBRU4sT0FBT0E7WUFBT0YsYUFBYUE7UUFBWTtJQUNuRCxJQUFJUSxPQUFPRixFQUFFLENBQUMsRUFBRSxDQUFDRSxJQUFJLEVBQUVDLGNBQWNILEVBQUUsQ0FBQyxFQUFFO0lBQzFDLElBQUlaLG1FQUFrQkEsRUFBRTtRQUNwQkQsa0RBQXFCLENBQUM7WUFDbEJrQixPQUFPQyxNQUFNLENBQUNKLE1BQU07Z0JBQUVOLE9BQU9BO2dCQUFPRixhQUFhQTtZQUFZO1lBQzdELElBQUlhLHVCQUF1QkwsT0FBTztnQkFDOUJDLFlBQVk7b0JBQUVELE1BQU1BO2dCQUFLO1lBQzdCO1FBQ0osR0FBRztZQUFDVDtZQUFXRztZQUFPRjtTQUFZO0lBQ3RDLE9BQ0s7UUFDRFcsT0FBT0MsTUFBTSxDQUFDSixNQUFNO1lBQUVOLE9BQU9BO1lBQU9GLGFBQWFBO1FBQVk7SUFDakU7SUFDQVAsNENBQWUsQ0FBQztRQUNaLElBQUlvQix1QkFBdUJMLE9BQU87WUFDOUJDLFlBQVk7Z0JBQUVELE1BQU1BO1lBQUs7UUFDN0I7UUFDQSxPQUFPVCxVQUFVLFNBQVNnQjtZQUN0QixJQUFJRix1QkFBdUJMLE9BQU87Z0JBQzlCQyxZQUFZO29CQUFFRCxNQUFNQTtnQkFBSztZQUM3QjtRQUNKO0lBQ0osR0FBRztRQUFDVDtLQUFVO0lBQ2QsT0FBT0c7QUFDWCxFQUFHO0FBQ1AsU0FBU1csdUJBQXVCUCxFQUFFO0lBQzlCLElBQUlKLFFBQVFJLEdBQUdKLEtBQUssRUFBRUYsY0FBY00sR0FBR04sV0FBVztJQUNsRCxJQUFJO1FBQ0EsT0FBT0UsVUFBVUY7SUFDckIsRUFDQSxPQUFPZ0IsSUFBSTtRQUNQLE9BQU87SUFDWDtBQUNKLEVBQ0EsZ0RBQWdEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVybmktYXBwLy4vbm9kZV9tb2R1bGVzL0BhcG9sbG8vY2xpZW50L3JlYWN0L2hvb2tzL3VzZVN5bmNFeHRlcm5hbFN0b3JlLmpzPzkzZDgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaW52YXJpYW50IH0gZnJvbSBcIi4uLy4uL3V0aWxpdGllcy9nbG9iYWxzL2luZGV4LmpzXCI7XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IGNhblVzZUxheW91dEVmZmVjdCB9IGZyb20gXCIuLi8uLi91dGlsaXRpZXMvaW5kZXguanNcIjtcbnZhciBkaWRXYXJuVW5jYWNoZWRHZXRTbmFwc2hvdCA9IGZhbHNlO1xudmFyIHVTRVNLZXkgPSBcInVzZVN5bmNFeHRlcm5hbFN0b3JlXCI7XG52YXIgcmVhbEhvb2sgPSBSZWFjdFt1U0VTS2V5XTtcbmV4cG9ydCB2YXIgdXNlU3luY0V4dGVybmFsU3RvcmUgPSByZWFsSG9vayB8fFxuICAgIChmdW5jdGlvbiAoc3Vic2NyaWJlLCBnZXRTbmFwc2hvdCwgZ2V0U2VydmVyU25hcHNob3QpIHtcbiAgICAgICAgdmFyIHZhbHVlID0gZ2V0U25hcHNob3QoKTtcbiAgICAgICAgaWYgKGdsb2JhbFRoaXMuX19ERVZfXyAhPT0gZmFsc2UgJiZcbiAgICAgICAgICAgICFkaWRXYXJuVW5jYWNoZWRHZXRTbmFwc2hvdCAmJlxuICAgICAgICAgICAgdmFsdWUgIT09IGdldFNuYXBzaG90KCkpIHtcbiAgICAgICAgICAgIGRpZFdhcm5VbmNhY2hlZEdldFNuYXBzaG90ID0gdHJ1ZTtcbiAgICAgICAgICAgIGdsb2JhbFRoaXMuX19ERVZfXyAhPT0gZmFsc2UgJiYgaW52YXJpYW50LmVycm9yKDU4KTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgX2EgPSBSZWFjdC51c2VTdGF0ZSh7XG4gICAgICAgICAgICBpbnN0OiB7IHZhbHVlOiB2YWx1ZSwgZ2V0U25hcHNob3Q6IGdldFNuYXBzaG90IH0sXG4gICAgICAgIH0pLCBpbnN0ID0gX2FbMF0uaW5zdCwgZm9yY2VVcGRhdGUgPSBfYVsxXTtcbiAgICAgICAgaWYgKGNhblVzZUxheW91dEVmZmVjdCkge1xuICAgICAgICAgICAgUmVhY3QudXNlTGF5b3V0RWZmZWN0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBPYmplY3QuYXNzaWduKGluc3QsIHsgdmFsdWU6IHZhbHVlLCBnZXRTbmFwc2hvdDogZ2V0U25hcHNob3QgfSk7XG4gICAgICAgICAgICAgICAgaWYgKGNoZWNrSWZTbmFwc2hvdENoYW5nZWQoaW5zdCkpIHtcbiAgICAgICAgICAgICAgICAgICAgZm9yY2VVcGRhdGUoeyBpbnN0OiBpbnN0IH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sIFtzdWJzY3JpYmUsIHZhbHVlLCBnZXRTbmFwc2hvdF0pO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgT2JqZWN0LmFzc2lnbihpbnN0LCB7IHZhbHVlOiB2YWx1ZSwgZ2V0U25hcHNob3Q6IGdldFNuYXBzaG90IH0pO1xuICAgICAgICB9XG4gICAgICAgIFJlYWN0LnVzZUVmZmVjdChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBpZiAoY2hlY2tJZlNuYXBzaG90Q2hhbmdlZChpbnN0KSkge1xuICAgICAgICAgICAgICAgIGZvcmNlVXBkYXRlKHsgaW5zdDogaW5zdCB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBzdWJzY3JpYmUoZnVuY3Rpb24gaGFuZGxlU3RvcmVDaGFuZ2UoKSB7XG4gICAgICAgICAgICAgICAgaWYgKGNoZWNrSWZTbmFwc2hvdENoYW5nZWQoaW5zdCkpIHtcbiAgICAgICAgICAgICAgICAgICAgZm9yY2VVcGRhdGUoeyBpbnN0OiBpbnN0IH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9LCBbc3Vic2NyaWJlXSk7XG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9KTtcbmZ1bmN0aW9uIGNoZWNrSWZTbmFwc2hvdENoYW5nZWQoX2EpIHtcbiAgICB2YXIgdmFsdWUgPSBfYS52YWx1ZSwgZ2V0U25hcHNob3QgPSBfYS5nZXRTbmFwc2hvdDtcbiAgICB0cnkge1xuICAgICAgICByZXR1cm4gdmFsdWUgIT09IGdldFNuYXBzaG90KCk7XG4gICAgfVxuICAgIGNhdGNoIChfYikge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD11c2VTeW5jRXh0ZXJuYWxTdG9yZS5qcy5tYXAiXSwibmFtZXMiOlsiaW52YXJpYW50IiwiUmVhY3QiLCJjYW5Vc2VMYXlvdXRFZmZlY3QiLCJkaWRXYXJuVW5jYWNoZWRHZXRTbmFwc2hvdCIsInVTRVNLZXkiLCJyZWFsSG9vayIsInVzZVN5bmNFeHRlcm5hbFN0b3JlIiwic3Vic2NyaWJlIiwiZ2V0U25hcHNob3QiLCJnZXRTZXJ2ZXJTbmFwc2hvdCIsInZhbHVlIiwiZ2xvYmFsVGhpcyIsIl9fREVWX18iLCJlcnJvciIsIl9hIiwidXNlU3RhdGUiLCJpbnN0IiwiZm9yY2VVcGRhdGUiLCJ1c2VMYXlvdXRFZmZlY3QiLCJPYmplY3QiLCJhc3NpZ24iLCJjaGVja0lmU25hcHNob3RDaGFuZ2VkIiwidXNlRWZmZWN0IiwiaGFuZGxlU3RvcmVDaGFuZ2UiLCJfYiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/react/hooks/useSyncExternalStore.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/react/parser/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/@apollo/client/react/parser/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DocumentType: () => (/* binding */ DocumentType),\n/* harmony export */   operationName: () => (/* binding */ operationName),\n/* harmony export */   parser: () => (/* binding */ parser),\n/* harmony export */   verifyDocumentType: () => (/* binding */ verifyDocumentType)\n/* harmony export */ });\n/* harmony import */ var _utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utilities/globals/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/globals/index.js\");\n\nvar DocumentType;\n(function(DocumentType) {\n    DocumentType[DocumentType[\"Query\"] = 0] = \"Query\";\n    DocumentType[DocumentType[\"Mutation\"] = 1] = \"Mutation\";\n    DocumentType[DocumentType[\"Subscription\"] = 2] = \"Subscription\";\n})(DocumentType || (DocumentType = {}));\nvar cache = new Map();\nfunction operationName(type) {\n    var name;\n    switch(type){\n        case DocumentType.Query:\n            name = \"Query\";\n            break;\n        case DocumentType.Mutation:\n            name = \"Mutation\";\n            break;\n        case DocumentType.Subscription:\n            name = \"Subscription\";\n            break;\n    }\n    return name;\n}\nfunction parser(document) {\n    var cached = cache.get(document);\n    if (cached) return cached;\n    var variables, type, name;\n    (0,_utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.invariant)(!!document && !!document.kind, 59, document);\n    var fragments = [];\n    var queries = [];\n    var mutations = [];\n    var subscriptions = [];\n    for(var _i = 0, _a = document.definitions; _i < _a.length; _i++){\n        var x = _a[_i];\n        if (x.kind === \"FragmentDefinition\") {\n            fragments.push(x);\n            continue;\n        }\n        if (x.kind === \"OperationDefinition\") {\n            switch(x.operation){\n                case \"query\":\n                    queries.push(x);\n                    break;\n                case \"mutation\":\n                    mutations.push(x);\n                    break;\n                case \"subscription\":\n                    subscriptions.push(x);\n                    break;\n            }\n        }\n    }\n    (0,_utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.invariant)(!fragments.length || queries.length || mutations.length || subscriptions.length, 60);\n    (0,_utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.invariant)(queries.length + mutations.length + subscriptions.length <= 1, 61, document, queries.length, subscriptions.length, mutations.length);\n    type = queries.length ? DocumentType.Query : DocumentType.Mutation;\n    if (!queries.length && !mutations.length) type = DocumentType.Subscription;\n    var definitions = queries.length ? queries : mutations.length ? mutations : subscriptions;\n    (0,_utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.invariant)(definitions.length === 1, 62, document, definitions.length);\n    var definition = definitions[0];\n    variables = definition.variableDefinitions || [];\n    if (definition.name && definition.name.kind === \"Name\") {\n        name = definition.name.value;\n    } else {\n        name = \"data\";\n    }\n    var payload = {\n        name: name,\n        type: type,\n        variables: variables\n    };\n    cache.set(document, payload);\n    return payload;\n}\nfunction verifyDocumentType(document, type) {\n    var operation = parser(document);\n    var requiredOperationName = operationName(type);\n    var usedOperationName = operationName(operation.type);\n    (0,_utilities_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.invariant)(operation.type === type, 63, requiredOperationName, requiredOperationName, usedOperationName);\n} //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFwb2xsby9jbGllbnQvcmVhY3QvcGFyc2VyL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQTZEO0FBQ3RELElBQUlDLGFBQWE7QUFDdkIsVUFBVUEsWUFBWTtJQUNuQkEsWUFBWSxDQUFDQSxZQUFZLENBQUMsUUFBUSxHQUFHLEVBQUUsR0FBRztJQUMxQ0EsWUFBWSxDQUFDQSxZQUFZLENBQUMsV0FBVyxHQUFHLEVBQUUsR0FBRztJQUM3Q0EsWUFBWSxDQUFDQSxZQUFZLENBQUMsZUFBZSxHQUFHLEVBQUUsR0FBRztBQUNyRCxHQUFHQSxnQkFBaUJBLENBQUFBLGVBQWUsQ0FBQztBQUNwQyxJQUFJQyxRQUFRLElBQUlDO0FBQ1QsU0FBU0MsY0FBY0MsSUFBSTtJQUM5QixJQUFJQztJQUNKLE9BQVFEO1FBQ0osS0FBS0osYUFBYU0sS0FBSztZQUNuQkQsT0FBTztZQUNQO1FBQ0osS0FBS0wsYUFBYU8sUUFBUTtZQUN0QkYsT0FBTztZQUNQO1FBQ0osS0FBS0wsYUFBYVEsWUFBWTtZQUMxQkgsT0FBTztZQUNQO0lBQ1I7SUFDQSxPQUFPQTtBQUNYO0FBQ08sU0FBU0ksT0FBT0MsUUFBUTtJQUMzQixJQUFJQyxTQUFTVixNQUFNVyxHQUFHLENBQUNGO0lBQ3ZCLElBQUlDLFFBQ0EsT0FBT0E7SUFDWCxJQUFJRSxXQUFXVCxNQUFNQztJQUNyQk4sc0VBQVNBLENBQUMsQ0FBQyxDQUFDVyxZQUFZLENBQUMsQ0FBQ0EsU0FBU0ksSUFBSSxFQUFFLElBQUlKO0lBQzdDLElBQUlLLFlBQVksRUFBRTtJQUNsQixJQUFJQyxVQUFVLEVBQUU7SUFDaEIsSUFBSUMsWUFBWSxFQUFFO0lBQ2xCLElBQUlDLGdCQUFnQixFQUFFO0lBQ3RCLElBQUssSUFBSUMsS0FBSyxHQUFHQyxLQUFLVixTQUFTVyxXQUFXLEVBQUVGLEtBQUtDLEdBQUdFLE1BQU0sRUFBRUgsS0FBTTtRQUM5RCxJQUFJSSxJQUFJSCxFQUFFLENBQUNELEdBQUc7UUFDZCxJQUFJSSxFQUFFVCxJQUFJLEtBQUssc0JBQXNCO1lBQ2pDQyxVQUFVUyxJQUFJLENBQUNEO1lBQ2Y7UUFDSjtRQUNBLElBQUlBLEVBQUVULElBQUksS0FBSyx1QkFBdUI7WUFDbEMsT0FBUVMsRUFBRUUsU0FBUztnQkFDZixLQUFLO29CQUNEVCxRQUFRUSxJQUFJLENBQUNEO29CQUNiO2dCQUNKLEtBQUs7b0JBQ0ROLFVBQVVPLElBQUksQ0FBQ0Q7b0JBQ2Y7Z0JBQ0osS0FBSztvQkFDREwsY0FBY00sSUFBSSxDQUFDRDtvQkFDbkI7WUFDUjtRQUNKO0lBQ0o7SUFDQXhCLHNFQUFTQSxDQUFDLENBQUNnQixVQUFVTyxNQUFNLElBQ3ZCTixRQUFRTSxNQUFNLElBQ2RMLFVBQVVLLE1BQU0sSUFDaEJKLGNBQWNJLE1BQU0sRUFBRTtJQUMxQnZCLHNFQUFTQSxDQUNMaUIsUUFBUU0sTUFBTSxHQUFHTCxVQUFVSyxNQUFNLEdBQUdKLGNBQWNJLE1BQU0sSUFBSSxHQUM1RCxJQUNBWixVQUNBTSxRQUFRTSxNQUFNLEVBQ2RKLGNBQWNJLE1BQU0sRUFDcEJMLFVBQVVLLE1BQU07SUFFcEJsQixPQUFPWSxRQUFRTSxNQUFNLEdBQUd0QixhQUFhTSxLQUFLLEdBQUdOLGFBQWFPLFFBQVE7SUFDbEUsSUFBSSxDQUFDUyxRQUFRTSxNQUFNLElBQUksQ0FBQ0wsVUFBVUssTUFBTSxFQUNwQ2xCLE9BQU9KLGFBQWFRLFlBQVk7SUFDcEMsSUFBSWEsY0FBY0wsUUFBUU0sTUFBTSxHQUMxQk4sVUFDQUMsVUFBVUssTUFBTSxHQUNaTCxZQUNBQztJQUNWbkIsc0VBQVNBLENBQUNzQixZQUFZQyxNQUFNLEtBQUssR0FBRyxJQUFJWixVQUFVVyxZQUFZQyxNQUFNO0lBQ3BFLElBQUlJLGFBQWFMLFdBQVcsQ0FBQyxFQUFFO0lBQy9CUixZQUFZYSxXQUFXQyxtQkFBbUIsSUFBSSxFQUFFO0lBQ2hELElBQUlELFdBQVdyQixJQUFJLElBQUlxQixXQUFXckIsSUFBSSxDQUFDUyxJQUFJLEtBQUssUUFBUTtRQUNwRFQsT0FBT3FCLFdBQVdyQixJQUFJLENBQUN1QixLQUFLO0lBQ2hDLE9BQ0s7UUFDRHZCLE9BQU87SUFDWDtJQUNBLElBQUl3QixVQUFVO1FBQUV4QixNQUFNQTtRQUFNRCxNQUFNQTtRQUFNUyxXQUFXQTtJQUFVO0lBQzdEWixNQUFNNkIsR0FBRyxDQUFDcEIsVUFBVW1CO0lBQ3BCLE9BQU9BO0FBQ1g7QUFDTyxTQUFTRSxtQkFBbUJyQixRQUFRLEVBQUVOLElBQUk7SUFDN0MsSUFBSXFCLFlBQVloQixPQUFPQztJQUN2QixJQUFJc0Isd0JBQXdCN0IsY0FBY0M7SUFDMUMsSUFBSTZCLG9CQUFvQjlCLGNBQWNzQixVQUFVckIsSUFBSTtJQUNwREwsc0VBQVNBLENBQ0wwQixVQUFVckIsSUFBSSxLQUFLQSxNQUNuQixJQUNBNEIsdUJBQ0FBLHVCQUNBQztBQUVSLEVBQ0EsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVybmktYXBwLy4vbm9kZV9tb2R1bGVzL0BhcG9sbG8vY2xpZW50L3JlYWN0L3BhcnNlci9pbmRleC5qcz85OTE0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGludmFyaWFudCB9IGZyb20gXCIuLi8uLi91dGlsaXRpZXMvZ2xvYmFscy9pbmRleC5qc1wiO1xuZXhwb3J0IHZhciBEb2N1bWVudFR5cGU7XG4oZnVuY3Rpb24gKERvY3VtZW50VHlwZSkge1xuICAgIERvY3VtZW50VHlwZVtEb2N1bWVudFR5cGVbXCJRdWVyeVwiXSA9IDBdID0gXCJRdWVyeVwiO1xuICAgIERvY3VtZW50VHlwZVtEb2N1bWVudFR5cGVbXCJNdXRhdGlvblwiXSA9IDFdID0gXCJNdXRhdGlvblwiO1xuICAgIERvY3VtZW50VHlwZVtEb2N1bWVudFR5cGVbXCJTdWJzY3JpcHRpb25cIl0gPSAyXSA9IFwiU3Vic2NyaXB0aW9uXCI7XG59KShEb2N1bWVudFR5cGUgfHwgKERvY3VtZW50VHlwZSA9IHt9KSk7XG52YXIgY2FjaGUgPSBuZXcgTWFwKCk7XG5leHBvcnQgZnVuY3Rpb24gb3BlcmF0aW9uTmFtZSh0eXBlKSB7XG4gICAgdmFyIG5hbWU7XG4gICAgc3dpdGNoICh0eXBlKSB7XG4gICAgICAgIGNhc2UgRG9jdW1lbnRUeXBlLlF1ZXJ5OlxuICAgICAgICAgICAgbmFtZSA9IFwiUXVlcnlcIjtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIERvY3VtZW50VHlwZS5NdXRhdGlvbjpcbiAgICAgICAgICAgIG5hbWUgPSBcIk11dGF0aW9uXCI7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSBEb2N1bWVudFR5cGUuU3Vic2NyaXB0aW9uOlxuICAgICAgICAgICAgbmFtZSA9IFwiU3Vic2NyaXB0aW9uXCI7XG4gICAgICAgICAgICBicmVhaztcbiAgICB9XG4gICAgcmV0dXJuIG5hbWU7XG59XG5leHBvcnQgZnVuY3Rpb24gcGFyc2VyKGRvY3VtZW50KSB7XG4gICAgdmFyIGNhY2hlZCA9IGNhY2hlLmdldChkb2N1bWVudCk7XG4gICAgaWYgKGNhY2hlZClcbiAgICAgICAgcmV0dXJuIGNhY2hlZDtcbiAgICB2YXIgdmFyaWFibGVzLCB0eXBlLCBuYW1lO1xuICAgIGludmFyaWFudCghIWRvY3VtZW50ICYmICEhZG9jdW1lbnQua2luZCwgNTksIGRvY3VtZW50KTtcbiAgICB2YXIgZnJhZ21lbnRzID0gW107XG4gICAgdmFyIHF1ZXJpZXMgPSBbXTtcbiAgICB2YXIgbXV0YXRpb25zID0gW107XG4gICAgdmFyIHN1YnNjcmlwdGlvbnMgPSBbXTtcbiAgICBmb3IgKHZhciBfaSA9IDAsIF9hID0gZG9jdW1lbnQuZGVmaW5pdGlvbnM7IF9pIDwgX2EubGVuZ3RoOyBfaSsrKSB7XG4gICAgICAgIHZhciB4ID0gX2FbX2ldO1xuICAgICAgICBpZiAoeC5raW5kID09PSBcIkZyYWdtZW50RGVmaW5pdGlvblwiKSB7XG4gICAgICAgICAgICBmcmFnbWVudHMucHVzaCh4KTtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIGlmICh4LmtpbmQgPT09IFwiT3BlcmF0aW9uRGVmaW5pdGlvblwiKSB7XG4gICAgICAgICAgICBzd2l0Y2ggKHgub3BlcmF0aW9uKSB7XG4gICAgICAgICAgICAgICAgY2FzZSBcInF1ZXJ5XCI6XG4gICAgICAgICAgICAgICAgICAgIHF1ZXJpZXMucHVzaCh4KTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSBcIm11dGF0aW9uXCI6XG4gICAgICAgICAgICAgICAgICAgIG11dGF0aW9ucy5wdXNoKHgpO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIFwic3Vic2NyaXB0aW9uXCI6XG4gICAgICAgICAgICAgICAgICAgIHN1YnNjcmlwdGlvbnMucHVzaCh4KTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgaW52YXJpYW50KCFmcmFnbWVudHMubGVuZ3RoIHx8XG4gICAgICAgIHF1ZXJpZXMubGVuZ3RoIHx8XG4gICAgICAgIG11dGF0aW9ucy5sZW5ndGggfHxcbiAgICAgICAgc3Vic2NyaXB0aW9ucy5sZW5ndGgsIDYwKTtcbiAgICBpbnZhcmlhbnQoXG4gICAgICAgIHF1ZXJpZXMubGVuZ3RoICsgbXV0YXRpb25zLmxlbmd0aCArIHN1YnNjcmlwdGlvbnMubGVuZ3RoIDw9IDEsXG4gICAgICAgIDYxLFxuICAgICAgICBkb2N1bWVudCxcbiAgICAgICAgcXVlcmllcy5sZW5ndGgsXG4gICAgICAgIHN1YnNjcmlwdGlvbnMubGVuZ3RoLFxuICAgICAgICBtdXRhdGlvbnMubGVuZ3RoXG4gICAgKTtcbiAgICB0eXBlID0gcXVlcmllcy5sZW5ndGggPyBEb2N1bWVudFR5cGUuUXVlcnkgOiBEb2N1bWVudFR5cGUuTXV0YXRpb247XG4gICAgaWYgKCFxdWVyaWVzLmxlbmd0aCAmJiAhbXV0YXRpb25zLmxlbmd0aClcbiAgICAgICAgdHlwZSA9IERvY3VtZW50VHlwZS5TdWJzY3JpcHRpb247XG4gICAgdmFyIGRlZmluaXRpb25zID0gcXVlcmllcy5sZW5ndGhcbiAgICAgICAgPyBxdWVyaWVzXG4gICAgICAgIDogbXV0YXRpb25zLmxlbmd0aFxuICAgICAgICAgICAgPyBtdXRhdGlvbnNcbiAgICAgICAgICAgIDogc3Vic2NyaXB0aW9ucztcbiAgICBpbnZhcmlhbnQoZGVmaW5pdGlvbnMubGVuZ3RoID09PSAxLCA2MiwgZG9jdW1lbnQsIGRlZmluaXRpb25zLmxlbmd0aCk7XG4gICAgdmFyIGRlZmluaXRpb24gPSBkZWZpbml0aW9uc1swXTtcbiAgICB2YXJpYWJsZXMgPSBkZWZpbml0aW9uLnZhcmlhYmxlRGVmaW5pdGlvbnMgfHwgW107XG4gICAgaWYgKGRlZmluaXRpb24ubmFtZSAmJiBkZWZpbml0aW9uLm5hbWUua2luZCA9PT0gXCJOYW1lXCIpIHtcbiAgICAgICAgbmFtZSA9IGRlZmluaXRpb24ubmFtZS52YWx1ZTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIG5hbWUgPSBcImRhdGFcIjtcbiAgICB9XG4gICAgdmFyIHBheWxvYWQgPSB7IG5hbWU6IG5hbWUsIHR5cGU6IHR5cGUsIHZhcmlhYmxlczogdmFyaWFibGVzIH07XG4gICAgY2FjaGUuc2V0KGRvY3VtZW50LCBwYXlsb2FkKTtcbiAgICByZXR1cm4gcGF5bG9hZDtcbn1cbmV4cG9ydCBmdW5jdGlvbiB2ZXJpZnlEb2N1bWVudFR5cGUoZG9jdW1lbnQsIHR5cGUpIHtcbiAgICB2YXIgb3BlcmF0aW9uID0gcGFyc2VyKGRvY3VtZW50KTtcbiAgICB2YXIgcmVxdWlyZWRPcGVyYXRpb25OYW1lID0gb3BlcmF0aW9uTmFtZSh0eXBlKTtcbiAgICB2YXIgdXNlZE9wZXJhdGlvbk5hbWUgPSBvcGVyYXRpb25OYW1lKG9wZXJhdGlvbi50eXBlKTtcbiAgICBpbnZhcmlhbnQoXG4gICAgICAgIG9wZXJhdGlvbi50eXBlID09PSB0eXBlLFxuICAgICAgICA2MyxcbiAgICAgICAgcmVxdWlyZWRPcGVyYXRpb25OYW1lLFxuICAgICAgICByZXF1aXJlZE9wZXJhdGlvbk5hbWUsXG4gICAgICAgIHVzZWRPcGVyYXRpb25OYW1lXG4gICAgKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6WyJpbnZhcmlhbnQiLCJEb2N1bWVudFR5cGUiLCJjYWNoZSIsIk1hcCIsIm9wZXJhdGlvbk5hbWUiLCJ0eXBlIiwibmFtZSIsIlF1ZXJ5IiwiTXV0YXRpb24iLCJTdWJzY3JpcHRpb24iLCJwYXJzZXIiLCJkb2N1bWVudCIsImNhY2hlZCIsImdldCIsInZhcmlhYmxlcyIsImtpbmQiLCJmcmFnbWVudHMiLCJxdWVyaWVzIiwibXV0YXRpb25zIiwic3Vic2NyaXB0aW9ucyIsIl9pIiwiX2EiLCJkZWZpbml0aW9ucyIsImxlbmd0aCIsIngiLCJwdXNoIiwib3BlcmF0aW9uIiwiZGVmaW5pdGlvbiIsInZhcmlhYmxlRGVmaW5pdGlvbnMiLCJ2YWx1ZSIsInBheWxvYWQiLCJzZXQiLCJ2ZXJpZnlEb2N1bWVudFR5cGUiLCJyZXF1aXJlZE9wZXJhdGlvbk5hbWUiLCJ1c2VkT3BlcmF0aW9uTmFtZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/react/parser/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/utilities/common/arrays.js":
/*!****************************************************************!*\
  !*** ./node_modules/@apollo/client/utilities/common/arrays.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isArray: () => (/* binding */ isArray),\n/* harmony export */   isNonEmptyArray: () => (/* binding */ isNonEmptyArray)\n/* harmony export */ });\nvar isArray = Array.isArray;\nfunction isNonEmptyArray(value) {\n    return Array.isArray(value) && value.length > 0;\n} //# sourceMappingURL=arrays.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFwb2xsby9jbGllbnQvdXRpbGl0aWVzL2NvbW1vbi9hcnJheXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBTyxJQUFJQSxVQUFVQyxNQUFNRCxPQUFPLENBQUM7QUFDNUIsU0FBU0UsZ0JBQWdCQyxLQUFLO0lBQ2pDLE9BQU9GLE1BQU1ELE9BQU8sQ0FBQ0csVUFBVUEsTUFBTUMsTUFBTSxHQUFHO0FBQ2xELEVBQ0Esa0NBQWtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVybmktYXBwLy4vbm9kZV9tb2R1bGVzL0BhcG9sbG8vY2xpZW50L3V0aWxpdGllcy9jb21tb24vYXJyYXlzLmpzPzRkZmQiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHZhciBpc0FycmF5ID0gQXJyYXkuaXNBcnJheTtcbmV4cG9ydCBmdW5jdGlvbiBpc05vbkVtcHR5QXJyYXkodmFsdWUpIHtcbiAgICByZXR1cm4gQXJyYXkuaXNBcnJheSh2YWx1ZSkgJiYgdmFsdWUubGVuZ3RoID4gMDtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFycmF5cy5qcy5tYXAiXSwibmFtZXMiOlsiaXNBcnJheSIsIkFycmF5IiwiaXNOb25FbXB0eUFycmF5IiwidmFsdWUiLCJsZW5ndGgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/utilities/common/arrays.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/utilities/common/canUse.js":
/*!****************************************************************!*\
  !*** ./node_modules/@apollo/client/utilities/common/canUse.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   canUseAsyncIteratorSymbol: () => (/* binding */ canUseAsyncIteratorSymbol),\n/* harmony export */   canUseDOM: () => (/* binding */ canUseDOM),\n/* harmony export */   canUseLayoutEffect: () => (/* binding */ canUseLayoutEffect),\n/* harmony export */   canUseSymbol: () => (/* binding */ canUseSymbol),\n/* harmony export */   canUseWeakMap: () => (/* binding */ canUseWeakMap),\n/* harmony export */   canUseWeakSet: () => (/* binding */ canUseWeakSet)\n/* harmony export */ });\n/* harmony import */ var _globals_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../globals/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/globals/index.js\");\n\nvar canUseWeakMap = typeof WeakMap === \"function\" && (0,_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.maybe)(function() {\n    return navigator.product;\n}) !== \"ReactNative\";\nvar canUseWeakSet = typeof WeakSet === \"function\";\nvar canUseSymbol = typeof Symbol === \"function\" && typeof Symbol.for === \"function\";\nvar canUseAsyncIteratorSymbol = canUseSymbol && Symbol.asyncIterator;\nvar canUseDOM = typeof (0,_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.maybe)(function() {\n    return window.document.createElement;\n}) === \"function\";\nvar usingJSDOM = (0,_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.maybe)(function() {\n    return navigator.userAgent.indexOf(\"jsdom\") >= 0;\n}) || false;\nvar canUseLayoutEffect = canUseDOM && !usingJSDOM; //# sourceMappingURL=canUse.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFwb2xsby9jbGllbnQvdXRpbGl0aWVzL2NvbW1vbi9jYW5Vc2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUE0QztBQUNyQyxJQUFJQyxnQkFBZ0IsT0FBT0MsWUFBWSxjQUMxQ0Ysd0RBQUtBLENBQUM7SUFBYyxPQUFPRyxVQUFVQyxPQUFPO0FBQUUsT0FBTyxjQUFjO0FBQ2hFLElBQUlDLGdCQUFnQixPQUFPQyxZQUFZLFdBQVc7QUFDbEQsSUFBSUMsZUFBZSxPQUFPQyxXQUFXLGNBQWMsT0FBT0EsT0FBT0MsR0FBRyxLQUFLLFdBQVc7QUFDcEYsSUFBSUMsNEJBQTRCSCxnQkFBZ0JDLE9BQU9HLGFBQWEsQ0FBQztBQUNyRSxJQUFJQyxZQUFZLE9BQU9aLHdEQUFLQSxDQUFDO0lBQWMsT0FBT2EsT0FBT0MsUUFBUSxDQUFDQyxhQUFhO0FBQUUsT0FBTyxXQUFXO0FBQzFHLElBQUlDLGFBQWFoQix3REFBS0EsQ0FBQztJQUFjLE9BQU9HLFVBQVVjLFNBQVMsQ0FBQ0MsT0FBTyxDQUFDLFlBQVk7QUFBRyxNQUFNO0FBQ3RGLElBQUlDLHFCQUFxQlAsYUFBYSxDQUFDSSxXQUFXLENBQ3pELGtDQUFrQyIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1cm5pLWFwcC8uL25vZGVfbW9kdWxlcy9AYXBvbGxvL2NsaWVudC91dGlsaXRpZXMvY29tbW9uL2NhblVzZS5qcz8wZjVkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG1heWJlIH0gZnJvbSBcIi4uL2dsb2JhbHMvaW5kZXguanNcIjtcbmV4cG9ydCB2YXIgY2FuVXNlV2Vha01hcCA9IHR5cGVvZiBXZWFrTWFwID09PSBcImZ1bmN0aW9uXCIgJiZcbiAgICBtYXliZShmdW5jdGlvbiAoKSB7IHJldHVybiBuYXZpZ2F0b3IucHJvZHVjdDsgfSkgIT09IFwiUmVhY3ROYXRpdmVcIjtcbmV4cG9ydCB2YXIgY2FuVXNlV2Vha1NldCA9IHR5cGVvZiBXZWFrU2V0ID09PSBcImZ1bmN0aW9uXCI7XG5leHBvcnQgdmFyIGNhblVzZVN5bWJvbCA9IHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiB0eXBlb2YgU3ltYm9sLmZvciA9PT0gXCJmdW5jdGlvblwiO1xuZXhwb3J0IHZhciBjYW5Vc2VBc3luY0l0ZXJhdG9yU3ltYm9sID0gY2FuVXNlU3ltYm9sICYmIFN5bWJvbC5hc3luY0l0ZXJhdG9yO1xuZXhwb3J0IHZhciBjYW5Vc2VET00gPSB0eXBlb2YgbWF5YmUoZnVuY3Rpb24gKCkgeyByZXR1cm4gd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQ7IH0pID09PSBcImZ1bmN0aW9uXCI7XG52YXIgdXNpbmdKU0RPTSA9IG1heWJlKGZ1bmN0aW9uICgpIHsgcmV0dXJuIG5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZihcImpzZG9tXCIpID49IDA7IH0pIHx8IGZhbHNlO1xuZXhwb3J0IHZhciBjYW5Vc2VMYXlvdXRFZmZlY3QgPSBjYW5Vc2VET00gJiYgIXVzaW5nSlNET007XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jYW5Vc2UuanMubWFwIl0sIm5hbWVzIjpbIm1heWJlIiwiY2FuVXNlV2Vha01hcCIsIldlYWtNYXAiLCJuYXZpZ2F0b3IiLCJwcm9kdWN0IiwiY2FuVXNlV2Vha1NldCIsIldlYWtTZXQiLCJjYW5Vc2VTeW1ib2wiLCJTeW1ib2wiLCJmb3IiLCJjYW5Vc2VBc3luY0l0ZXJhdG9yU3ltYm9sIiwiYXN5bmNJdGVyYXRvciIsImNhblVzZURPTSIsIndpbmRvdyIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsInVzaW5nSlNET00iLCJ1c2VyQWdlbnQiLCJpbmRleE9mIiwiY2FuVXNlTGF5b3V0RWZmZWN0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/utilities/common/canUse.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/utilities/common/cloneDeep.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@apollo/client/utilities/common/cloneDeep.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cloneDeep: () => (/* binding */ cloneDeep)\n/* harmony export */ });\nvar toString = Object.prototype.toString;\nfunction cloneDeep(value) {\n    return cloneDeepHelper(value);\n}\nfunction cloneDeepHelper(val, seen) {\n    switch(toString.call(val)){\n        case \"[object Array]\":\n            {\n                seen = seen || new Map();\n                if (seen.has(val)) return seen.get(val);\n                var copy_1 = val.slice(0);\n                seen.set(val, copy_1);\n                copy_1.forEach(function(child, i) {\n                    copy_1[i] = cloneDeepHelper(child, seen);\n                });\n                return copy_1;\n            }\n        case \"[object Object]\":\n            {\n                seen = seen || new Map();\n                if (seen.has(val)) return seen.get(val);\n                var copy_2 = Object.create(Object.getPrototypeOf(val));\n                seen.set(val, copy_2);\n                Object.keys(val).forEach(function(key) {\n                    copy_2[key] = cloneDeepHelper(val[key], seen);\n                });\n                return copy_2;\n            }\n        default:\n            return val;\n    }\n} //# sourceMappingURL=cloneDeep.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFwb2xsby9jbGllbnQvdXRpbGl0aWVzL2NvbW1vbi9jbG9uZURlZXAuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLElBQUlBLFdBQVdDLE9BQU9DLFNBQVMsQ0FBQ0YsUUFBUTtBQUNqQyxTQUFTRyxVQUFVQyxLQUFLO0lBQzNCLE9BQU9DLGdCQUFnQkQ7QUFDM0I7QUFDQSxTQUFTQyxnQkFBZ0JDLEdBQUcsRUFBRUMsSUFBSTtJQUM5QixPQUFRUCxTQUFTUSxJQUFJLENBQUNGO1FBQ2xCLEtBQUs7WUFBa0I7Z0JBQ25CQyxPQUFPQSxRQUFRLElBQUlFO2dCQUNuQixJQUFJRixLQUFLRyxHQUFHLENBQUNKLE1BQ1QsT0FBT0MsS0FBS0ksR0FBRyxDQUFDTDtnQkFDcEIsSUFBSU0sU0FBU04sSUFBSU8sS0FBSyxDQUFDO2dCQUN2Qk4sS0FBS08sR0FBRyxDQUFDUixLQUFLTTtnQkFDZEEsT0FBT0csT0FBTyxDQUFDLFNBQVVDLEtBQUssRUFBRUMsQ0FBQztvQkFDN0JMLE1BQU0sQ0FBQ0ssRUFBRSxHQUFHWixnQkFBZ0JXLE9BQU9UO2dCQUN2QztnQkFDQSxPQUFPSztZQUNYO1FBQ0EsS0FBSztZQUFtQjtnQkFDcEJMLE9BQU9BLFFBQVEsSUFBSUU7Z0JBQ25CLElBQUlGLEtBQUtHLEdBQUcsQ0FBQ0osTUFDVCxPQUFPQyxLQUFLSSxHQUFHLENBQUNMO2dCQUNwQixJQUFJWSxTQUFTakIsT0FBT2tCLE1BQU0sQ0FBQ2xCLE9BQU9tQixjQUFjLENBQUNkO2dCQUNqREMsS0FBS08sR0FBRyxDQUFDUixLQUFLWTtnQkFDZGpCLE9BQU9vQixJQUFJLENBQUNmLEtBQUtTLE9BQU8sQ0FBQyxTQUFVTyxHQUFHO29CQUNsQ0osTUFBTSxDQUFDSSxJQUFJLEdBQUdqQixnQkFBZ0JDLEdBQUcsQ0FBQ2dCLElBQUksRUFBRWY7Z0JBQzVDO2dCQUNBLE9BQU9XO1lBQ1g7UUFDQTtZQUNJLE9BQU9aO0lBQ2Y7QUFDSixFQUNBLHFDQUFxQyIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1cm5pLWFwcC8uL25vZGVfbW9kdWxlcy9AYXBvbGxvL2NsaWVudC91dGlsaXRpZXMvY29tbW9uL2Nsb25lRGVlcC5qcz84ODQwIl0sInNvdXJjZXNDb250ZW50IjpbInZhciB0b1N0cmluZyA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmc7XG5leHBvcnQgZnVuY3Rpb24gY2xvbmVEZWVwKHZhbHVlKSB7XG4gICAgcmV0dXJuIGNsb25lRGVlcEhlbHBlcih2YWx1ZSk7XG59XG5mdW5jdGlvbiBjbG9uZURlZXBIZWxwZXIodmFsLCBzZWVuKSB7XG4gICAgc3dpdGNoICh0b1N0cmluZy5jYWxsKHZhbCkpIHtcbiAgICAgICAgY2FzZSBcIltvYmplY3QgQXJyYXldXCI6IHtcbiAgICAgICAgICAgIHNlZW4gPSBzZWVuIHx8IG5ldyBNYXAoKTtcbiAgICAgICAgICAgIGlmIChzZWVuLmhhcyh2YWwpKVxuICAgICAgICAgICAgICAgIHJldHVybiBzZWVuLmdldCh2YWwpO1xuICAgICAgICAgICAgdmFyIGNvcHlfMSA9IHZhbC5zbGljZSgwKTtcbiAgICAgICAgICAgIHNlZW4uc2V0KHZhbCwgY29weV8xKTtcbiAgICAgICAgICAgIGNvcHlfMS5mb3JFYWNoKGZ1bmN0aW9uIChjaGlsZCwgaSkge1xuICAgICAgICAgICAgICAgIGNvcHlfMVtpXSA9IGNsb25lRGVlcEhlbHBlcihjaGlsZCwgc2Vlbik7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHJldHVybiBjb3B5XzE7XG4gICAgICAgIH1cbiAgICAgICAgY2FzZSBcIltvYmplY3QgT2JqZWN0XVwiOiB7XG4gICAgICAgICAgICBzZWVuID0gc2VlbiB8fCBuZXcgTWFwKCk7XG4gICAgICAgICAgICBpZiAoc2Vlbi5oYXModmFsKSlcbiAgICAgICAgICAgICAgICByZXR1cm4gc2Vlbi5nZXQodmFsKTtcbiAgICAgICAgICAgIHZhciBjb3B5XzIgPSBPYmplY3QuY3JlYXRlKE9iamVjdC5nZXRQcm90b3R5cGVPZih2YWwpKTtcbiAgICAgICAgICAgIHNlZW4uc2V0KHZhbCwgY29weV8yKTtcbiAgICAgICAgICAgIE9iamVjdC5rZXlzKHZhbCkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgICAgICAgICAgICAgY29weV8yW2tleV0gPSBjbG9uZURlZXBIZWxwZXIodmFsW2tleV0sIHNlZW4pO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXR1cm4gY29weV8yO1xuICAgICAgICB9XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gdmFsO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNsb25lRGVlcC5qcy5tYXAiXSwibmFtZXMiOlsidG9TdHJpbmciLCJPYmplY3QiLCJwcm90b3R5cGUiLCJjbG9uZURlZXAiLCJ2YWx1ZSIsImNsb25lRGVlcEhlbHBlciIsInZhbCIsInNlZW4iLCJjYWxsIiwiTWFwIiwiaGFzIiwiZ2V0IiwiY29weV8xIiwic2xpY2UiLCJzZXQiLCJmb3JFYWNoIiwiY2hpbGQiLCJpIiwiY29weV8yIiwiY3JlYXRlIiwiZ2V0UHJvdG90eXBlT2YiLCJrZXlzIiwia2V5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/utilities/common/cloneDeep.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/utilities/common/compact.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@apollo/client/utilities/common/compact.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   compact: () => (/* binding */ compact)\n/* harmony export */ });\nfunction compact() {\n    var objects = [];\n    for(var _i = 0; _i < arguments.length; _i++){\n        objects[_i] = arguments[_i];\n    }\n    var result = Object.create(null);\n    objects.forEach(function(obj) {\n        if (!obj) return;\n        Object.keys(obj).forEach(function(key) {\n            var value = obj[key];\n            if (value !== void 0) {\n                result[key] = value;\n            }\n        });\n    });\n    return result;\n} //# sourceMappingURL=compact.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFwb2xsby9jbGllbnQvdXRpbGl0aWVzL2NvbW1vbi9jb21wYWN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTyxTQUFTQTtJQUNaLElBQUlDLFVBQVUsRUFBRTtJQUNoQixJQUFLLElBQUlDLEtBQUssR0FBR0EsS0FBS0MsVUFBVUMsTUFBTSxFQUFFRixLQUFNO1FBQzFDRCxPQUFPLENBQUNDLEdBQUcsR0FBR0MsU0FBUyxDQUFDRCxHQUFHO0lBQy9CO0lBQ0EsSUFBSUcsU0FBU0MsT0FBT0MsTUFBTSxDQUFDO0lBQzNCTixRQUFRTyxPQUFPLENBQUMsU0FBVUMsR0FBRztRQUN6QixJQUFJLENBQUNBLEtBQ0Q7UUFDSkgsT0FBT0ksSUFBSSxDQUFDRCxLQUFLRCxPQUFPLENBQUMsU0FBVUcsR0FBRztZQUNsQyxJQUFJQyxRQUFRSCxHQUFHLENBQUNFLElBQUk7WUFDcEIsSUFBSUMsVUFBVSxLQUFLLEdBQUc7Z0JBQ2xCUCxNQUFNLENBQUNNLElBQUksR0FBR0M7WUFDbEI7UUFDSjtJQUNKO0lBQ0EsT0FBT1A7QUFDWCxFQUNBLG1DQUFtQyIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1cm5pLWFwcC8uL25vZGVfbW9kdWxlcy9AYXBvbGxvL2NsaWVudC91dGlsaXRpZXMvY29tbW9uL2NvbXBhY3QuanM/NmU2NCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gY29tcGFjdCgpIHtcbiAgICB2YXIgb2JqZWN0cyA9IFtdO1xuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBhcmd1bWVudHMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICAgIG9iamVjdHNbX2ldID0gYXJndW1lbnRzW19pXTtcbiAgICB9XG4gICAgdmFyIHJlc3VsdCA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gICAgb2JqZWN0cy5mb3JFYWNoKGZ1bmN0aW9uIChvYmopIHtcbiAgICAgICAgaWYgKCFvYmopXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIE9iamVjdC5rZXlzKG9iaikuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgICAgICAgICB2YXIgdmFsdWUgPSBvYmpba2V5XTtcbiAgICAgICAgICAgIGlmICh2YWx1ZSAhPT0gdm9pZCAwKSB7XG4gICAgICAgICAgICAgICAgcmVzdWx0W2tleV0gPSB2YWx1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfSk7XG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbXBhY3QuanMubWFwIl0sIm5hbWVzIjpbImNvbXBhY3QiLCJvYmplY3RzIiwiX2kiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJyZXN1bHQiLCJPYmplY3QiLCJjcmVhdGUiLCJmb3JFYWNoIiwib2JqIiwia2V5cyIsImtleSIsInZhbHVlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/utilities/common/compact.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/utilities/common/errorHandling.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@apollo/client/utilities/common/errorHandling.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getGraphQLErrorsFromResult: () => (/* binding */ getGraphQLErrorsFromResult),\n/* harmony export */   graphQLResultHasError: () => (/* binding */ graphQLResultHasError)\n/* harmony export */ });\n/* harmony import */ var _arrays_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./arrays.js */ \"(ssr)/./node_modules/@apollo/client/utilities/common/arrays.js\");\n/* harmony import */ var _incrementalResult_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./incrementalResult.js */ \"(ssr)/./node_modules/@apollo/client/utilities/common/incrementalResult.js\");\n\n\nfunction graphQLResultHasError(result) {\n    var errors = getGraphQLErrorsFromResult(result);\n    return (0,_arrays_js__WEBPACK_IMPORTED_MODULE_0__.isNonEmptyArray)(errors);\n}\nfunction getGraphQLErrorsFromResult(result) {\n    var graphQLErrors = (0,_arrays_js__WEBPACK_IMPORTED_MODULE_0__.isNonEmptyArray)(result.errors) ? result.errors.slice(0) : [];\n    if ((0,_incrementalResult_js__WEBPACK_IMPORTED_MODULE_1__.isExecutionPatchIncrementalResult)(result) && (0,_arrays_js__WEBPACK_IMPORTED_MODULE_0__.isNonEmptyArray)(result.incremental)) {\n        result.incremental.forEach(function(incrementalResult) {\n            if (incrementalResult.errors) {\n                graphQLErrors.push.apply(graphQLErrors, incrementalResult.errors);\n            }\n        });\n    }\n    return graphQLErrors;\n} //# sourceMappingURL=errorHandling.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFwb2xsby9jbGllbnQvdXRpbGl0aWVzL2NvbW1vbi9lcnJvckhhbmRsaW5nLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBOEM7QUFDNkI7QUFDcEUsU0FBU0Usc0JBQXNCQyxNQUFNO0lBQ3hDLElBQUlDLFNBQVNDLDJCQUEyQkY7SUFDeEMsT0FBT0gsMkRBQWVBLENBQUNJO0FBQzNCO0FBQ08sU0FBU0MsMkJBQTJCRixNQUFNO0lBQzdDLElBQUlHLGdCQUFnQk4sMkRBQWVBLENBQUNHLE9BQU9DLE1BQU0sSUFDM0NELE9BQU9DLE1BQU0sQ0FBQ0csS0FBSyxDQUFDLEtBQ3BCLEVBQUU7SUFDUixJQUFJTix3RkFBaUNBLENBQUNFLFdBQ2xDSCwyREFBZUEsQ0FBQ0csT0FBT0ssV0FBVyxHQUFHO1FBQ3JDTCxPQUFPSyxXQUFXLENBQUNDLE9BQU8sQ0FBQyxTQUFVQyxpQkFBaUI7WUFDbEQsSUFBSUEsa0JBQWtCTixNQUFNLEVBQUU7Z0JBQzFCRSxjQUFjSyxJQUFJLENBQUNDLEtBQUssQ0FBQ04sZUFBZUksa0JBQWtCTixNQUFNO1lBQ3BFO1FBQ0o7SUFDSjtJQUNBLE9BQU9FO0FBQ1gsRUFDQSx5Q0FBeUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdXJuaS1hcHAvLi9ub2RlX21vZHVsZXMvQGFwb2xsby9jbGllbnQvdXRpbGl0aWVzL2NvbW1vbi9lcnJvckhhbmRsaW5nLmpzPzdlZjQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNOb25FbXB0eUFycmF5IH0gZnJvbSBcIi4vYXJyYXlzLmpzXCI7XG5pbXBvcnQgeyBpc0V4ZWN1dGlvblBhdGNoSW5jcmVtZW50YWxSZXN1bHQgfSBmcm9tIFwiLi9pbmNyZW1lbnRhbFJlc3VsdC5qc1wiO1xuZXhwb3J0IGZ1bmN0aW9uIGdyYXBoUUxSZXN1bHRIYXNFcnJvcihyZXN1bHQpIHtcbiAgICB2YXIgZXJyb3JzID0gZ2V0R3JhcGhRTEVycm9yc0Zyb21SZXN1bHQocmVzdWx0KTtcbiAgICByZXR1cm4gaXNOb25FbXB0eUFycmF5KGVycm9ycyk7XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0R3JhcGhRTEVycm9yc0Zyb21SZXN1bHQocmVzdWx0KSB7XG4gICAgdmFyIGdyYXBoUUxFcnJvcnMgPSBpc05vbkVtcHR5QXJyYXkocmVzdWx0LmVycm9ycylcbiAgICAgICAgPyByZXN1bHQuZXJyb3JzLnNsaWNlKDApXG4gICAgICAgIDogW107XG4gICAgaWYgKGlzRXhlY3V0aW9uUGF0Y2hJbmNyZW1lbnRhbFJlc3VsdChyZXN1bHQpICYmXG4gICAgICAgIGlzTm9uRW1wdHlBcnJheShyZXN1bHQuaW5jcmVtZW50YWwpKSB7XG4gICAgICAgIHJlc3VsdC5pbmNyZW1lbnRhbC5mb3JFYWNoKGZ1bmN0aW9uIChpbmNyZW1lbnRhbFJlc3VsdCkge1xuICAgICAgICAgICAgaWYgKGluY3JlbWVudGFsUmVzdWx0LmVycm9ycykge1xuICAgICAgICAgICAgICAgIGdyYXBoUUxFcnJvcnMucHVzaC5hcHBseShncmFwaFFMRXJyb3JzLCBpbmNyZW1lbnRhbFJlc3VsdC5lcnJvcnMpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG4gICAgcmV0dXJuIGdyYXBoUUxFcnJvcnM7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1lcnJvckhhbmRsaW5nLmpzLm1hcCJdLCJuYW1lcyI6WyJpc05vbkVtcHR5QXJyYXkiLCJpc0V4ZWN1dGlvblBhdGNoSW5jcmVtZW50YWxSZXN1bHQiLCJncmFwaFFMUmVzdWx0SGFzRXJyb3IiLCJyZXN1bHQiLCJlcnJvcnMiLCJnZXRHcmFwaFFMRXJyb3JzRnJvbVJlc3VsdCIsImdyYXBoUUxFcnJvcnMiLCJzbGljZSIsImluY3JlbWVudGFsIiwiZm9yRWFjaCIsImluY3JlbWVudGFsUmVzdWx0IiwicHVzaCIsImFwcGx5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/utilities/common/errorHandling.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/utilities/common/incrementalResult.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@apollo/client/utilities/common/incrementalResult.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isApolloPayloadResult: () => (/* binding */ isApolloPayloadResult),\n/* harmony export */   isExecutionPatchIncrementalResult: () => (/* binding */ isExecutionPatchIncrementalResult),\n/* harmony export */   isExecutionPatchInitialResult: () => (/* binding */ isExecutionPatchInitialResult),\n/* harmony export */   isExecutionPatchResult: () => (/* binding */ isExecutionPatchResult),\n/* harmony export */   mergeIncrementalData: () => (/* binding */ mergeIncrementalData)\n/* harmony export */ });\n/* harmony import */ var _objects_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./objects.js */ \"(ssr)/./node_modules/@apollo/client/utilities/common/objects.js\");\n/* harmony import */ var _arrays_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./arrays.js */ \"(ssr)/./node_modules/@apollo/client/utilities/common/arrays.js\");\n/* harmony import */ var _mergeDeep_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mergeDeep.js */ \"(ssr)/./node_modules/@apollo/client/utilities/common/mergeDeep.js\");\n\n\n\nfunction isExecutionPatchIncrementalResult(value) {\n    return \"incremental\" in value;\n}\nfunction isExecutionPatchInitialResult(value) {\n    return \"hasNext\" in value && \"data\" in value;\n}\nfunction isExecutionPatchResult(value) {\n    return isExecutionPatchIncrementalResult(value) || isExecutionPatchInitialResult(value);\n}\nfunction isApolloPayloadResult(value) {\n    return (0,_objects_js__WEBPACK_IMPORTED_MODULE_0__.isNonNullObject)(value) && \"payload\" in value;\n}\nfunction mergeIncrementalData(prevResult, result) {\n    var mergedData = prevResult;\n    var merger = new _mergeDeep_js__WEBPACK_IMPORTED_MODULE_1__.DeepMerger();\n    if (isExecutionPatchIncrementalResult(result) && (0,_arrays_js__WEBPACK_IMPORTED_MODULE_2__.isNonEmptyArray)(result.incremental)) {\n        result.incremental.forEach(function(_a) {\n            var data = _a.data, path = _a.path;\n            for(var i = path.length - 1; i >= 0; --i){\n                var key = path[i];\n                var isNumericKey = !isNaN(+key);\n                var parent_1 = isNumericKey ? [] : {};\n                parent_1[key] = data;\n                data = parent_1;\n            }\n            mergedData = merger.merge(mergedData, data);\n        });\n    }\n    return mergedData;\n} //# sourceMappingURL=incrementalResult.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFwb2xsby9jbGllbnQvdXRpbGl0aWVzL2NvbW1vbi9pbmNyZW1lbnRhbFJlc3VsdC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUErQztBQUNEO0FBQ0Y7QUFDckMsU0FBU0csa0NBQWtDQyxLQUFLO0lBQ25ELE9BQU8saUJBQWlCQTtBQUM1QjtBQUNPLFNBQVNDLDhCQUE4QkQsS0FBSztJQUMvQyxPQUFPLGFBQWFBLFNBQVMsVUFBVUE7QUFDM0M7QUFDTyxTQUFTRSx1QkFBdUJGLEtBQUs7SUFDeEMsT0FBUUQsa0NBQWtDQyxVQUN0Q0MsOEJBQThCRDtBQUN0QztBQUNPLFNBQVNHLHNCQUFzQkgsS0FBSztJQUN2QyxPQUFPSiw0REFBZUEsQ0FBQ0ksVUFBVSxhQUFhQTtBQUNsRDtBQUNPLFNBQVNJLHFCQUFxQkMsVUFBVSxFQUFFQyxNQUFNO0lBQ25ELElBQUlDLGFBQWFGO0lBQ2pCLElBQUlHLFNBQVMsSUFBSVYscURBQVVBO0lBQzNCLElBQUlDLGtDQUFrQ08sV0FDbENULDJEQUFlQSxDQUFDUyxPQUFPRyxXQUFXLEdBQUc7UUFDckNILE9BQU9HLFdBQVcsQ0FBQ0MsT0FBTyxDQUFDLFNBQVVDLEVBQUU7WUFDbkMsSUFBSUMsT0FBT0QsR0FBR0MsSUFBSSxFQUFFQyxPQUFPRixHQUFHRSxJQUFJO1lBQ2xDLElBQUssSUFBSUMsSUFBSUQsS0FBS0UsTUFBTSxHQUFHLEdBQUdELEtBQUssR0FBRyxFQUFFQSxFQUFHO2dCQUN2QyxJQUFJRSxNQUFNSCxJQUFJLENBQUNDLEVBQUU7Z0JBQ2pCLElBQUlHLGVBQWUsQ0FBQ0MsTUFBTSxDQUFDRjtnQkFDM0IsSUFBSUcsV0FBV0YsZUFBZSxFQUFFLEdBQUcsQ0FBQztnQkFDcENFLFFBQVEsQ0FBQ0gsSUFBSSxHQUFHSjtnQkFDaEJBLE9BQU9PO1lBQ1g7WUFDQVosYUFBYUMsT0FBT1ksS0FBSyxDQUFDYixZQUFZSztRQUMxQztJQUNKO0lBQ0EsT0FBT0w7QUFDWCxFQUNBLDZDQUE2QyIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1cm5pLWFwcC8uL25vZGVfbW9kdWxlcy9AYXBvbGxvL2NsaWVudC91dGlsaXRpZXMvY29tbW9uL2luY3JlbWVudGFsUmVzdWx0LmpzPzJiODkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNOb25OdWxsT2JqZWN0IH0gZnJvbSBcIi4vb2JqZWN0cy5qc1wiO1xuaW1wb3J0IHsgaXNOb25FbXB0eUFycmF5IH0gZnJvbSBcIi4vYXJyYXlzLmpzXCI7XG5pbXBvcnQgeyBEZWVwTWVyZ2VyIH0gZnJvbSBcIi4vbWVyZ2VEZWVwLmpzXCI7XG5leHBvcnQgZnVuY3Rpb24gaXNFeGVjdXRpb25QYXRjaEluY3JlbWVudGFsUmVzdWx0KHZhbHVlKSB7XG4gICAgcmV0dXJuIFwiaW5jcmVtZW50YWxcIiBpbiB2YWx1ZTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc0V4ZWN1dGlvblBhdGNoSW5pdGlhbFJlc3VsdCh2YWx1ZSkge1xuICAgIHJldHVybiBcImhhc05leHRcIiBpbiB2YWx1ZSAmJiBcImRhdGFcIiBpbiB2YWx1ZTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc0V4ZWN1dGlvblBhdGNoUmVzdWx0KHZhbHVlKSB7XG4gICAgcmV0dXJuIChpc0V4ZWN1dGlvblBhdGNoSW5jcmVtZW50YWxSZXN1bHQodmFsdWUpIHx8XG4gICAgICAgIGlzRXhlY3V0aW9uUGF0Y2hJbml0aWFsUmVzdWx0KHZhbHVlKSk7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNBcG9sbG9QYXlsb2FkUmVzdWx0KHZhbHVlKSB7XG4gICAgcmV0dXJuIGlzTm9uTnVsbE9iamVjdCh2YWx1ZSkgJiYgXCJwYXlsb2FkXCIgaW4gdmFsdWU7XG59XG5leHBvcnQgZnVuY3Rpb24gbWVyZ2VJbmNyZW1lbnRhbERhdGEocHJldlJlc3VsdCwgcmVzdWx0KSB7XG4gICAgdmFyIG1lcmdlZERhdGEgPSBwcmV2UmVzdWx0O1xuICAgIHZhciBtZXJnZXIgPSBuZXcgRGVlcE1lcmdlcigpO1xuICAgIGlmIChpc0V4ZWN1dGlvblBhdGNoSW5jcmVtZW50YWxSZXN1bHQocmVzdWx0KSAmJlxuICAgICAgICBpc05vbkVtcHR5QXJyYXkocmVzdWx0LmluY3JlbWVudGFsKSkge1xuICAgICAgICByZXN1bHQuaW5jcmVtZW50YWwuZm9yRWFjaChmdW5jdGlvbiAoX2EpIHtcbiAgICAgICAgICAgIHZhciBkYXRhID0gX2EuZGF0YSwgcGF0aCA9IF9hLnBhdGg7XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gcGF0aC5sZW5ndGggLSAxOyBpID49IDA7IC0taSkge1xuICAgICAgICAgICAgICAgIHZhciBrZXkgPSBwYXRoW2ldO1xuICAgICAgICAgICAgICAgIHZhciBpc051bWVyaWNLZXkgPSAhaXNOYU4oK2tleSk7XG4gICAgICAgICAgICAgICAgdmFyIHBhcmVudF8xID0gaXNOdW1lcmljS2V5ID8gW10gOiB7fTtcbiAgICAgICAgICAgICAgICBwYXJlbnRfMVtrZXldID0gZGF0YTtcbiAgICAgICAgICAgICAgICBkYXRhID0gcGFyZW50XzE7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBtZXJnZWREYXRhID0gbWVyZ2VyLm1lcmdlKG1lcmdlZERhdGEsIGRhdGEpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgcmV0dXJuIG1lcmdlZERhdGE7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmNyZW1lbnRhbFJlc3VsdC5qcy5tYXAiXSwibmFtZXMiOlsiaXNOb25OdWxsT2JqZWN0IiwiaXNOb25FbXB0eUFycmF5IiwiRGVlcE1lcmdlciIsImlzRXhlY3V0aW9uUGF0Y2hJbmNyZW1lbnRhbFJlc3VsdCIsInZhbHVlIiwiaXNFeGVjdXRpb25QYXRjaEluaXRpYWxSZXN1bHQiLCJpc0V4ZWN1dGlvblBhdGNoUmVzdWx0IiwiaXNBcG9sbG9QYXlsb2FkUmVzdWx0IiwibWVyZ2VJbmNyZW1lbnRhbERhdGEiLCJwcmV2UmVzdWx0IiwicmVzdWx0IiwibWVyZ2VkRGF0YSIsIm1lcmdlciIsImluY3JlbWVudGFsIiwiZm9yRWFjaCIsIl9hIiwiZGF0YSIsInBhdGgiLCJpIiwibGVuZ3RoIiwia2V5IiwiaXNOdW1lcmljS2V5IiwiaXNOYU4iLCJwYXJlbnRfMSIsIm1lcmdlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/utilities/common/incrementalResult.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/utilities/common/makeUniqueId.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@apollo/client/utilities/common/makeUniqueId.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   makeUniqueId: () => (/* binding */ makeUniqueId)\n/* harmony export */ });\nvar prefixCounts = new Map();\nfunction makeUniqueId(prefix) {\n    var count = prefixCounts.get(prefix) || 1;\n    prefixCounts.set(prefix, count + 1);\n    return \"\".concat(prefix, \":\").concat(count, \":\").concat(Math.random().toString(36).slice(2));\n} //# sourceMappingURL=makeUniqueId.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFwb2xsby9jbGllbnQvdXRpbGl0aWVzL2NvbW1vbi9tYWtlVW5pcXVlSWQuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLElBQUlBLGVBQWUsSUFBSUM7QUFDaEIsU0FBU0MsYUFBYUMsTUFBTTtJQUMvQixJQUFJQyxRQUFRSixhQUFhSyxHQUFHLENBQUNGLFdBQVc7SUFDeENILGFBQWFNLEdBQUcsQ0FBQ0gsUUFBUUMsUUFBUTtJQUNqQyxPQUFPLEdBQUdHLE1BQU0sQ0FBQ0osUUFBUSxLQUFLSSxNQUFNLENBQUNILE9BQU8sS0FBS0csTUFBTSxDQUFDQyxLQUFLQyxNQUFNLEdBQUdDLFFBQVEsQ0FBQyxJQUFJQyxLQUFLLENBQUM7QUFDN0YsRUFDQSx3Q0FBd0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdXJuaS1hcHAvLi9ub2RlX21vZHVsZXMvQGFwb2xsby9jbGllbnQvdXRpbGl0aWVzL2NvbW1vbi9tYWtlVW5pcXVlSWQuanM/MjlhYSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgcHJlZml4Q291bnRzID0gbmV3IE1hcCgpO1xuZXhwb3J0IGZ1bmN0aW9uIG1ha2VVbmlxdWVJZChwcmVmaXgpIHtcbiAgICB2YXIgY291bnQgPSBwcmVmaXhDb3VudHMuZ2V0KHByZWZpeCkgfHwgMTtcbiAgICBwcmVmaXhDb3VudHMuc2V0KHByZWZpeCwgY291bnQgKyAxKTtcbiAgICByZXR1cm4gXCJcIi5jb25jYXQocHJlZml4LCBcIjpcIikuY29uY2F0KGNvdW50LCBcIjpcIikuY29uY2F0KE1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnNsaWNlKDIpKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW1ha2VVbmlxdWVJZC5qcy5tYXAiXSwibmFtZXMiOlsicHJlZml4Q291bnRzIiwiTWFwIiwibWFrZVVuaXF1ZUlkIiwicHJlZml4IiwiY291bnQiLCJnZXQiLCJzZXQiLCJjb25jYXQiLCJNYXRoIiwicmFuZG9tIiwidG9TdHJpbmciLCJzbGljZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/utilities/common/makeUniqueId.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/utilities/common/maybeDeepFreeze.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@apollo/client/utilities/common/maybeDeepFreeze.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   maybeDeepFreeze: () => (/* binding */ maybeDeepFreeze)\n/* harmony export */ });\n/* harmony import */ var _objects_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./objects.js */ \"(ssr)/./node_modules/@apollo/client/utilities/common/objects.js\");\n\nfunction deepFreeze(value) {\n    var workSet = new Set([\n        value\n    ]);\n    workSet.forEach(function(obj) {\n        if ((0,_objects_js__WEBPACK_IMPORTED_MODULE_0__.isNonNullObject)(obj) && shallowFreeze(obj) === obj) {\n            Object.getOwnPropertyNames(obj).forEach(function(name) {\n                if ((0,_objects_js__WEBPACK_IMPORTED_MODULE_0__.isNonNullObject)(obj[name])) workSet.add(obj[name]);\n            });\n        }\n    });\n    return value;\n}\nfunction shallowFreeze(obj) {\n    if (globalThis.__DEV__ !== false && !Object.isFrozen(obj)) {\n        try {\n            Object.freeze(obj);\n        } catch (e) {\n            if (e instanceof TypeError) return null;\n            throw e;\n        }\n    }\n    return obj;\n}\nfunction maybeDeepFreeze(obj) {\n    if (globalThis.__DEV__ !== false) {\n        deepFreeze(obj);\n    }\n    return obj;\n} //# sourceMappingURL=maybeDeepFreeze.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFwb2xsby9jbGllbnQvdXRpbGl0aWVzL2NvbW1vbi9tYXliZURlZXBGcmVlemUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBK0M7QUFDL0MsU0FBU0MsV0FBV0MsS0FBSztJQUNyQixJQUFJQyxVQUFVLElBQUlDLElBQUk7UUFBQ0Y7S0FBTTtJQUM3QkMsUUFBUUUsT0FBTyxDQUFDLFNBQVVDLEdBQUc7UUFDekIsSUFBSU4sNERBQWVBLENBQUNNLFFBQVFDLGNBQWNELFNBQVNBLEtBQUs7WUFDcERFLE9BQU9DLG1CQUFtQixDQUFDSCxLQUFLRCxPQUFPLENBQUMsU0FBVUssSUFBSTtnQkFDbEQsSUFBSVYsNERBQWVBLENBQUNNLEdBQUcsQ0FBQ0ksS0FBSyxHQUN6QlAsUUFBUVEsR0FBRyxDQUFDTCxHQUFHLENBQUNJLEtBQUs7WUFDN0I7UUFDSjtJQUNKO0lBQ0EsT0FBT1I7QUFDWDtBQUNBLFNBQVNLLGNBQWNELEdBQUc7SUFDdEIsSUFBSU0sV0FBV0MsT0FBTyxLQUFLLFNBQVMsQ0FBQ0wsT0FBT00sUUFBUSxDQUFDUixNQUFNO1FBQ3ZELElBQUk7WUFDQUUsT0FBT08sTUFBTSxDQUFDVDtRQUNsQixFQUNBLE9BQU9VLEdBQUc7WUFDTixJQUFJQSxhQUFhQyxXQUNiLE9BQU87WUFDWCxNQUFNRDtRQUNWO0lBQ0o7SUFDQSxPQUFPVjtBQUNYO0FBQ08sU0FBU1ksZ0JBQWdCWixHQUFHO0lBQy9CLElBQUlNLFdBQVdDLE9BQU8sS0FBSyxPQUFPO1FBQzlCWixXQUFXSztJQUNmO0lBQ0EsT0FBT0E7QUFDWCxFQUNBLDJDQUEyQyIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1cm5pLWFwcC8uL25vZGVfbW9kdWxlcy9AYXBvbGxvL2NsaWVudC91dGlsaXRpZXMvY29tbW9uL21heWJlRGVlcEZyZWV6ZS5qcz80NWQ1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzTm9uTnVsbE9iamVjdCB9IGZyb20gXCIuL29iamVjdHMuanNcIjtcbmZ1bmN0aW9uIGRlZXBGcmVlemUodmFsdWUpIHtcbiAgICB2YXIgd29ya1NldCA9IG5ldyBTZXQoW3ZhbHVlXSk7XG4gICAgd29ya1NldC5mb3JFYWNoKGZ1bmN0aW9uIChvYmopIHtcbiAgICAgICAgaWYgKGlzTm9uTnVsbE9iamVjdChvYmopICYmIHNoYWxsb3dGcmVlemUob2JqKSA9PT0gb2JqKSB7XG4gICAgICAgICAgICBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhvYmopLmZvckVhY2goZnVuY3Rpb24gKG5hbWUpIHtcbiAgICAgICAgICAgICAgICBpZiAoaXNOb25OdWxsT2JqZWN0KG9ialtuYW1lXSkpXG4gICAgICAgICAgICAgICAgICAgIHdvcmtTZXQuYWRkKG9ialtuYW1lXSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIHJldHVybiB2YWx1ZTtcbn1cbmZ1bmN0aW9uIHNoYWxsb3dGcmVlemUob2JqKSB7XG4gICAgaWYgKGdsb2JhbFRoaXMuX19ERVZfXyAhPT0gZmFsc2UgJiYgIU9iamVjdC5pc0Zyb3plbihvYmopKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBPYmplY3QuZnJlZXplKG9iaik7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIGlmIChlIGluc3RhbmNlb2YgVHlwZUVycm9yKVxuICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgICAgdGhyb3cgZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gb2JqO1xufVxuZXhwb3J0IGZ1bmN0aW9uIG1heWJlRGVlcEZyZWV6ZShvYmopIHtcbiAgICBpZiAoZ2xvYmFsVGhpcy5fX0RFVl9fICE9PSBmYWxzZSkge1xuICAgICAgICBkZWVwRnJlZXplKG9iaik7XG4gICAgfVxuICAgIHJldHVybiBvYmo7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1tYXliZURlZXBGcmVlemUuanMubWFwIl0sIm5hbWVzIjpbImlzTm9uTnVsbE9iamVjdCIsImRlZXBGcmVlemUiLCJ2YWx1ZSIsIndvcmtTZXQiLCJTZXQiLCJmb3JFYWNoIiwib2JqIiwic2hhbGxvd0ZyZWV6ZSIsIk9iamVjdCIsImdldE93blByb3BlcnR5TmFtZXMiLCJuYW1lIiwiYWRkIiwiZ2xvYmFsVGhpcyIsIl9fREVWX18iLCJpc0Zyb3plbiIsImZyZWV6ZSIsImUiLCJUeXBlRXJyb3IiLCJtYXliZURlZXBGcmVlemUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/utilities/common/maybeDeepFreeze.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/utilities/common/mergeDeep.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@apollo/client/utilities/common/mergeDeep.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DeepMerger: () => (/* binding */ DeepMerger),\n/* harmony export */   mergeDeep: () => (/* binding */ mergeDeep),\n/* harmony export */   mergeDeepArray: () => (/* binding */ mergeDeepArray)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.mjs\");\n/* harmony import */ var _objects_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./objects.js */ \"(ssr)/./node_modules/@apollo/client/utilities/common/objects.js\");\n\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction mergeDeep() {\n    var sources = [];\n    for(var _i = 0; _i < arguments.length; _i++){\n        sources[_i] = arguments[_i];\n    }\n    return mergeDeepArray(sources);\n}\nfunction mergeDeepArray(sources) {\n    var target = sources[0] || {};\n    var count = sources.length;\n    if (count > 1) {\n        var merger = new DeepMerger();\n        for(var i = 1; i < count; ++i){\n            target = merger.merge(target, sources[i]);\n        }\n    }\n    return target;\n}\nvar defaultReconciler = function(target, source, property) {\n    return this.merge(target[property], source[property]);\n};\nvar DeepMerger = function() {\n    function DeepMerger(reconciler) {\n        if (reconciler === void 0) {\n            reconciler = defaultReconciler;\n        }\n        this.reconciler = reconciler;\n        this.isObject = _objects_js__WEBPACK_IMPORTED_MODULE_0__.isNonNullObject;\n        this.pastCopies = new Set();\n    }\n    DeepMerger.prototype.merge = function(target, source) {\n        var _this = this;\n        var context = [];\n        for(var _i = 2; _i < arguments.length; _i++){\n            context[_i - 2] = arguments[_i];\n        }\n        if ((0,_objects_js__WEBPACK_IMPORTED_MODULE_0__.isNonNullObject)(source) && (0,_objects_js__WEBPACK_IMPORTED_MODULE_0__.isNonNullObject)(target)) {\n            Object.keys(source).forEach(function(sourceKey) {\n                if (hasOwnProperty.call(target, sourceKey)) {\n                    var targetValue = target[sourceKey];\n                    if (source[sourceKey] !== targetValue) {\n                        var result = _this.reconciler.apply(_this, (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)([\n                            target,\n                            source,\n                            sourceKey\n                        ], context, false));\n                        if (result !== targetValue) {\n                            target = _this.shallowCopyForMerge(target);\n                            target[sourceKey] = result;\n                        }\n                    }\n                } else {\n                    target = _this.shallowCopyForMerge(target);\n                    target[sourceKey] = source[sourceKey];\n                }\n            });\n            return target;\n        }\n        return source;\n    };\n    DeepMerger.prototype.shallowCopyForMerge = function(value) {\n        if ((0,_objects_js__WEBPACK_IMPORTED_MODULE_0__.isNonNullObject)(value)) {\n            if (!this.pastCopies.has(value)) {\n                if (Array.isArray(value)) {\n                    value = value.slice(0);\n                } else {\n                    value = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({\n                        __proto__: Object.getPrototypeOf(value)\n                    }, value);\n                }\n                this.pastCopies.add(value);\n            }\n        }\n        return value;\n    };\n    return DeepMerger;\n}();\n //# sourceMappingURL=mergeDeep.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFwb2xsby9jbGllbnQvdXRpbGl0aWVzL2NvbW1vbi9tZXJnZURlZXAuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBZ0Q7QUFDRDtBQUMvQyxJQUFJRyxpQkFBaUJDLE9BQU9DLFNBQVMsQ0FBQ0YsY0FBYztBQUM3QyxTQUFTRztJQUNaLElBQUlDLFVBQVUsRUFBRTtJQUNoQixJQUFLLElBQUlDLEtBQUssR0FBR0EsS0FBS0MsVUFBVUMsTUFBTSxFQUFFRixLQUFNO1FBQzFDRCxPQUFPLENBQUNDLEdBQUcsR0FBR0MsU0FBUyxDQUFDRCxHQUFHO0lBQy9CO0lBQ0EsT0FBT0csZUFBZUo7QUFDMUI7QUFDTyxTQUFTSSxlQUFlSixPQUFPO0lBQ2xDLElBQUlLLFNBQVNMLE9BQU8sQ0FBQyxFQUFFLElBQUksQ0FBQztJQUM1QixJQUFJTSxRQUFRTixRQUFRRyxNQUFNO0lBQzFCLElBQUlHLFFBQVEsR0FBRztRQUNYLElBQUlDLFNBQVMsSUFBSUM7UUFDakIsSUFBSyxJQUFJQyxJQUFJLEdBQUdBLElBQUlILE9BQU8sRUFBRUcsRUFBRztZQUM1QkosU0FBU0UsT0FBT0csS0FBSyxDQUFDTCxRQUFRTCxPQUFPLENBQUNTLEVBQUU7UUFDNUM7SUFDSjtJQUNBLE9BQU9KO0FBQ1g7QUFDQSxJQUFJTSxvQkFBb0IsU0FBVU4sTUFBTSxFQUFFTyxNQUFNLEVBQUVDLFFBQVE7SUFDdEQsT0FBTyxJQUFJLENBQUNILEtBQUssQ0FBQ0wsTUFBTSxDQUFDUSxTQUFTLEVBQUVELE1BQU0sQ0FBQ0MsU0FBUztBQUN4RDtBQUNBLElBQUlMLGFBQWM7SUFDZCxTQUFTQSxXQUFXTSxVQUFVO1FBQzFCLElBQUlBLGVBQWUsS0FBSyxHQUFHO1lBQUVBLGFBQWFIO1FBQW1CO1FBQzdELElBQUksQ0FBQ0csVUFBVSxHQUFHQTtRQUNsQixJQUFJLENBQUNDLFFBQVEsR0FBR3BCLHdEQUFlQTtRQUMvQixJQUFJLENBQUNxQixVQUFVLEdBQUcsSUFBSUM7SUFDMUI7SUFDQVQsV0FBV1YsU0FBUyxDQUFDWSxLQUFLLEdBQUcsU0FBVUwsTUFBTSxFQUFFTyxNQUFNO1FBQ2pELElBQUlNLFFBQVEsSUFBSTtRQUNoQixJQUFJQyxVQUFVLEVBQUU7UUFDaEIsSUFBSyxJQUFJbEIsS0FBSyxHQUFHQSxLQUFLQyxVQUFVQyxNQUFNLEVBQUVGLEtBQU07WUFDMUNrQixPQUFPLENBQUNsQixLQUFLLEVBQUUsR0FBR0MsU0FBUyxDQUFDRCxHQUFHO1FBQ25DO1FBQ0EsSUFBSU4sNERBQWVBLENBQUNpQixXQUFXakIsNERBQWVBLENBQUNVLFNBQVM7WUFDcERSLE9BQU91QixJQUFJLENBQUNSLFFBQVFTLE9BQU8sQ0FBQyxTQUFVQyxTQUFTO2dCQUMzQyxJQUFJMUIsZUFBZTJCLElBQUksQ0FBQ2xCLFFBQVFpQixZQUFZO29CQUN4QyxJQUFJRSxjQUFjbkIsTUFBTSxDQUFDaUIsVUFBVTtvQkFDbkMsSUFBSVYsTUFBTSxDQUFDVSxVQUFVLEtBQUtFLGFBQWE7d0JBQ25DLElBQUlDLFNBQVNQLE1BQU1KLFVBQVUsQ0FBQ1ksS0FBSyxDQUFDUixPQUFPeEIsb0RBQWFBLENBQUM7NEJBQUNXOzRCQUN0RE87NEJBQ0FVO3lCQUFVLEVBQUVILFNBQVM7d0JBQ3pCLElBQUlNLFdBQVdELGFBQWE7NEJBQ3hCbkIsU0FBU2EsTUFBTVMsbUJBQW1CLENBQUN0Qjs0QkFDbkNBLE1BQU0sQ0FBQ2lCLFVBQVUsR0FBR0c7d0JBQ3hCO29CQUNKO2dCQUNKLE9BQ0s7b0JBQ0RwQixTQUFTYSxNQUFNUyxtQkFBbUIsQ0FBQ3RCO29CQUNuQ0EsTUFBTSxDQUFDaUIsVUFBVSxHQUFHVixNQUFNLENBQUNVLFVBQVU7Z0JBQ3pDO1lBQ0o7WUFDQSxPQUFPakI7UUFDWDtRQUNBLE9BQU9PO0lBQ1g7SUFDQUosV0FBV1YsU0FBUyxDQUFDNkIsbUJBQW1CLEdBQUcsU0FBVUMsS0FBSztRQUN0RCxJQUFJakMsNERBQWVBLENBQUNpQyxRQUFRO1lBQ3hCLElBQUksQ0FBQyxJQUFJLENBQUNaLFVBQVUsQ0FBQ2EsR0FBRyxDQUFDRCxRQUFRO2dCQUM3QixJQUFJRSxNQUFNQyxPQUFPLENBQUNILFFBQVE7b0JBQ3RCQSxRQUFRQSxNQUFNSSxLQUFLLENBQUM7Z0JBQ3hCLE9BQ0s7b0JBQ0RKLFFBQVFuQywrQ0FBUUEsQ0FBQzt3QkFBRXdDLFdBQVdwQyxPQUFPcUMsY0FBYyxDQUFDTjtvQkFBTyxHQUFHQTtnQkFDbEU7Z0JBQ0EsSUFBSSxDQUFDWixVQUFVLENBQUNtQixHQUFHLENBQUNQO1lBQ3hCO1FBQ0o7UUFDQSxPQUFPQTtJQUNYO0lBQ0EsT0FBT3BCO0FBQ1g7QUFDc0IsQ0FDdEIscUNBQXFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVybmktYXBwLy4vbm9kZV9tb2R1bGVzL0BhcG9sbG8vY2xpZW50L3V0aWxpdGllcy9jb21tb24vbWVyZ2VEZWVwLmpzP2JkZmIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgX19hc3NpZ24sIF9fc3ByZWFkQXJyYXkgfSBmcm9tIFwidHNsaWJcIjtcbmltcG9ydCB7IGlzTm9uTnVsbE9iamVjdCB9IGZyb20gXCIuL29iamVjdHMuanNcIjtcbnZhciBoYXNPd25Qcm9wZXJ0eSA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG5leHBvcnQgZnVuY3Rpb24gbWVyZ2VEZWVwKCkge1xuICAgIHZhciBzb3VyY2VzID0gW107XG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGFyZ3VtZW50cy5sZW5ndGg7IF9pKyspIHtcbiAgICAgICAgc291cmNlc1tfaV0gPSBhcmd1bWVudHNbX2ldO1xuICAgIH1cbiAgICByZXR1cm4gbWVyZ2VEZWVwQXJyYXkoc291cmNlcyk7XG59XG5leHBvcnQgZnVuY3Rpb24gbWVyZ2VEZWVwQXJyYXkoc291cmNlcykge1xuICAgIHZhciB0YXJnZXQgPSBzb3VyY2VzWzBdIHx8IHt9O1xuICAgIHZhciBjb3VudCA9IHNvdXJjZXMubGVuZ3RoO1xuICAgIGlmIChjb3VudCA+IDEpIHtcbiAgICAgICAgdmFyIG1lcmdlciA9IG5ldyBEZWVwTWVyZ2VyKCk7XG4gICAgICAgIGZvciAodmFyIGkgPSAxOyBpIDwgY291bnQ7ICsraSkge1xuICAgICAgICAgICAgdGFyZ2V0ID0gbWVyZ2VyLm1lcmdlKHRhcmdldCwgc291cmNlc1tpXSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRhcmdldDtcbn1cbnZhciBkZWZhdWx0UmVjb25jaWxlciA9IGZ1bmN0aW9uICh0YXJnZXQsIHNvdXJjZSwgcHJvcGVydHkpIHtcbiAgICByZXR1cm4gdGhpcy5tZXJnZSh0YXJnZXRbcHJvcGVydHldLCBzb3VyY2VbcHJvcGVydHldKTtcbn07XG52YXIgRGVlcE1lcmdlciA9IChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gRGVlcE1lcmdlcihyZWNvbmNpbGVyKSB7XG4gICAgICAgIGlmIChyZWNvbmNpbGVyID09PSB2b2lkIDApIHsgcmVjb25jaWxlciA9IGRlZmF1bHRSZWNvbmNpbGVyOyB9XG4gICAgICAgIHRoaXMucmVjb25jaWxlciA9IHJlY29uY2lsZXI7XG4gICAgICAgIHRoaXMuaXNPYmplY3QgPSBpc05vbk51bGxPYmplY3Q7XG4gICAgICAgIHRoaXMucGFzdENvcGllcyA9IG5ldyBTZXQoKTtcbiAgICB9XG4gICAgRGVlcE1lcmdlci5wcm90b3R5cGUubWVyZ2UgPSBmdW5jdGlvbiAodGFyZ2V0LCBzb3VyY2UpIHtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgdmFyIGNvbnRleHQgPSBbXTtcbiAgICAgICAgZm9yICh2YXIgX2kgPSAyOyBfaSA8IGFyZ3VtZW50cy5sZW5ndGg7IF9pKyspIHtcbiAgICAgICAgICAgIGNvbnRleHRbX2kgLSAyXSA9IGFyZ3VtZW50c1tfaV07XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGlzTm9uTnVsbE9iamVjdChzb3VyY2UpICYmIGlzTm9uTnVsbE9iamVjdCh0YXJnZXQpKSB7XG4gICAgICAgICAgICBPYmplY3Qua2V5cyhzb3VyY2UpLmZvckVhY2goZnVuY3Rpb24gKHNvdXJjZUtleSkge1xuICAgICAgICAgICAgICAgIGlmIChoYXNPd25Qcm9wZXJ0eS5jYWxsKHRhcmdldCwgc291cmNlS2V5KSkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgdGFyZ2V0VmFsdWUgPSB0YXJnZXRbc291cmNlS2V5XTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHNvdXJjZVtzb3VyY2VLZXldICE9PSB0YXJnZXRWYWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHJlc3VsdCA9IF90aGlzLnJlY29uY2lsZXIuYXBwbHkoX3RoaXMsIF9fc3ByZWFkQXJyYXkoW3RhcmdldCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzb3VyY2UsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc291cmNlS2V5XSwgY29udGV4dCwgZmFsc2UpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChyZXN1bHQgIT09IHRhcmdldFZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0ID0gX3RoaXMuc2hhbGxvd0NvcHlGb3JNZXJnZSh0YXJnZXQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldFtzb3VyY2VLZXldID0gcmVzdWx0O1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB0YXJnZXQgPSBfdGhpcy5zaGFsbG93Q29weUZvck1lcmdlKHRhcmdldCk7XG4gICAgICAgICAgICAgICAgICAgIHRhcmdldFtzb3VyY2VLZXldID0gc291cmNlW3NvdXJjZUtleV07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXR1cm4gdGFyZ2V0O1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBzb3VyY2U7XG4gICAgfTtcbiAgICBEZWVwTWVyZ2VyLnByb3RvdHlwZS5zaGFsbG93Q29weUZvck1lcmdlID0gZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgICAgIGlmIChpc05vbk51bGxPYmplY3QodmFsdWUpKSB7XG4gICAgICAgICAgICBpZiAoIXRoaXMucGFzdENvcGllcy5oYXModmFsdWUpKSB7XG4gICAgICAgICAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkodmFsdWUpKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhbHVlID0gdmFsdWUuc2xpY2UoMCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB2YWx1ZSA9IF9fYXNzaWduKHsgX19wcm90b19fOiBPYmplY3QuZ2V0UHJvdG90eXBlT2YodmFsdWUpIH0sIHZhbHVlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGhpcy5wYXN0Q29waWVzLmFkZCh2YWx1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH07XG4gICAgcmV0dXJuIERlZXBNZXJnZXI7XG59KCkpO1xuZXhwb3J0IHsgRGVlcE1lcmdlciB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bWVyZ2VEZWVwLmpzLm1hcCJdLCJuYW1lcyI6WyJfX2Fzc2lnbiIsIl9fc3ByZWFkQXJyYXkiLCJpc05vbk51bGxPYmplY3QiLCJoYXNPd25Qcm9wZXJ0eSIsIk9iamVjdCIsInByb3RvdHlwZSIsIm1lcmdlRGVlcCIsInNvdXJjZXMiLCJfaSIsImFyZ3VtZW50cyIsImxlbmd0aCIsIm1lcmdlRGVlcEFycmF5IiwidGFyZ2V0IiwiY291bnQiLCJtZXJnZXIiLCJEZWVwTWVyZ2VyIiwiaSIsIm1lcmdlIiwiZGVmYXVsdFJlY29uY2lsZXIiLCJzb3VyY2UiLCJwcm9wZXJ0eSIsInJlY29uY2lsZXIiLCJpc09iamVjdCIsInBhc3RDb3BpZXMiLCJTZXQiLCJfdGhpcyIsImNvbnRleHQiLCJrZXlzIiwiZm9yRWFjaCIsInNvdXJjZUtleSIsImNhbGwiLCJ0YXJnZXRWYWx1ZSIsInJlc3VsdCIsImFwcGx5Iiwic2hhbGxvd0NvcHlGb3JNZXJnZSIsInZhbHVlIiwiaGFzIiwiQXJyYXkiLCJpc0FycmF5Iiwic2xpY2UiLCJfX3Byb3RvX18iLCJnZXRQcm90b3R5cGVPZiIsImFkZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/utilities/common/mergeDeep.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/utilities/common/mergeOptions.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@apollo/client/utilities/common/mergeOptions.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mergeOptions: () => (/* binding */ mergeOptions)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.mjs\");\n/* harmony import */ var _compact_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./compact.js */ \"(ssr)/./node_modules/@apollo/client/utilities/common/compact.js\");\n\n\nfunction mergeOptions(defaults, options) {\n    return (0,_compact_js__WEBPACK_IMPORTED_MODULE_0__.compact)(defaults, options, options.variables && {\n        variables: (0,_compact_js__WEBPACK_IMPORTED_MODULE_0__.compact)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, defaults && defaults.variables), options.variables))\n    });\n} //# sourceMappingURL=mergeOptions.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFwb2xsby9jbGllbnQvdXRpbGl0aWVzL2NvbW1vbi9tZXJnZU9wdGlvbnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWlDO0FBQ007QUFDaEMsU0FBU0UsYUFBYUMsUUFBUSxFQUFFQyxPQUFPO0lBQzFDLE9BQU9ILG9EQUFPQSxDQUFDRSxVQUFVQyxTQUFTQSxRQUFRQyxTQUFTLElBQUk7UUFDbkRBLFdBQVdKLG9EQUFPQSxDQUFDRCwrQ0FBUUEsQ0FBQ0EsK0NBQVFBLENBQUMsQ0FBQyxHQUFJRyxZQUFZQSxTQUFTRSxTQUFTLEdBQUlELFFBQVFDLFNBQVM7SUFDakc7QUFDSixFQUNBLHdDQUF3QyIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1cm5pLWFwcC8uL25vZGVfbW9kdWxlcy9AYXBvbGxvL2NsaWVudC91dGlsaXRpZXMvY29tbW9uL21lcmdlT3B0aW9ucy5qcz8wMmJkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IF9fYXNzaWduIH0gZnJvbSBcInRzbGliXCI7XG5pbXBvcnQgeyBjb21wYWN0IH0gZnJvbSBcIi4vY29tcGFjdC5qc1wiO1xuZXhwb3J0IGZ1bmN0aW9uIG1lcmdlT3B0aW9ucyhkZWZhdWx0cywgb3B0aW9ucykge1xuICAgIHJldHVybiBjb21wYWN0KGRlZmF1bHRzLCBvcHRpb25zLCBvcHRpb25zLnZhcmlhYmxlcyAmJiB7XG4gICAgICAgIHZhcmlhYmxlczogY29tcGFjdChfX2Fzc2lnbihfX2Fzc2lnbih7fSwgKGRlZmF1bHRzICYmIGRlZmF1bHRzLnZhcmlhYmxlcykpLCBvcHRpb25zLnZhcmlhYmxlcykpLFxuICAgIH0pO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bWVyZ2VPcHRpb25zLmpzLm1hcCJdLCJuYW1lcyI6WyJfX2Fzc2lnbiIsImNvbXBhY3QiLCJtZXJnZU9wdGlvbnMiLCJkZWZhdWx0cyIsIm9wdGlvbnMiLCJ2YXJpYWJsZXMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/utilities/common/mergeOptions.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/utilities/common/objects.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@apollo/client/utilities/common/objects.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isNonNullObject: () => (/* binding */ isNonNullObject),\n/* harmony export */   isPlainObject: () => (/* binding */ isPlainObject)\n/* harmony export */ });\nfunction isNonNullObject(obj) {\n    return obj !== null && typeof obj === \"object\";\n}\nfunction isPlainObject(obj) {\n    return obj !== null && typeof obj === \"object\" && (Object.getPrototypeOf(obj) === Object.prototype || Object.getPrototypeOf(obj) === null);\n} //# sourceMappingURL=objects.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFwb2xsby9jbGllbnQvdXRpbGl0aWVzL2NvbW1vbi9vYmplY3RzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQU8sU0FBU0EsZ0JBQWdCQyxHQUFHO0lBQy9CLE9BQU9BLFFBQVEsUUFBUSxPQUFPQSxRQUFRO0FBQzFDO0FBQ08sU0FBU0MsY0FBY0QsR0FBRztJQUM3QixPQUFRQSxRQUFRLFFBQ1osT0FBT0EsUUFBUSxZQUNkRSxDQUFBQSxPQUFPQyxjQUFjLENBQUNILFNBQVNFLE9BQU9FLFNBQVMsSUFDNUNGLE9BQU9DLGNBQWMsQ0FBQ0gsU0FBUyxJQUFHO0FBQzlDLEVBQ0EsbUNBQW1DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVybmktYXBwLy4vbm9kZV9tb2R1bGVzL0BhcG9sbG8vY2xpZW50L3V0aWxpdGllcy9jb21tb24vb2JqZWN0cy5qcz8yMTU4Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBpc05vbk51bGxPYmplY3Qob2JqKSB7XG4gICAgcmV0dXJuIG9iaiAhPT0gbnVsbCAmJiB0eXBlb2Ygb2JqID09PSBcIm9iamVjdFwiO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzUGxhaW5PYmplY3Qob2JqKSB7XG4gICAgcmV0dXJuIChvYmogIT09IG51bGwgJiZcbiAgICAgICAgdHlwZW9mIG9iaiA9PT0gXCJvYmplY3RcIiAmJlxuICAgICAgICAoT2JqZWN0LmdldFByb3RvdHlwZU9mKG9iaikgPT09IE9iamVjdC5wcm90b3R5cGUgfHxcbiAgICAgICAgICAgIE9iamVjdC5nZXRQcm90b3R5cGVPZihvYmopID09PSBudWxsKSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1vYmplY3RzLmpzLm1hcCJdLCJuYW1lcyI6WyJpc05vbk51bGxPYmplY3QiLCJvYmoiLCJpc1BsYWluT2JqZWN0IiwiT2JqZWN0IiwiZ2V0UHJvdG90eXBlT2YiLCJwcm90b3R5cGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/utilities/common/objects.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/utilities/common/stringifyForDisplay.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@apollo/client/utilities/common/stringifyForDisplay.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   stringifyForDisplay: () => (/* binding */ stringifyForDisplay)\n/* harmony export */ });\n/* harmony import */ var _makeUniqueId_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./makeUniqueId.js */ \"(ssr)/./node_modules/@apollo/client/utilities/common/makeUniqueId.js\");\n\nfunction stringifyForDisplay(value, space) {\n    if (space === void 0) {\n        space = 0;\n    }\n    var undefId = (0,_makeUniqueId_js__WEBPACK_IMPORTED_MODULE_0__.makeUniqueId)(\"stringifyForDisplay\");\n    return JSON.stringify(value, function(key, value) {\n        return value === void 0 ? undefId : value;\n    }, space).split(JSON.stringify(undefId)).join(\"<undefined>\");\n} //# sourceMappingURL=stringifyForDisplay.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFwb2xsby9jbGllbnQvdXRpbGl0aWVzL2NvbW1vbi9zdHJpbmdpZnlGb3JEaXNwbGF5LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWlEO0FBQzFDLFNBQVNDLG9CQUFvQkMsS0FBSyxFQUFFQyxLQUFLO0lBQzVDLElBQUlBLFVBQVUsS0FBSyxHQUFHO1FBQUVBLFFBQVE7SUFBRztJQUNuQyxJQUFJQyxVQUFVSiw4REFBWUEsQ0FBQztJQUMzQixPQUFPSyxLQUFLQyxTQUFTLENBQUNKLE9BQU8sU0FBVUssR0FBRyxFQUFFTCxLQUFLO1FBQzdDLE9BQU9BLFVBQVUsS0FBSyxJQUFJRSxVQUFVRjtJQUN4QyxHQUFHQyxPQUNFSyxLQUFLLENBQUNILEtBQUtDLFNBQVMsQ0FBQ0YsVUFDckJLLElBQUksQ0FBQztBQUNkLEVBQ0EsK0NBQStDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVybmktYXBwLy4vbm9kZV9tb2R1bGVzL0BhcG9sbG8vY2xpZW50L3V0aWxpdGllcy9jb21tb24vc3RyaW5naWZ5Rm9yRGlzcGxheS5qcz8yMmM1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG1ha2VVbmlxdWVJZCB9IGZyb20gXCIuL21ha2VVbmlxdWVJZC5qc1wiO1xuZXhwb3J0IGZ1bmN0aW9uIHN0cmluZ2lmeUZvckRpc3BsYXkodmFsdWUsIHNwYWNlKSB7XG4gICAgaWYgKHNwYWNlID09PSB2b2lkIDApIHsgc3BhY2UgPSAwOyB9XG4gICAgdmFyIHVuZGVmSWQgPSBtYWtlVW5pcXVlSWQoXCJzdHJpbmdpZnlGb3JEaXNwbGF5XCIpO1xuICAgIHJldHVybiBKU09OLnN0cmluZ2lmeSh2YWx1ZSwgZnVuY3Rpb24gKGtleSwgdmFsdWUpIHtcbiAgICAgICAgcmV0dXJuIHZhbHVlID09PSB2b2lkIDAgPyB1bmRlZklkIDogdmFsdWU7XG4gICAgfSwgc3BhY2UpXG4gICAgICAgIC5zcGxpdChKU09OLnN0cmluZ2lmeSh1bmRlZklkKSlcbiAgICAgICAgLmpvaW4oXCI8dW5kZWZpbmVkPlwiKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXN0cmluZ2lmeUZvckRpc3BsYXkuanMubWFwIl0sIm5hbWVzIjpbIm1ha2VVbmlxdWVJZCIsInN0cmluZ2lmeUZvckRpc3BsYXkiLCJ2YWx1ZSIsInNwYWNlIiwidW5kZWZJZCIsIkpTT04iLCJzdHJpbmdpZnkiLCJrZXkiLCJzcGxpdCIsImpvaW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/utilities/common/stringifyForDisplay.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/utilities/globals/global.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@apollo/client/utilities/globals/global.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _maybe_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./maybe.js */ \"(ssr)/./node_modules/@apollo/client/utilities/globals/maybe.js\");\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_maybe_js__WEBPACK_IMPORTED_MODULE_0__.maybe)(function() {\n    return globalThis;\n}) || (0,_maybe_js__WEBPACK_IMPORTED_MODULE_0__.maybe)(function() {\n    return window;\n}) || (0,_maybe_js__WEBPACK_IMPORTED_MODULE_0__.maybe)(function() {\n    return self;\n}) || (0,_maybe_js__WEBPACK_IMPORTED_MODULE_0__.maybe)(function() {\n    return global;\n}) || (0,_maybe_js__WEBPACK_IMPORTED_MODULE_0__.maybe)(function() {\n    return _maybe_js__WEBPACK_IMPORTED_MODULE_0__.maybe.constructor(\"return this\")();\n})); //# sourceMappingURL=global.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFwb2xsby9jbGllbnQvdXRpbGl0aWVzL2dsb2JhbHMvZ2xvYmFsLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQW1DO0FBQ25DLGlFQUFnQkEsZ0RBQUtBLENBQUM7SUFBYyxPQUFPQztBQUFZLE1BQ25ERCxnREFBS0EsQ0FBQztJQUFjLE9BQU9FO0FBQVEsTUFDbkNGLGdEQUFLQSxDQUFDO0lBQWMsT0FBT0c7QUFBTSxNQUNqQ0gsZ0RBQUtBLENBQUM7SUFBYyxPQUFPSTtBQUFRLE1BQU1KLGdEQUFLQSxDQUFDO0lBQy9DLE9BQU9BLDRDQUFLQSxDQUFDSyxXQUFXLENBQUM7QUFDN0IsRUFBRSxFQUFFLENBQ0osa0NBQWtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVybmktYXBwLy4vbm9kZV9tb2R1bGVzL0BhcG9sbG8vY2xpZW50L3V0aWxpdGllcy9nbG9iYWxzL2dsb2JhbC5qcz84NDg4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG1heWJlIH0gZnJvbSBcIi4vbWF5YmUuanNcIjtcbmV4cG9ydCBkZWZhdWx0IChtYXliZShmdW5jdGlvbiAoKSB7IHJldHVybiBnbG9iYWxUaGlzOyB9KSB8fFxuICAgIG1heWJlKGZ1bmN0aW9uICgpIHsgcmV0dXJuIHdpbmRvdzsgfSkgfHxcbiAgICBtYXliZShmdW5jdGlvbiAoKSB7IHJldHVybiBzZWxmOyB9KSB8fFxuICAgIG1heWJlKGZ1bmN0aW9uICgpIHsgcmV0dXJuIGdsb2JhbDsgfSkgfHwgbWF5YmUoZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBtYXliZS5jb25zdHJ1Y3RvcihcInJldHVybiB0aGlzXCIpKCk7XG59KSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nbG9iYWwuanMubWFwIl0sIm5hbWVzIjpbIm1heWJlIiwiZ2xvYmFsVGhpcyIsIndpbmRvdyIsInNlbGYiLCJnbG9iYWwiLCJjb25zdHJ1Y3RvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/utilities/globals/global.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/utilities/globals/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/@apollo/client/utilities/globals/index.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEV: () => (/* binding */ DEV),\n/* harmony export */   InvariantError: () => (/* reexport safe */ _invariantWrappers_js__WEBPACK_IMPORTED_MODULE_0__.InvariantError),\n/* harmony export */   __DEV__: () => (/* binding */ DEV),\n/* harmony export */   global: () => (/* reexport safe */ _global_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]),\n/* harmony export */   invariant: () => (/* reexport safe */ _invariantWrappers_js__WEBPACK_IMPORTED_MODULE_0__.invariant),\n/* harmony export */   maybe: () => (/* reexport safe */ _maybe_js__WEBPACK_IMPORTED_MODULE_1__.maybe),\n/* harmony export */   newInvariantError: () => (/* reexport safe */ _invariantWrappers_js__WEBPACK_IMPORTED_MODULE_0__.newInvariantError)\n/* harmony export */ });\n/* harmony import */ var _invariantWrappers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./invariantWrappers.js */ \"(ssr)/./node_modules/@apollo/client/utilities/globals/invariantWrappers.js\");\n/* harmony import */ var _maybe_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./maybe.js */ \"(ssr)/./node_modules/@apollo/client/utilities/globals/maybe.js\");\n/* harmony import */ var _global_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./global.js */ \"(ssr)/./node_modules/@apollo/client/utilities/globals/global.js\");\n\n\n\n\nvar DEV = globalThis.__DEV__ !== false;\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFwb2xsby9jbGllbnQvdXRpbGl0aWVzL2dsb2JhbHMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUF1RjtBQUNwRDtBQUNhO0FBQ1E7QUFDakQsSUFBSU0sTUFBTUMsV0FBV0MsT0FBTyxLQUFLLE1BQU07QUFDcEIsQ0FDMUIsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVybmktYXBwLy4vbm9kZV9tb2R1bGVzL0BhcG9sbG8vY2xpZW50L3V0aWxpdGllcy9nbG9iYWxzL2luZGV4LmpzP2QzODIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaW52YXJpYW50LCBuZXdJbnZhcmlhbnRFcnJvciwgSW52YXJpYW50RXJyb3IsIH0gZnJvbSBcIi4vaW52YXJpYW50V3JhcHBlcnMuanNcIjtcbmV4cG9ydCB7IG1heWJlIH0gZnJvbSBcIi4vbWF5YmUuanNcIjtcbmV4cG9ydCB7IGRlZmF1bHQgYXMgZ2xvYmFsIH0gZnJvbSBcIi4vZ2xvYmFsLmpzXCI7XG5leHBvcnQgeyBpbnZhcmlhbnQsIG5ld0ludmFyaWFudEVycm9yLCBJbnZhcmlhbnRFcnJvciB9O1xuZXhwb3J0IHZhciBERVYgPSBnbG9iYWxUaGlzLl9fREVWX18gIT09IGZhbHNlO1xuZXhwb3J0IHsgREVWIGFzIF9fREVWX18gfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6WyJpbnZhcmlhbnQiLCJuZXdJbnZhcmlhbnRFcnJvciIsIkludmFyaWFudEVycm9yIiwibWF5YmUiLCJkZWZhdWx0IiwiZ2xvYmFsIiwiREVWIiwiZ2xvYmFsVGhpcyIsIl9fREVWX18iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/utilities/globals/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/utilities/globals/invariantWrappers.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@apollo/client/utilities/globals/invariantWrappers.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ApolloErrorMessageHandler: () => (/* binding */ ApolloErrorMessageHandler),\n/* harmony export */   InvariantError: () => (/* reexport safe */ ts_invariant__WEBPACK_IMPORTED_MODULE_0__.InvariantError),\n/* harmony export */   invariant: () => (/* binding */ invariant),\n/* harmony export */   newInvariantError: () => (/* binding */ newInvariantError)\n/* harmony export */ });\n/* harmony import */ var ts_invariant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ts-invariant */ \"(ssr)/./node_modules/ts-invariant/lib/invariant.js\");\n/* harmony import */ var _version_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../version.js */ \"(ssr)/./node_modules/@apollo/client/version.js\");\n/* harmony import */ var _global_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./global.js */ \"(ssr)/./node_modules/@apollo/client/utilities/globals/global.js\");\n/* harmony import */ var _common_stringifyForDisplay_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/stringifyForDisplay.js */ \"(ssr)/./node_modules/@apollo/client/utilities/common/stringifyForDisplay.js\");\n\n\n\n\nfunction wrap(fn) {\n    return function(message) {\n        var args = [];\n        for(var _i = 1; _i < arguments.length; _i++){\n            args[_i - 1] = arguments[_i];\n        }\n        if (typeof message === \"number\") {\n            var arg0 = message;\n            message = getHandledErrorMsg(arg0);\n            if (!message) {\n                message = getFallbackErrorMsg(arg0, args);\n                args = [];\n            }\n        }\n        fn.apply(void 0, [\n            message\n        ].concat(args));\n    };\n}\nvar invariant = Object.assign(function invariant(condition, message) {\n    var args = [];\n    for(var _i = 2; _i < arguments.length; _i++){\n        args[_i - 2] = arguments[_i];\n    }\n    if (!condition) {\n        (0,ts_invariant__WEBPACK_IMPORTED_MODULE_0__.invariant)(condition, getHandledErrorMsg(message, args) || getFallbackErrorMsg(message, args));\n    }\n}, {\n    debug: wrap(ts_invariant__WEBPACK_IMPORTED_MODULE_0__.invariant.debug),\n    log: wrap(ts_invariant__WEBPACK_IMPORTED_MODULE_0__.invariant.log),\n    warn: wrap(ts_invariant__WEBPACK_IMPORTED_MODULE_0__.invariant.warn),\n    error: wrap(ts_invariant__WEBPACK_IMPORTED_MODULE_0__.invariant.error)\n});\nfunction newInvariantError(message) {\n    var optionalParams = [];\n    for(var _i = 1; _i < arguments.length; _i++){\n        optionalParams[_i - 1] = arguments[_i];\n    }\n    return new ts_invariant__WEBPACK_IMPORTED_MODULE_0__.InvariantError(getHandledErrorMsg(message, optionalParams) || getFallbackErrorMsg(message, optionalParams));\n}\nvar ApolloErrorMessageHandler = Symbol.for(\"ApolloErrorMessageHandler_\" + _version_js__WEBPACK_IMPORTED_MODULE_2__.version);\nfunction stringify(arg) {\n    return typeof arg == \"string\" ? arg : (0,_common_stringifyForDisplay_js__WEBPACK_IMPORTED_MODULE_3__.stringifyForDisplay)(arg, 2).slice(0, 1000);\n}\nfunction getHandledErrorMsg(message, messageArgs) {\n    if (messageArgs === void 0) {\n        messageArgs = [];\n    }\n    if (!message) return;\n    return _global_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"][ApolloErrorMessageHandler] && _global_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"][ApolloErrorMessageHandler](message, messageArgs.map(stringify));\n}\nfunction getFallbackErrorMsg(message, messageArgs) {\n    if (messageArgs === void 0) {\n        messageArgs = [];\n    }\n    if (!message) return;\n    return \"An error occurred! For more details, see the full error text at https://go.apollo.dev/c/err#\".concat(encodeURIComponent(JSON.stringify({\n        version: _version_js__WEBPACK_IMPORTED_MODULE_2__.version,\n        message: message,\n        args: messageArgs.map(stringify)\n    })));\n}\n //# sourceMappingURL=invariantWrappers.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFwb2xsby9jbGllbnQvdXRpbGl0aWVzL2dsb2JhbHMvaW52YXJpYW50V3JhcHBlcnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBOEU7QUFDbkM7QUFDVjtBQUNzQztBQUN2RSxTQUFTTSxLQUFLQyxFQUFFO0lBQ1osT0FBTyxTQUFVQyxPQUFPO1FBQ3BCLElBQUlDLE9BQU8sRUFBRTtRQUNiLElBQUssSUFBSUMsS0FBSyxHQUFHQSxLQUFLQyxVQUFVQyxNQUFNLEVBQUVGLEtBQU07WUFDMUNELElBQUksQ0FBQ0MsS0FBSyxFQUFFLEdBQUdDLFNBQVMsQ0FBQ0QsR0FBRztRQUNoQztRQUNBLElBQUksT0FBT0YsWUFBWSxVQUFVO1lBQzdCLElBQUlLLE9BQU9MO1lBQ1hBLFVBQVVNLG1CQUFtQkQ7WUFDN0IsSUFBSSxDQUFDTCxTQUFTO2dCQUNWQSxVQUFVTyxvQkFBb0JGLE1BQU1KO2dCQUNwQ0EsT0FBTyxFQUFFO1lBQ2I7UUFDSjtRQUNBRixHQUFHUyxLQUFLLENBQUMsS0FBSyxHQUFHO1lBQUNSO1NBQVEsQ0FBQ1MsTUFBTSxDQUFDUjtJQUN0QztBQUNKO0FBQ0EsSUFBSVQsWUFBWWtCLE9BQU9DLE1BQU0sQ0FBQyxTQUFTbkIsVUFBVW9CLFNBQVMsRUFBRVosT0FBTztJQUMvRCxJQUFJQyxPQUFPLEVBQUU7SUFDYixJQUFLLElBQUlDLEtBQUssR0FBR0EsS0FBS0MsVUFBVUMsTUFBTSxFQUFFRixLQUFNO1FBQzFDRCxJQUFJLENBQUNDLEtBQUssRUFBRSxHQUFHQyxTQUFTLENBQUNELEdBQUc7SUFDaEM7SUFDQSxJQUFJLENBQUNVLFdBQVc7UUFDWm5CLHVEQUFpQkEsQ0FBQ21CLFdBQVdOLG1CQUFtQk4sU0FBU0MsU0FBU00sb0JBQW9CUCxTQUFTQztJQUNuRztBQUNKLEdBQUc7SUFDQ1ksT0FBT2YsS0FBS0wsbURBQWlCQSxDQUFDb0IsS0FBSztJQUNuQ0MsS0FBS2hCLEtBQUtMLG1EQUFpQkEsQ0FBQ3FCLEdBQUc7SUFDL0JDLE1BQU1qQixLQUFLTCxtREFBaUJBLENBQUNzQixJQUFJO0lBQ2pDQyxPQUFPbEIsS0FBS0wsbURBQWlCQSxDQUFDdUIsS0FBSztBQUN2QztBQUNBLFNBQVNDLGtCQUFrQmpCLE9BQU87SUFDOUIsSUFBSWtCLGlCQUFpQixFQUFFO0lBQ3ZCLElBQUssSUFBSWhCLEtBQUssR0FBR0EsS0FBS0MsVUFBVUMsTUFBTSxFQUFFRixLQUFNO1FBQzFDZ0IsY0FBYyxDQUFDaEIsS0FBSyxFQUFFLEdBQUdDLFNBQVMsQ0FBQ0QsR0FBRztJQUMxQztJQUNBLE9BQU8sSUFBSVIsd0RBQWNBLENBQUNZLG1CQUFtQk4sU0FBU2tCLG1CQUNsRFgsb0JBQW9CUCxTQUFTa0I7QUFDckM7QUFDQSxJQUFJQyw0QkFBNEJDLE9BQU9DLEdBQUcsQ0FBQywrQkFBK0IxQixnREFBT0E7QUFDakYsU0FBUzJCLFVBQVVDLEdBQUc7SUFDbEIsT0FBTyxPQUFPQSxPQUFPLFdBQ2ZBLE1BQ0ExQixtRkFBbUJBLENBQUMwQixLQUFLLEdBQUdDLEtBQUssQ0FBQyxHQUFHO0FBQy9DO0FBQ0EsU0FBU2xCLG1CQUFtQk4sT0FBTyxFQUFFeUIsV0FBVztJQUM1QyxJQUFJQSxnQkFBZ0IsS0FBSyxHQUFHO1FBQUVBLGNBQWMsRUFBRTtJQUFFO0lBQ2hELElBQUksQ0FBQ3pCLFNBQ0Q7SUFDSixPQUFRSixrREFBTSxDQUFDdUIsMEJBQTBCLElBQ3JDdkIsa0RBQU0sQ0FBQ3VCLDBCQUEwQixDQUFDbkIsU0FBU3lCLFlBQVlDLEdBQUcsQ0FBQ0o7QUFDbkU7QUFDQSxTQUFTZixvQkFBb0JQLE9BQU8sRUFBRXlCLFdBQVc7SUFDN0MsSUFBSUEsZ0JBQWdCLEtBQUssR0FBRztRQUFFQSxjQUFjLEVBQUU7SUFBRTtJQUNoRCxJQUFJLENBQUN6QixTQUNEO0lBQ0osT0FBTywrRkFBK0ZTLE1BQU0sQ0FBQ2tCLG1CQUFtQkMsS0FBS04sU0FBUyxDQUFDO1FBQzNJM0IsU0FBU0EsZ0RBQU9BO1FBQ2hCSyxTQUFTQTtRQUNUQyxNQUFNd0IsWUFBWUMsR0FBRyxDQUFDSjtJQUMxQjtBQUNKO0FBQ29GLENBQ3BGLDZDQUE2QyIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1cm5pLWFwcC8uL25vZGVfbW9kdWxlcy9AYXBvbGxvL2NsaWVudC91dGlsaXRpZXMvZ2xvYmFscy9pbnZhcmlhbnRXcmFwcGVycy5qcz9jNzNlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGludmFyaWFudCBhcyBvcmlnaW5hbEludmFyaWFudCwgSW52YXJpYW50RXJyb3IgfSBmcm9tIFwidHMtaW52YXJpYW50XCI7XG5pbXBvcnQgeyB2ZXJzaW9uIH0gZnJvbSBcIi4uLy4uL3ZlcnNpb24uanNcIjtcbmltcG9ydCBnbG9iYWwgZnJvbSBcIi4vZ2xvYmFsLmpzXCI7XG5pbXBvcnQgeyBzdHJpbmdpZnlGb3JEaXNwbGF5IH0gZnJvbSBcIi4uL2NvbW1vbi9zdHJpbmdpZnlGb3JEaXNwbGF5LmpzXCI7XG5mdW5jdGlvbiB3cmFwKGZuKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChtZXNzYWdlKSB7XG4gICAgICAgIHZhciBhcmdzID0gW107XG4gICAgICAgIGZvciAodmFyIF9pID0gMTsgX2kgPCBhcmd1bWVudHMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICAgICAgICBhcmdzW19pIC0gMV0gPSBhcmd1bWVudHNbX2ldO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0eXBlb2YgbWVzc2FnZSA9PT0gXCJudW1iZXJcIikge1xuICAgICAgICAgICAgdmFyIGFyZzAgPSBtZXNzYWdlO1xuICAgICAgICAgICAgbWVzc2FnZSA9IGdldEhhbmRsZWRFcnJvck1zZyhhcmcwKTtcbiAgICAgICAgICAgIGlmICghbWVzc2FnZSkge1xuICAgICAgICAgICAgICAgIG1lc3NhZ2UgPSBnZXRGYWxsYmFja0Vycm9yTXNnKGFyZzAsIGFyZ3MpO1xuICAgICAgICAgICAgICAgIGFyZ3MgPSBbXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBmbi5hcHBseSh2b2lkIDAsIFttZXNzYWdlXS5jb25jYXQoYXJncykpO1xuICAgIH07XG59XG52YXIgaW52YXJpYW50ID0gT2JqZWN0LmFzc2lnbihmdW5jdGlvbiBpbnZhcmlhbnQoY29uZGl0aW9uLCBtZXNzYWdlKSB7XG4gICAgdmFyIGFyZ3MgPSBbXTtcbiAgICBmb3IgKHZhciBfaSA9IDI7IF9pIDwgYXJndW1lbnRzLmxlbmd0aDsgX2krKykge1xuICAgICAgICBhcmdzW19pIC0gMl0gPSBhcmd1bWVudHNbX2ldO1xuICAgIH1cbiAgICBpZiAoIWNvbmRpdGlvbikge1xuICAgICAgICBvcmlnaW5hbEludmFyaWFudChjb25kaXRpb24sIGdldEhhbmRsZWRFcnJvck1zZyhtZXNzYWdlLCBhcmdzKSB8fCBnZXRGYWxsYmFja0Vycm9yTXNnKG1lc3NhZ2UsIGFyZ3MpKTtcbiAgICB9XG59LCB7XG4gICAgZGVidWc6IHdyYXAob3JpZ2luYWxJbnZhcmlhbnQuZGVidWcpLFxuICAgIGxvZzogd3JhcChvcmlnaW5hbEludmFyaWFudC5sb2cpLFxuICAgIHdhcm46IHdyYXAob3JpZ2luYWxJbnZhcmlhbnQud2FybiksXG4gICAgZXJyb3I6IHdyYXAob3JpZ2luYWxJbnZhcmlhbnQuZXJyb3IpLFxufSk7XG5mdW5jdGlvbiBuZXdJbnZhcmlhbnRFcnJvcihtZXNzYWdlKSB7XG4gICAgdmFyIG9wdGlvbmFsUGFyYW1zID0gW107XG4gICAgZm9yICh2YXIgX2kgPSAxOyBfaSA8IGFyZ3VtZW50cy5sZW5ndGg7IF9pKyspIHtcbiAgICAgICAgb3B0aW9uYWxQYXJhbXNbX2kgLSAxXSA9IGFyZ3VtZW50c1tfaV07XG4gICAgfVxuICAgIHJldHVybiBuZXcgSW52YXJpYW50RXJyb3IoZ2V0SGFuZGxlZEVycm9yTXNnKG1lc3NhZ2UsIG9wdGlvbmFsUGFyYW1zKSB8fFxuICAgICAgICBnZXRGYWxsYmFja0Vycm9yTXNnKG1lc3NhZ2UsIG9wdGlvbmFsUGFyYW1zKSk7XG59XG52YXIgQXBvbGxvRXJyb3JNZXNzYWdlSGFuZGxlciA9IFN5bWJvbC5mb3IoXCJBcG9sbG9FcnJvck1lc3NhZ2VIYW5kbGVyX1wiICsgdmVyc2lvbik7XG5mdW5jdGlvbiBzdHJpbmdpZnkoYXJnKSB7XG4gICAgcmV0dXJuIHR5cGVvZiBhcmcgPT0gXCJzdHJpbmdcIlxuICAgICAgICA/IGFyZ1xuICAgICAgICA6IHN0cmluZ2lmeUZvckRpc3BsYXkoYXJnLCAyKS5zbGljZSgwLCAxMDAwKTtcbn1cbmZ1bmN0aW9uIGdldEhhbmRsZWRFcnJvck1zZyhtZXNzYWdlLCBtZXNzYWdlQXJncykge1xuICAgIGlmIChtZXNzYWdlQXJncyA9PT0gdm9pZCAwKSB7IG1lc3NhZ2VBcmdzID0gW107IH1cbiAgICBpZiAoIW1lc3NhZ2UpXG4gICAgICAgIHJldHVybjtcbiAgICByZXR1cm4gKGdsb2JhbFtBcG9sbG9FcnJvck1lc3NhZ2VIYW5kbGVyXSAmJlxuICAgICAgICBnbG9iYWxbQXBvbGxvRXJyb3JNZXNzYWdlSGFuZGxlcl0obWVzc2FnZSwgbWVzc2FnZUFyZ3MubWFwKHN0cmluZ2lmeSkpKTtcbn1cbmZ1bmN0aW9uIGdldEZhbGxiYWNrRXJyb3JNc2cobWVzc2FnZSwgbWVzc2FnZUFyZ3MpIHtcbiAgICBpZiAobWVzc2FnZUFyZ3MgPT09IHZvaWQgMCkgeyBtZXNzYWdlQXJncyA9IFtdOyB9XG4gICAgaWYgKCFtZXNzYWdlKVxuICAgICAgICByZXR1cm47XG4gICAgcmV0dXJuIFwiQW4gZXJyb3Igb2NjdXJyZWQhIEZvciBtb3JlIGRldGFpbHMsIHNlZSB0aGUgZnVsbCBlcnJvciB0ZXh0IGF0IGh0dHBzOi8vZ28uYXBvbGxvLmRldi9jL2VyciNcIi5jb25jYXQoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgdmVyc2lvbjogdmVyc2lvbixcbiAgICAgICAgbWVzc2FnZTogbWVzc2FnZSxcbiAgICAgICAgYXJnczogbWVzc2FnZUFyZ3MubWFwKHN0cmluZ2lmeSksXG4gICAgfSkpKTtcbn1cbmV4cG9ydCB7IGludmFyaWFudCwgSW52YXJpYW50RXJyb3IsIG5ld0ludmFyaWFudEVycm9yLCBBcG9sbG9FcnJvck1lc3NhZ2VIYW5kbGVyLCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW52YXJpYW50V3JhcHBlcnMuanMubWFwIl0sIm5hbWVzIjpbImludmFyaWFudCIsIm9yaWdpbmFsSW52YXJpYW50IiwiSW52YXJpYW50RXJyb3IiLCJ2ZXJzaW9uIiwiZ2xvYmFsIiwic3RyaW5naWZ5Rm9yRGlzcGxheSIsIndyYXAiLCJmbiIsIm1lc3NhZ2UiLCJhcmdzIiwiX2kiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJhcmcwIiwiZ2V0SGFuZGxlZEVycm9yTXNnIiwiZ2V0RmFsbGJhY2tFcnJvck1zZyIsImFwcGx5IiwiY29uY2F0IiwiT2JqZWN0IiwiYXNzaWduIiwiY29uZGl0aW9uIiwiZGVidWciLCJsb2ciLCJ3YXJuIiwiZXJyb3IiLCJuZXdJbnZhcmlhbnRFcnJvciIsIm9wdGlvbmFsUGFyYW1zIiwiQXBvbGxvRXJyb3JNZXNzYWdlSGFuZGxlciIsIlN5bWJvbCIsImZvciIsInN0cmluZ2lmeSIsImFyZyIsInNsaWNlIiwibWVzc2FnZUFyZ3MiLCJtYXAiLCJlbmNvZGVVUklDb21wb25lbnQiLCJKU09OIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/utilities/globals/invariantWrappers.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/utilities/globals/maybe.js":
/*!****************************************************************!*\
  !*** ./node_modules/@apollo/client/utilities/globals/maybe.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   maybe: () => (/* binding */ maybe)\n/* harmony export */ });\nfunction maybe(thunk) {\n    try {\n        return thunk();\n    } catch (_a) {}\n} //# sourceMappingURL=maybe.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFwb2xsby9jbGllbnQvdXRpbGl0aWVzL2dsb2JhbHMvbWF5YmUuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPLFNBQVNBLE1BQU1DLEtBQUs7SUFDdkIsSUFBSTtRQUNBLE9BQU9BO0lBQ1gsRUFDQSxPQUFPQyxJQUFJLENBQUU7QUFDakIsRUFDQSxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdXJuaS1hcHAvLi9ub2RlX21vZHVsZXMvQGFwb2xsby9jbGllbnQvdXRpbGl0aWVzL2dsb2JhbHMvbWF5YmUuanM/MTVhNSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gbWF5YmUodGh1bmspIHtcbiAgICB0cnkge1xuICAgICAgICByZXR1cm4gdGh1bmsoKTtcbiAgICB9XG4gICAgY2F0Y2ggKF9hKSB7IH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW1heWJlLmpzLm1hcCJdLCJuYW1lcyI6WyJtYXliZSIsInRodW5rIiwiX2EiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/utilities/globals/maybe.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/utilities/graphql/DocumentTransform.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@apollo/client/utilities/graphql/DocumentTransform.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DocumentTransform: () => (/* binding */ DocumentTransform)\n/* harmony export */ });\n/* harmony import */ var _wry_trie__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @wry/trie */ \"(ssr)/./node_modules/@wry/trie/lib/index.js\");\n/* harmony import */ var _common_canUse_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/canUse.js */ \"(ssr)/./node_modules/@apollo/client/utilities/common/canUse.js\");\n/* harmony import */ var _getFromAST_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./getFromAST.js */ \"(ssr)/./node_modules/@apollo/client/utilities/graphql/getFromAST.js\");\n/* harmony import */ var _globals_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../globals/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/globals/index.js\");\n\n\n\n\nfunction identity(document) {\n    return document;\n}\nvar DocumentTransform = function() {\n    function DocumentTransform(transform, options) {\n        if (options === void 0) {\n            options = Object.create(null);\n        }\n        this.resultCache = _common_canUse_js__WEBPACK_IMPORTED_MODULE_2__.canUseWeakSet ? new WeakSet() : new Set();\n        this.transform = transform;\n        if (options.getCacheKey) {\n            this.getCacheKey = options.getCacheKey;\n        }\n        if (options.cache !== false) {\n            this.stableCacheKeys = new _wry_trie__WEBPACK_IMPORTED_MODULE_0__.Trie(_common_canUse_js__WEBPACK_IMPORTED_MODULE_2__.canUseWeakMap, function(key) {\n                return {\n                    key: key\n                };\n            });\n        }\n    }\n    DocumentTransform.prototype.getCacheKey = function(document) {\n        return [\n            document\n        ];\n    };\n    DocumentTransform.identity = function() {\n        return new DocumentTransform(identity, {\n            cache: false\n        });\n    };\n    DocumentTransform.split = function(predicate, left, right) {\n        if (right === void 0) {\n            right = DocumentTransform.identity();\n        }\n        return new DocumentTransform(function(document) {\n            var documentTransform = predicate(document) ? left : right;\n            return documentTransform.transformDocument(document);\n        }, {\n            cache: false\n        });\n    };\n    DocumentTransform.prototype.transformDocument = function(document) {\n        if (this.resultCache.has(document)) {\n            return document;\n        }\n        var cacheEntry = this.getStableCacheEntry(document);\n        if (cacheEntry && cacheEntry.value) {\n            return cacheEntry.value;\n        }\n        (0,_getFromAST_js__WEBPACK_IMPORTED_MODULE_3__.checkDocument)(document);\n        var transformedDocument = this.transform(document);\n        this.resultCache.add(transformedDocument);\n        if (cacheEntry) {\n            cacheEntry.value = transformedDocument;\n        }\n        return transformedDocument;\n    };\n    DocumentTransform.prototype.concat = function(otherTransform) {\n        var _this = this;\n        return new DocumentTransform(function(document) {\n            return otherTransform.transformDocument(_this.transformDocument(document));\n        }, {\n            cache: false\n        });\n    };\n    DocumentTransform.prototype.getStableCacheEntry = function(document) {\n        if (!this.stableCacheKeys) return;\n        var cacheKeys = this.getCacheKey(document);\n        if (cacheKeys) {\n            (0,_globals_index_js__WEBPACK_IMPORTED_MODULE_1__.invariant)(Array.isArray(cacheKeys), 65);\n            return this.stableCacheKeys.lookupArray(cacheKeys);\n        }\n    };\n    return DocumentTransform;\n}();\n //# sourceMappingURL=DocumentTransform.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFwb2xsby9jbGllbnQvdXRpbGl0aWVzL2dyYXBocWwvRG9jdW1lbnRUcmFuc2Zvcm0uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBaUM7QUFDa0M7QUFDbkI7QUFDQTtBQUNoRCxTQUFTSyxTQUFTQyxRQUFRO0lBQ3RCLE9BQU9BO0FBQ1g7QUFDQSxJQUFJQyxvQkFBcUI7SUFDckIsU0FBU0Esa0JBQWtCQyxTQUFTLEVBQUVDLE9BQU87UUFDekMsSUFBSUEsWUFBWSxLQUFLLEdBQUc7WUFBRUEsVUFBVUMsT0FBT0MsTUFBTSxDQUFDO1FBQU87UUFDekQsSUFBSSxDQUFDQyxXQUFXLEdBQUdWLDREQUFhQSxHQUMxQixJQUFJVyxZQUNKLElBQUlDO1FBQ1YsSUFBSSxDQUFDTixTQUFTLEdBQUdBO1FBQ2pCLElBQUlDLFFBQVFNLFdBQVcsRUFBRTtZQUNyQixJQUFJLENBQUNBLFdBQVcsR0FBR04sUUFBUU0sV0FBVztRQUMxQztRQUNBLElBQUlOLFFBQVFPLEtBQUssS0FBSyxPQUFPO1lBQ3pCLElBQUksQ0FBQ0MsZUFBZSxHQUFHLElBQUlqQiwyQ0FBSUEsQ0FBQ0MsNERBQWFBLEVBQUUsU0FBVWlCLEdBQUc7Z0JBQUksT0FBUTtvQkFBRUEsS0FBS0E7Z0JBQUk7WUFBSTtRQUMzRjtJQUNKO0lBQ0FYLGtCQUFrQlksU0FBUyxDQUFDSixXQUFXLEdBQUcsU0FBVVQsUUFBUTtRQUN4RCxPQUFPO1lBQUNBO1NBQVM7SUFDckI7SUFDQUMsa0JBQWtCRixRQUFRLEdBQUc7UUFDekIsT0FBTyxJQUFJRSxrQkFBa0JGLFVBQVU7WUFBRVcsT0FBTztRQUFNO0lBQzFEO0lBQ0FULGtCQUFrQmEsS0FBSyxHQUFHLFNBQVVDLFNBQVMsRUFBRUMsSUFBSSxFQUFFQyxLQUFLO1FBQ3RELElBQUlBLFVBQVUsS0FBSyxHQUFHO1lBQUVBLFFBQVFoQixrQkFBa0JGLFFBQVE7UUFBSTtRQUM5RCxPQUFPLElBQUlFLGtCQUFrQixTQUFVRCxRQUFRO1lBQzNDLElBQUlrQixvQkFBb0JILFVBQVVmLFlBQVlnQixPQUFPQztZQUNyRCxPQUFPQyxrQkFBa0JDLGlCQUFpQixDQUFDbkI7UUFDL0MsR0FBRztZQUFFVSxPQUFPO1FBQU07SUFDdEI7SUFDQVQsa0JBQWtCWSxTQUFTLENBQUNNLGlCQUFpQixHQUFHLFNBQVVuQixRQUFRO1FBQzlELElBQUksSUFBSSxDQUFDTSxXQUFXLENBQUNjLEdBQUcsQ0FBQ3BCLFdBQVc7WUFDaEMsT0FBT0E7UUFDWDtRQUNBLElBQUlxQixhQUFhLElBQUksQ0FBQ0MsbUJBQW1CLENBQUN0QjtRQUMxQyxJQUFJcUIsY0FBY0EsV0FBV0UsS0FBSyxFQUFFO1lBQ2hDLE9BQU9GLFdBQVdFLEtBQUs7UUFDM0I7UUFDQTFCLDZEQUFhQSxDQUFDRztRQUNkLElBQUl3QixzQkFBc0IsSUFBSSxDQUFDdEIsU0FBUyxDQUFDRjtRQUN6QyxJQUFJLENBQUNNLFdBQVcsQ0FBQ21CLEdBQUcsQ0FBQ0Q7UUFDckIsSUFBSUgsWUFBWTtZQUNaQSxXQUFXRSxLQUFLLEdBQUdDO1FBQ3ZCO1FBQ0EsT0FBT0E7SUFDWDtJQUNBdkIsa0JBQWtCWSxTQUFTLENBQUNhLE1BQU0sR0FBRyxTQUFVQyxjQUFjO1FBQ3pELElBQUlDLFFBQVEsSUFBSTtRQUNoQixPQUFPLElBQUkzQixrQkFBa0IsU0FBVUQsUUFBUTtZQUMzQyxPQUFPMkIsZUFBZVIsaUJBQWlCLENBQUNTLE1BQU1ULGlCQUFpQixDQUFDbkI7UUFDcEUsR0FBRztZQUFFVSxPQUFPO1FBQU07SUFDdEI7SUFDQVQsa0JBQWtCWSxTQUFTLENBQUNTLG1CQUFtQixHQUFHLFNBQVV0QixRQUFRO1FBQ2hFLElBQUksQ0FBQyxJQUFJLENBQUNXLGVBQWUsRUFDckI7UUFDSixJQUFJa0IsWUFBWSxJQUFJLENBQUNwQixXQUFXLENBQUNUO1FBQ2pDLElBQUk2QixXQUFXO1lBQ1gvQiw0REFBU0EsQ0FBQ2dDLE1BQU1DLE9BQU8sQ0FBQ0YsWUFBWTtZQUNwQyxPQUFPLElBQUksQ0FBQ2xCLGVBQWUsQ0FBQ3FCLFdBQVcsQ0FBQ0g7UUFDNUM7SUFDSjtJQUNBLE9BQU81QjtBQUNYO0FBQzZCLENBQzdCLDZDQUE2QyIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1cm5pLWFwcC8uL25vZGVfbW9kdWxlcy9AYXBvbGxvL2NsaWVudC91dGlsaXRpZXMvZ3JhcGhxbC9Eb2N1bWVudFRyYW5zZm9ybS5qcz9jNGQ0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRyaWUgfSBmcm9tIFwiQHdyeS90cmllXCI7XG5pbXBvcnQgeyBjYW5Vc2VXZWFrTWFwLCBjYW5Vc2VXZWFrU2V0IH0gZnJvbSBcIi4uL2NvbW1vbi9jYW5Vc2UuanNcIjtcbmltcG9ydCB7IGNoZWNrRG9jdW1lbnQgfSBmcm9tIFwiLi9nZXRGcm9tQVNULmpzXCI7XG5pbXBvcnQgeyBpbnZhcmlhbnQgfSBmcm9tIFwiLi4vZ2xvYmFscy9pbmRleC5qc1wiO1xuZnVuY3Rpb24gaWRlbnRpdHkoZG9jdW1lbnQpIHtcbiAgICByZXR1cm4gZG9jdW1lbnQ7XG59XG52YXIgRG9jdW1lbnRUcmFuc2Zvcm0gPSAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIERvY3VtZW50VHJhbnNmb3JtKHRyYW5zZm9ybSwgb3B0aW9ucykge1xuICAgICAgICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7IG9wdGlvbnMgPSBPYmplY3QuY3JlYXRlKG51bGwpOyB9XG4gICAgICAgIHRoaXMucmVzdWx0Q2FjaGUgPSBjYW5Vc2VXZWFrU2V0XG4gICAgICAgICAgICA/IG5ldyBXZWFrU2V0KClcbiAgICAgICAgICAgIDogbmV3IFNldCgpO1xuICAgICAgICB0aGlzLnRyYW5zZm9ybSA9IHRyYW5zZm9ybTtcbiAgICAgICAgaWYgKG9wdGlvbnMuZ2V0Q2FjaGVLZXkpIHtcbiAgICAgICAgICAgIHRoaXMuZ2V0Q2FjaGVLZXkgPSBvcHRpb25zLmdldENhY2hlS2V5O1xuICAgICAgICB9XG4gICAgICAgIGlmIChvcHRpb25zLmNhY2hlICE9PSBmYWxzZSkge1xuICAgICAgICAgICAgdGhpcy5zdGFibGVDYWNoZUtleXMgPSBuZXcgVHJpZShjYW5Vc2VXZWFrTWFwLCBmdW5jdGlvbiAoa2V5KSB7IHJldHVybiAoeyBrZXk6IGtleSB9KTsgfSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgRG9jdW1lbnRUcmFuc2Zvcm0ucHJvdG90eXBlLmdldENhY2hlS2V5ID0gZnVuY3Rpb24gKGRvY3VtZW50KSB7XG4gICAgICAgIHJldHVybiBbZG9jdW1lbnRdO1xuICAgIH07XG4gICAgRG9jdW1lbnRUcmFuc2Zvcm0uaWRlbnRpdHkgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBuZXcgRG9jdW1lbnRUcmFuc2Zvcm0oaWRlbnRpdHksIHsgY2FjaGU6IGZhbHNlIH0pO1xuICAgIH07XG4gICAgRG9jdW1lbnRUcmFuc2Zvcm0uc3BsaXQgPSBmdW5jdGlvbiAocHJlZGljYXRlLCBsZWZ0LCByaWdodCkge1xuICAgICAgICBpZiAocmlnaHQgPT09IHZvaWQgMCkgeyByaWdodCA9IERvY3VtZW50VHJhbnNmb3JtLmlkZW50aXR5KCk7IH1cbiAgICAgICAgcmV0dXJuIG5ldyBEb2N1bWVudFRyYW5zZm9ybShmdW5jdGlvbiAoZG9jdW1lbnQpIHtcbiAgICAgICAgICAgIHZhciBkb2N1bWVudFRyYW5zZm9ybSA9IHByZWRpY2F0ZShkb2N1bWVudCkgPyBsZWZ0IDogcmlnaHQ7XG4gICAgICAgICAgICByZXR1cm4gZG9jdW1lbnRUcmFuc2Zvcm0udHJhbnNmb3JtRG9jdW1lbnQoZG9jdW1lbnQpO1xuICAgICAgICB9LCB7IGNhY2hlOiBmYWxzZSB9KTtcbiAgICB9O1xuICAgIERvY3VtZW50VHJhbnNmb3JtLnByb3RvdHlwZS50cmFuc2Zvcm1Eb2N1bWVudCA9IGZ1bmN0aW9uIChkb2N1bWVudCkge1xuICAgICAgICBpZiAodGhpcy5yZXN1bHRDYWNoZS5oYXMoZG9jdW1lbnQpKSB7XG4gICAgICAgICAgICByZXR1cm4gZG9jdW1lbnQ7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGNhY2hlRW50cnkgPSB0aGlzLmdldFN0YWJsZUNhY2hlRW50cnkoZG9jdW1lbnQpO1xuICAgICAgICBpZiAoY2FjaGVFbnRyeSAmJiBjYWNoZUVudHJ5LnZhbHVlKSB7XG4gICAgICAgICAgICByZXR1cm4gY2FjaGVFbnRyeS52YWx1ZTtcbiAgICAgICAgfVxuICAgICAgICBjaGVja0RvY3VtZW50KGRvY3VtZW50KTtcbiAgICAgICAgdmFyIHRyYW5zZm9ybWVkRG9jdW1lbnQgPSB0aGlzLnRyYW5zZm9ybShkb2N1bWVudCk7XG4gICAgICAgIHRoaXMucmVzdWx0Q2FjaGUuYWRkKHRyYW5zZm9ybWVkRG9jdW1lbnQpO1xuICAgICAgICBpZiAoY2FjaGVFbnRyeSkge1xuICAgICAgICAgICAgY2FjaGVFbnRyeS52YWx1ZSA9IHRyYW5zZm9ybWVkRG9jdW1lbnQ7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRyYW5zZm9ybWVkRG9jdW1lbnQ7XG4gICAgfTtcbiAgICBEb2N1bWVudFRyYW5zZm9ybS5wcm90b3R5cGUuY29uY2F0ID0gZnVuY3Rpb24gKG90aGVyVHJhbnNmb3JtKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIHJldHVybiBuZXcgRG9jdW1lbnRUcmFuc2Zvcm0oZnVuY3Rpb24gKGRvY3VtZW50KSB7XG4gICAgICAgICAgICByZXR1cm4gb3RoZXJUcmFuc2Zvcm0udHJhbnNmb3JtRG9jdW1lbnQoX3RoaXMudHJhbnNmb3JtRG9jdW1lbnQoZG9jdW1lbnQpKTtcbiAgICAgICAgfSwgeyBjYWNoZTogZmFsc2UgfSk7XG4gICAgfTtcbiAgICBEb2N1bWVudFRyYW5zZm9ybS5wcm90b3R5cGUuZ2V0U3RhYmxlQ2FjaGVFbnRyeSA9IGZ1bmN0aW9uIChkb2N1bWVudCkge1xuICAgICAgICBpZiAoIXRoaXMuc3RhYmxlQ2FjaGVLZXlzKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB2YXIgY2FjaGVLZXlzID0gdGhpcy5nZXRDYWNoZUtleShkb2N1bWVudCk7XG4gICAgICAgIGlmIChjYWNoZUtleXMpIHtcbiAgICAgICAgICAgIGludmFyaWFudChBcnJheS5pc0FycmF5KGNhY2hlS2V5cyksIDY1KTtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnN0YWJsZUNhY2hlS2V5cy5sb29rdXBBcnJheShjYWNoZUtleXMpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICByZXR1cm4gRG9jdW1lbnRUcmFuc2Zvcm07XG59KCkpO1xuZXhwb3J0IHsgRG9jdW1lbnRUcmFuc2Zvcm0gfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPURvY3VtZW50VHJhbnNmb3JtLmpzLm1hcCJdLCJuYW1lcyI6WyJUcmllIiwiY2FuVXNlV2Vha01hcCIsImNhblVzZVdlYWtTZXQiLCJjaGVja0RvY3VtZW50IiwiaW52YXJpYW50IiwiaWRlbnRpdHkiLCJkb2N1bWVudCIsIkRvY3VtZW50VHJhbnNmb3JtIiwidHJhbnNmb3JtIiwib3B0aW9ucyIsIk9iamVjdCIsImNyZWF0ZSIsInJlc3VsdENhY2hlIiwiV2Vha1NldCIsIlNldCIsImdldENhY2hlS2V5IiwiY2FjaGUiLCJzdGFibGVDYWNoZUtleXMiLCJrZXkiLCJwcm90b3R5cGUiLCJzcGxpdCIsInByZWRpY2F0ZSIsImxlZnQiLCJyaWdodCIsImRvY3VtZW50VHJhbnNmb3JtIiwidHJhbnNmb3JtRG9jdW1lbnQiLCJoYXMiLCJjYWNoZUVudHJ5IiwiZ2V0U3RhYmxlQ2FjaGVFbnRyeSIsInZhbHVlIiwidHJhbnNmb3JtZWREb2N1bWVudCIsImFkZCIsImNvbmNhdCIsIm90aGVyVHJhbnNmb3JtIiwiX3RoaXMiLCJjYWNoZUtleXMiLCJBcnJheSIsImlzQXJyYXkiLCJsb29rdXBBcnJheSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/utilities/graphql/DocumentTransform.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/utilities/graphql/directives.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@apollo/client/utilities/graphql/directives.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getDirectiveNames: () => (/* binding */ getDirectiveNames),\n/* harmony export */   getInclusionDirectives: () => (/* binding */ getInclusionDirectives),\n/* harmony export */   hasAllDirectives: () => (/* binding */ hasAllDirectives),\n/* harmony export */   hasAnyDirectives: () => (/* binding */ hasAnyDirectives),\n/* harmony export */   hasClientExports: () => (/* binding */ hasClientExports),\n/* harmony export */   hasDirectives: () => (/* binding */ hasDirectives),\n/* harmony export */   shouldInclude: () => (/* binding */ shouldInclude)\n/* harmony export */ });\n/* harmony import */ var _globals_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../globals/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/globals/index.js\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/./node_modules/graphql/language/visitor.mjs\");\n\n\nfunction shouldInclude(_a, variables) {\n    var directives = _a.directives;\n    if (!directives || !directives.length) {\n        return true;\n    }\n    return getInclusionDirectives(directives).every(function(_a) {\n        var directive = _a.directive, ifArgument = _a.ifArgument;\n        var evaledValue = false;\n        if (ifArgument.value.kind === \"Variable\") {\n            evaledValue = variables && variables[ifArgument.value.name.value];\n            (0,_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.invariant)(evaledValue !== void 0, 66, directive.name.value);\n        } else {\n            evaledValue = ifArgument.value.value;\n        }\n        return directive.name.value === \"skip\" ? !evaledValue : evaledValue;\n    });\n}\nfunction getDirectiveNames(root) {\n    var names = [];\n    (0,graphql__WEBPACK_IMPORTED_MODULE_1__.visit)(root, {\n        Directive: function(node) {\n            names.push(node.name.value);\n        }\n    });\n    return names;\n}\nvar hasAnyDirectives = function(names, root) {\n    return hasDirectives(names, root, false);\n};\nvar hasAllDirectives = function(names, root) {\n    return hasDirectives(names, root, true);\n};\nfunction hasDirectives(names, root, all) {\n    var nameSet = new Set(names);\n    var uniqueCount = nameSet.size;\n    (0,graphql__WEBPACK_IMPORTED_MODULE_1__.visit)(root, {\n        Directive: function(node) {\n            if (nameSet.delete(node.name.value) && (!all || !nameSet.size)) {\n                return graphql__WEBPACK_IMPORTED_MODULE_1__.BREAK;\n            }\n        }\n    });\n    return all ? !nameSet.size : nameSet.size < uniqueCount;\n}\nfunction hasClientExports(document) {\n    return document && hasDirectives([\n        \"client\",\n        \"export\"\n    ], document, true);\n}\nfunction isInclusionDirective(_a) {\n    var value = _a.name.value;\n    return value === \"skip\" || value === \"include\";\n}\nfunction getInclusionDirectives(directives) {\n    var result = [];\n    if (directives && directives.length) {\n        directives.forEach(function(directive) {\n            if (!isInclusionDirective(directive)) return;\n            var directiveArguments = directive.arguments;\n            var directiveName = directive.name.value;\n            (0,_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.invariant)(directiveArguments && directiveArguments.length === 1, 67, directiveName);\n            var ifArgument = directiveArguments[0];\n            (0,_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.invariant)(ifArgument.name && ifArgument.name.value === \"if\", 68, directiveName);\n            var ifValue = ifArgument.value;\n            (0,_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.invariant)(ifValue && (ifValue.kind === \"Variable\" || ifValue.kind === \"BooleanValue\"), 69, directiveName);\n            result.push({\n                directive: directive,\n                ifArgument: ifArgument\n            });\n        });\n    }\n    return result;\n} //# sourceMappingURL=directives.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFwb2xsby9jbGllbnQvdXRpbGl0aWVzL2dyYXBocWwvZGlyZWN0aXZlcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBZ0Q7QUFDVDtBQUNoQyxTQUFTRyxjQUFjQyxFQUFFLEVBQUVDLFNBQVM7SUFDdkMsSUFBSUMsYUFBYUYsR0FBR0UsVUFBVTtJQUM5QixJQUFJLENBQUNBLGNBQWMsQ0FBQ0EsV0FBV0MsTUFBTSxFQUFFO1FBQ25DLE9BQU87SUFDWDtJQUNBLE9BQU9DLHVCQUF1QkYsWUFBWUcsS0FBSyxDQUFDLFNBQVVMLEVBQUU7UUFDeEQsSUFBSU0sWUFBWU4sR0FBR00sU0FBUyxFQUFFQyxhQUFhUCxHQUFHTyxVQUFVO1FBQ3hELElBQUlDLGNBQWM7UUFDbEIsSUFBSUQsV0FBV0UsS0FBSyxDQUFDQyxJQUFJLEtBQUssWUFBWTtZQUN0Q0YsY0FDSVAsYUFBYUEsU0FBUyxDQUFDTSxXQUFXRSxLQUFLLENBQUNFLElBQUksQ0FBQ0YsS0FBSyxDQUFDO1lBQ3ZEYiw0REFBU0EsQ0FBQ1ksZ0JBQWdCLEtBQUssR0FBRyxJQUFJRixVQUFVSyxJQUFJLENBQUNGLEtBQUs7UUFDOUQsT0FDSztZQUNERCxjQUFjRCxXQUFXRSxLQUFLLENBQUNBLEtBQUs7UUFDeEM7UUFDQSxPQUFPSCxVQUFVSyxJQUFJLENBQUNGLEtBQUssS0FBSyxTQUFTLENBQUNELGNBQWNBO0lBQzVEO0FBQ0o7QUFDTyxTQUFTSSxrQkFBa0JDLElBQUk7SUFDbEMsSUFBSUMsUUFBUSxFQUFFO0lBQ2RqQiw4Q0FBS0EsQ0FBQ2dCLE1BQU07UUFDUkUsV0FBVyxTQUFVQyxJQUFJO1lBQ3JCRixNQUFNRyxJQUFJLENBQUNELEtBQUtMLElBQUksQ0FBQ0YsS0FBSztRQUM5QjtJQUNKO0lBQ0EsT0FBT0s7QUFDWDtBQUNPLElBQUlJLG1CQUFtQixTQUFVSixLQUFLLEVBQUVELElBQUk7SUFDL0MsT0FBT00sY0FBY0wsT0FBT0QsTUFBTTtBQUN0QyxFQUFFO0FBQ0ssSUFBSU8sbUJBQW1CLFNBQVVOLEtBQUssRUFBRUQsSUFBSTtJQUMvQyxPQUFPTSxjQUFjTCxPQUFPRCxNQUFNO0FBQ3RDLEVBQUU7QUFDSyxTQUFTTSxjQUFjTCxLQUFLLEVBQUVELElBQUksRUFBRVEsR0FBRztJQUMxQyxJQUFJQyxVQUFVLElBQUlDLElBQUlUO0lBQ3RCLElBQUlVLGNBQWNGLFFBQVFHLElBQUk7SUFDOUI1Qiw4Q0FBS0EsQ0FBQ2dCLE1BQU07UUFDUkUsV0FBVyxTQUFVQyxJQUFJO1lBQ3JCLElBQUlNLFFBQVFJLE1BQU0sQ0FBQ1YsS0FBS0wsSUFBSSxDQUFDRixLQUFLLEtBQU0sRUFBQ1ksT0FBTyxDQUFDQyxRQUFRRyxJQUFJLEdBQUc7Z0JBQzVELE9BQU8zQiwwQ0FBS0E7WUFDaEI7UUFDSjtJQUNKO0lBQ0EsT0FBT3VCLE1BQU0sQ0FBQ0MsUUFBUUcsSUFBSSxHQUFHSCxRQUFRRyxJQUFJLEdBQUdEO0FBQ2hEO0FBQ08sU0FBU0csaUJBQWlCQyxRQUFRO0lBQ3JDLE9BQU9BLFlBQVlULGNBQWM7UUFBQztRQUFVO0tBQVMsRUFBRVMsVUFBVTtBQUNyRTtBQUNBLFNBQVNDLHFCQUFxQjdCLEVBQUU7SUFDNUIsSUFBSVMsUUFBUVQsR0FBR1csSUFBSSxDQUFDRixLQUFLO0lBQ3pCLE9BQU9BLFVBQVUsVUFBVUEsVUFBVTtBQUN6QztBQUNPLFNBQVNMLHVCQUF1QkYsVUFBVTtJQUM3QyxJQUFJNEIsU0FBUyxFQUFFO0lBQ2YsSUFBSTVCLGNBQWNBLFdBQVdDLE1BQU0sRUFBRTtRQUNqQ0QsV0FBVzZCLE9BQU8sQ0FBQyxTQUFVekIsU0FBUztZQUNsQyxJQUFJLENBQUN1QixxQkFBcUJ2QixZQUN0QjtZQUNKLElBQUkwQixxQkFBcUIxQixVQUFVMkIsU0FBUztZQUM1QyxJQUFJQyxnQkFBZ0I1QixVQUFVSyxJQUFJLENBQUNGLEtBQUs7WUFDeENiLDREQUFTQSxDQUFDb0Msc0JBQXNCQSxtQkFBbUI3QixNQUFNLEtBQUssR0FBRyxJQUFJK0I7WUFDckUsSUFBSTNCLGFBQWF5QixrQkFBa0IsQ0FBQyxFQUFFO1lBQ3RDcEMsNERBQVNBLENBQUNXLFdBQVdJLElBQUksSUFBSUosV0FBV0ksSUFBSSxDQUFDRixLQUFLLEtBQUssTUFBTSxJQUFJeUI7WUFDakUsSUFBSUMsVUFBVTVCLFdBQVdFLEtBQUs7WUFDOUJiLDREQUFTQSxDQUFDdUMsV0FDTEEsQ0FBQUEsUUFBUXpCLElBQUksS0FBSyxjQUFjeUIsUUFBUXpCLElBQUksS0FBSyxjQUFhLEdBQUksSUFBSXdCO1lBQzFFSixPQUFPYixJQUFJLENBQUM7Z0JBQUVYLFdBQVdBO2dCQUFXQyxZQUFZQTtZQUFXO1FBQy9EO0lBQ0o7SUFDQSxPQUFPdUI7QUFDWCxFQUNBLHNDQUFzQyIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1cm5pLWFwcC8uL25vZGVfbW9kdWxlcy9AYXBvbGxvL2NsaWVudC91dGlsaXRpZXMvZ3JhcGhxbC9kaXJlY3RpdmVzLmpzP2UwMDAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaW52YXJpYW50IH0gZnJvbSBcIi4uL2dsb2JhbHMvaW5kZXguanNcIjtcbmltcG9ydCB7IHZpc2l0LCBCUkVBSyB9IGZyb20gXCJncmFwaHFsXCI7XG5leHBvcnQgZnVuY3Rpb24gc2hvdWxkSW5jbHVkZShfYSwgdmFyaWFibGVzKSB7XG4gICAgdmFyIGRpcmVjdGl2ZXMgPSBfYS5kaXJlY3RpdmVzO1xuICAgIGlmICghZGlyZWN0aXZlcyB8fCAhZGlyZWN0aXZlcy5sZW5ndGgpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIHJldHVybiBnZXRJbmNsdXNpb25EaXJlY3RpdmVzKGRpcmVjdGl2ZXMpLmV2ZXJ5KGZ1bmN0aW9uIChfYSkge1xuICAgICAgICB2YXIgZGlyZWN0aXZlID0gX2EuZGlyZWN0aXZlLCBpZkFyZ3VtZW50ID0gX2EuaWZBcmd1bWVudDtcbiAgICAgICAgdmFyIGV2YWxlZFZhbHVlID0gZmFsc2U7XG4gICAgICAgIGlmIChpZkFyZ3VtZW50LnZhbHVlLmtpbmQgPT09IFwiVmFyaWFibGVcIikge1xuICAgICAgICAgICAgZXZhbGVkVmFsdWUgPVxuICAgICAgICAgICAgICAgIHZhcmlhYmxlcyAmJiB2YXJpYWJsZXNbaWZBcmd1bWVudC52YWx1ZS5uYW1lLnZhbHVlXTtcbiAgICAgICAgICAgIGludmFyaWFudChldmFsZWRWYWx1ZSAhPT0gdm9pZCAwLCA2NiwgZGlyZWN0aXZlLm5hbWUudmFsdWUpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgZXZhbGVkVmFsdWUgPSBpZkFyZ3VtZW50LnZhbHVlLnZhbHVlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBkaXJlY3RpdmUubmFtZS52YWx1ZSA9PT0gXCJza2lwXCIgPyAhZXZhbGVkVmFsdWUgOiBldmFsZWRWYWx1ZTtcbiAgICB9KTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXREaXJlY3RpdmVOYW1lcyhyb290KSB7XG4gICAgdmFyIG5hbWVzID0gW107XG4gICAgdmlzaXQocm9vdCwge1xuICAgICAgICBEaXJlY3RpdmU6IGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICAgICAgICBuYW1lcy5wdXNoKG5vZGUubmFtZS52YWx1ZSk7XG4gICAgICAgIH0sXG4gICAgfSk7XG4gICAgcmV0dXJuIG5hbWVzO1xufVxuZXhwb3J0IHZhciBoYXNBbnlEaXJlY3RpdmVzID0gZnVuY3Rpb24gKG5hbWVzLCByb290KSB7XG4gICAgcmV0dXJuIGhhc0RpcmVjdGl2ZXMobmFtZXMsIHJvb3QsIGZhbHNlKTtcbn07XG5leHBvcnQgdmFyIGhhc0FsbERpcmVjdGl2ZXMgPSBmdW5jdGlvbiAobmFtZXMsIHJvb3QpIHtcbiAgICByZXR1cm4gaGFzRGlyZWN0aXZlcyhuYW1lcywgcm9vdCwgdHJ1ZSk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIGhhc0RpcmVjdGl2ZXMobmFtZXMsIHJvb3QsIGFsbCkge1xuICAgIHZhciBuYW1lU2V0ID0gbmV3IFNldChuYW1lcyk7XG4gICAgdmFyIHVuaXF1ZUNvdW50ID0gbmFtZVNldC5zaXplO1xuICAgIHZpc2l0KHJvb3QsIHtcbiAgICAgICAgRGlyZWN0aXZlOiBmdW5jdGlvbiAobm9kZSkge1xuICAgICAgICAgICAgaWYgKG5hbWVTZXQuZGVsZXRlKG5vZGUubmFtZS52YWx1ZSkgJiYgKCFhbGwgfHwgIW5hbWVTZXQuc2l6ZSkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gQlJFQUs7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgfSk7XG4gICAgcmV0dXJuIGFsbCA/ICFuYW1lU2V0LnNpemUgOiBuYW1lU2V0LnNpemUgPCB1bmlxdWVDb3VudDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBoYXNDbGllbnRFeHBvcnRzKGRvY3VtZW50KSB7XG4gICAgcmV0dXJuIGRvY3VtZW50ICYmIGhhc0RpcmVjdGl2ZXMoW1wiY2xpZW50XCIsIFwiZXhwb3J0XCJdLCBkb2N1bWVudCwgdHJ1ZSk7XG59XG5mdW5jdGlvbiBpc0luY2x1c2lvbkRpcmVjdGl2ZShfYSkge1xuICAgIHZhciB2YWx1ZSA9IF9hLm5hbWUudmFsdWU7XG4gICAgcmV0dXJuIHZhbHVlID09PSBcInNraXBcIiB8fCB2YWx1ZSA9PT0gXCJpbmNsdWRlXCI7XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0SW5jbHVzaW9uRGlyZWN0aXZlcyhkaXJlY3RpdmVzKSB7XG4gICAgdmFyIHJlc3VsdCA9IFtdO1xuICAgIGlmIChkaXJlY3RpdmVzICYmIGRpcmVjdGl2ZXMubGVuZ3RoKSB7XG4gICAgICAgIGRpcmVjdGl2ZXMuZm9yRWFjaChmdW5jdGlvbiAoZGlyZWN0aXZlKSB7XG4gICAgICAgICAgICBpZiAoIWlzSW5jbHVzaW9uRGlyZWN0aXZlKGRpcmVjdGl2ZSkpXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgdmFyIGRpcmVjdGl2ZUFyZ3VtZW50cyA9IGRpcmVjdGl2ZS5hcmd1bWVudHM7XG4gICAgICAgICAgICB2YXIgZGlyZWN0aXZlTmFtZSA9IGRpcmVjdGl2ZS5uYW1lLnZhbHVlO1xuICAgICAgICAgICAgaW52YXJpYW50KGRpcmVjdGl2ZUFyZ3VtZW50cyAmJiBkaXJlY3RpdmVBcmd1bWVudHMubGVuZ3RoID09PSAxLCA2NywgZGlyZWN0aXZlTmFtZSk7XG4gICAgICAgICAgICB2YXIgaWZBcmd1bWVudCA9IGRpcmVjdGl2ZUFyZ3VtZW50c1swXTtcbiAgICAgICAgICAgIGludmFyaWFudChpZkFyZ3VtZW50Lm5hbWUgJiYgaWZBcmd1bWVudC5uYW1lLnZhbHVlID09PSBcImlmXCIsIDY4LCBkaXJlY3RpdmVOYW1lKTtcbiAgICAgICAgICAgIHZhciBpZlZhbHVlID0gaWZBcmd1bWVudC52YWx1ZTtcbiAgICAgICAgICAgIGludmFyaWFudChpZlZhbHVlICYmXG4gICAgICAgICAgICAgICAgKGlmVmFsdWUua2luZCA9PT0gXCJWYXJpYWJsZVwiIHx8IGlmVmFsdWUua2luZCA9PT0gXCJCb29sZWFuVmFsdWVcIiksIDY5LCBkaXJlY3RpdmVOYW1lKTtcbiAgICAgICAgICAgIHJlc3VsdC5wdXNoKHsgZGlyZWN0aXZlOiBkaXJlY3RpdmUsIGlmQXJndW1lbnQ6IGlmQXJndW1lbnQgfSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGlyZWN0aXZlcy5qcy5tYXAiXSwibmFtZXMiOlsiaW52YXJpYW50IiwidmlzaXQiLCJCUkVBSyIsInNob3VsZEluY2x1ZGUiLCJfYSIsInZhcmlhYmxlcyIsImRpcmVjdGl2ZXMiLCJsZW5ndGgiLCJnZXRJbmNsdXNpb25EaXJlY3RpdmVzIiwiZXZlcnkiLCJkaXJlY3RpdmUiLCJpZkFyZ3VtZW50IiwiZXZhbGVkVmFsdWUiLCJ2YWx1ZSIsImtpbmQiLCJuYW1lIiwiZ2V0RGlyZWN0aXZlTmFtZXMiLCJyb290IiwibmFtZXMiLCJEaXJlY3RpdmUiLCJub2RlIiwicHVzaCIsImhhc0FueURpcmVjdGl2ZXMiLCJoYXNEaXJlY3RpdmVzIiwiaGFzQWxsRGlyZWN0aXZlcyIsImFsbCIsIm5hbWVTZXQiLCJTZXQiLCJ1bmlxdWVDb3VudCIsInNpemUiLCJkZWxldGUiLCJoYXNDbGllbnRFeHBvcnRzIiwiZG9jdW1lbnQiLCJpc0luY2x1c2lvbkRpcmVjdGl2ZSIsInJlc3VsdCIsImZvckVhY2giLCJkaXJlY3RpdmVBcmd1bWVudHMiLCJhcmd1bWVudHMiLCJkaXJlY3RpdmVOYW1lIiwiaWZWYWx1ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/utilities/graphql/directives.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/utilities/graphql/fragments.js":
/*!********************************************************************!*\
  !*** ./node_modules/@apollo/client/utilities/graphql/fragments.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createFragmentMap: () => (/* binding */ createFragmentMap),\n/* harmony export */   getFragmentFromSelection: () => (/* binding */ getFragmentFromSelection),\n/* harmony export */   getFragmentQueryDocument: () => (/* binding */ getFragmentQueryDocument)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.mjs\");\n/* harmony import */ var _globals_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../globals/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/globals/index.js\");\n\n\nfunction getFragmentQueryDocument(document, fragmentName) {\n    var actualFragmentName = fragmentName;\n    var fragments = [];\n    document.definitions.forEach(function(definition) {\n        if (definition.kind === \"OperationDefinition\") {\n            throw (0,_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.newInvariantError)(70, definition.operation, definition.name ? \" named '\".concat(definition.name.value, \"'\") : \"\");\n        }\n        if (definition.kind === \"FragmentDefinition\") {\n            fragments.push(definition);\n        }\n    });\n    if (typeof actualFragmentName === \"undefined\") {\n        (0,_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.invariant)(fragments.length === 1, 71, fragments.length);\n        actualFragmentName = fragments[0].name.value;\n    }\n    var query = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, document), {\n        definitions: (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)([\n            {\n                kind: \"OperationDefinition\",\n                operation: \"query\",\n                selectionSet: {\n                    kind: \"SelectionSet\",\n                    selections: [\n                        {\n                            kind: \"FragmentSpread\",\n                            name: {\n                                kind: \"Name\",\n                                value: actualFragmentName\n                            }\n                        }\n                    ]\n                }\n            }\n        ], document.definitions, true)\n    });\n    return query;\n}\nfunction createFragmentMap(fragments) {\n    if (fragments === void 0) {\n        fragments = [];\n    }\n    var symTable = {};\n    fragments.forEach(function(fragment) {\n        symTable[fragment.name.value] = fragment;\n    });\n    return symTable;\n}\nfunction getFragmentFromSelection(selection, fragmentMap) {\n    switch(selection.kind){\n        case \"InlineFragment\":\n            return selection;\n        case \"FragmentSpread\":\n            {\n                var fragmentName = selection.name.value;\n                if (typeof fragmentMap === \"function\") {\n                    return fragmentMap(fragmentName);\n                }\n                var fragment = fragmentMap && fragmentMap[fragmentName];\n                (0,_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.invariant)(fragment, 72, fragmentName);\n                return fragment || null;\n            }\n        default:\n            return null;\n    }\n} //# sourceMappingURL=fragments.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFwb2xsby9jbGllbnQvdXRpbGl0aWVzL2dyYXBocWwvZnJhZ21lbnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQWdEO0FBQ21CO0FBQzVELFNBQVNJLHlCQUF5QkMsUUFBUSxFQUFFQyxZQUFZO0lBQzNELElBQUlDLHFCQUFxQkQ7SUFDekIsSUFBSUUsWUFBWSxFQUFFO0lBQ2xCSCxTQUFTSSxXQUFXLENBQUNDLE9BQU8sQ0FBQyxTQUFVQyxVQUFVO1FBQzdDLElBQUlBLFdBQVdDLElBQUksS0FBSyx1QkFBdUI7WUFDM0MsTUFBTVQsb0VBQWlCQSxDQUNuQixJQUNBUSxXQUFXRSxTQUFTLEVBQ3BCRixXQUFXRyxJQUFJLEdBQUcsV0FBV0MsTUFBTSxDQUFDSixXQUFXRyxJQUFJLENBQUNFLEtBQUssRUFBRSxPQUFPO1FBRTFFO1FBQ0EsSUFBSUwsV0FBV0MsSUFBSSxLQUFLLHNCQUFzQjtZQUMxQ0osVUFBVVMsSUFBSSxDQUFDTjtRQUNuQjtJQUNKO0lBQ0EsSUFBSSxPQUFPSix1QkFBdUIsYUFBYTtRQUMzQ0wsNERBQVNBLENBQUNNLFVBQVVVLE1BQU0sS0FBSyxHQUFHLElBQUlWLFVBQVVVLE1BQU07UUFDdERYLHFCQUFxQkMsU0FBUyxDQUFDLEVBQUUsQ0FBQ00sSUFBSSxDQUFDRSxLQUFLO0lBQ2hEO0lBQ0EsSUFBSUcsUUFBUW5CLCtDQUFRQSxDQUFDQSwrQ0FBUUEsQ0FBQyxDQUFDLEdBQUdLLFdBQVc7UUFBRUksYUFBYVIsb0RBQWFBLENBQUM7WUFDbEU7Z0JBQ0lXLE1BQU07Z0JBQ05DLFdBQVc7Z0JBQ1hPLGNBQWM7b0JBQ1ZSLE1BQU07b0JBQ05TLFlBQVk7d0JBQ1I7NEJBQ0lULE1BQU07NEJBQ05FLE1BQU07Z0NBQ0ZGLE1BQU07Z0NBQ05JLE9BQU9UOzRCQUNYO3dCQUNKO3FCQUNIO2dCQUNMO1lBQ0o7U0FDSCxFQUFFRixTQUFTSSxXQUFXLEVBQUU7SUFBTTtJQUNuQyxPQUFPVTtBQUNYO0FBQ08sU0FBU0csa0JBQWtCZCxTQUFTO0lBQ3ZDLElBQUlBLGNBQWMsS0FBSyxHQUFHO1FBQUVBLFlBQVksRUFBRTtJQUFFO0lBQzVDLElBQUllLFdBQVcsQ0FBQztJQUNoQmYsVUFBVUUsT0FBTyxDQUFDLFNBQVVjLFFBQVE7UUFDaENELFFBQVEsQ0FBQ0MsU0FBU1YsSUFBSSxDQUFDRSxLQUFLLENBQUMsR0FBR1E7SUFDcEM7SUFDQSxPQUFPRDtBQUNYO0FBQ08sU0FBU0UseUJBQXlCQyxTQUFTLEVBQUVDLFdBQVc7SUFDM0QsT0FBUUQsVUFBVWQsSUFBSTtRQUNsQixLQUFLO1lBQ0QsT0FBT2M7UUFDWCxLQUFLO1lBQWtCO2dCQUNuQixJQUFJcEIsZUFBZW9CLFVBQVVaLElBQUksQ0FBQ0UsS0FBSztnQkFDdkMsSUFBSSxPQUFPVyxnQkFBZ0IsWUFBWTtvQkFDbkMsT0FBT0EsWUFBWXJCO2dCQUN2QjtnQkFDQSxJQUFJa0IsV0FBV0csZUFBZUEsV0FBVyxDQUFDckIsYUFBYTtnQkFDdkRKLDREQUFTQSxDQUFDc0IsVUFBVSxJQUFJbEI7Z0JBQ3hCLE9BQU9rQixZQUFZO1lBQ3ZCO1FBQ0E7WUFDSSxPQUFPO0lBQ2Y7QUFDSixFQUNBLHFDQUFxQyIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1cm5pLWFwcC8uL25vZGVfbW9kdWxlcy9AYXBvbGxvL2NsaWVudC91dGlsaXRpZXMvZ3JhcGhxbC9mcmFnbWVudHMuanM/YTQ1MyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBfX2Fzc2lnbiwgX19zcHJlYWRBcnJheSB9IGZyb20gXCJ0c2xpYlwiO1xuaW1wb3J0IHsgaW52YXJpYW50LCBuZXdJbnZhcmlhbnRFcnJvciB9IGZyb20gXCIuLi9nbG9iYWxzL2luZGV4LmpzXCI7XG5leHBvcnQgZnVuY3Rpb24gZ2V0RnJhZ21lbnRRdWVyeURvY3VtZW50KGRvY3VtZW50LCBmcmFnbWVudE5hbWUpIHtcbiAgICB2YXIgYWN0dWFsRnJhZ21lbnROYW1lID0gZnJhZ21lbnROYW1lO1xuICAgIHZhciBmcmFnbWVudHMgPSBbXTtcbiAgICBkb2N1bWVudC5kZWZpbml0aW9ucy5mb3JFYWNoKGZ1bmN0aW9uIChkZWZpbml0aW9uKSB7XG4gICAgICAgIGlmIChkZWZpbml0aW9uLmtpbmQgPT09IFwiT3BlcmF0aW9uRGVmaW5pdGlvblwiKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXdJbnZhcmlhbnRFcnJvcihcbiAgICAgICAgICAgICAgICA3MCxcbiAgICAgICAgICAgICAgICBkZWZpbml0aW9uLm9wZXJhdGlvbixcbiAgICAgICAgICAgICAgICBkZWZpbml0aW9uLm5hbWUgPyBcIiBuYW1lZCAnXCIuY29uY2F0KGRlZmluaXRpb24ubmFtZS52YWx1ZSwgXCInXCIpIDogXCJcIlxuICAgICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoZGVmaW5pdGlvbi5raW5kID09PSBcIkZyYWdtZW50RGVmaW5pdGlvblwiKSB7XG4gICAgICAgICAgICBmcmFnbWVudHMucHVzaChkZWZpbml0aW9uKTtcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIGlmICh0eXBlb2YgYWN0dWFsRnJhZ21lbnROYW1lID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIGludmFyaWFudChmcmFnbWVudHMubGVuZ3RoID09PSAxLCA3MSwgZnJhZ21lbnRzLmxlbmd0aCk7XG4gICAgICAgIGFjdHVhbEZyYWdtZW50TmFtZSA9IGZyYWdtZW50c1swXS5uYW1lLnZhbHVlO1xuICAgIH1cbiAgICB2YXIgcXVlcnkgPSBfX2Fzc2lnbihfX2Fzc2lnbih7fSwgZG9jdW1lbnQpLCB7IGRlZmluaXRpb25zOiBfX3NwcmVhZEFycmF5KFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBraW5kOiBcIk9wZXJhdGlvbkRlZmluaXRpb25cIixcbiAgICAgICAgICAgICAgICBvcGVyYXRpb246IFwicXVlcnlcIixcbiAgICAgICAgICAgICAgICBzZWxlY3Rpb25TZXQ6IHtcbiAgICAgICAgICAgICAgICAgICAga2luZDogXCJTZWxlY3Rpb25TZXRcIixcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0aW9uczogW1xuICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGtpbmQ6IFwiRnJhZ21lbnRTcHJlYWRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGtpbmQ6IFwiTmFtZVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogYWN0dWFsRnJhZ21lbnROYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9XG4gICAgICAgIF0sIGRvY3VtZW50LmRlZmluaXRpb25zLCB0cnVlKSB9KTtcbiAgICByZXR1cm4gcXVlcnk7XG59XG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlRnJhZ21lbnRNYXAoZnJhZ21lbnRzKSB7XG4gICAgaWYgKGZyYWdtZW50cyA9PT0gdm9pZCAwKSB7IGZyYWdtZW50cyA9IFtdOyB9XG4gICAgdmFyIHN5bVRhYmxlID0ge307XG4gICAgZnJhZ21lbnRzLmZvckVhY2goZnVuY3Rpb24gKGZyYWdtZW50KSB7XG4gICAgICAgIHN5bVRhYmxlW2ZyYWdtZW50Lm5hbWUudmFsdWVdID0gZnJhZ21lbnQ7XG4gICAgfSk7XG4gICAgcmV0dXJuIHN5bVRhYmxlO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldEZyYWdtZW50RnJvbVNlbGVjdGlvbihzZWxlY3Rpb24sIGZyYWdtZW50TWFwKSB7XG4gICAgc3dpdGNoIChzZWxlY3Rpb24ua2luZCkge1xuICAgICAgICBjYXNlIFwiSW5saW5lRnJhZ21lbnRcIjpcbiAgICAgICAgICAgIHJldHVybiBzZWxlY3Rpb247XG4gICAgICAgIGNhc2UgXCJGcmFnbWVudFNwcmVhZFwiOiB7XG4gICAgICAgICAgICB2YXIgZnJhZ21lbnROYW1lID0gc2VsZWN0aW9uLm5hbWUudmFsdWU7XG4gICAgICAgICAgICBpZiAodHlwZW9mIGZyYWdtZW50TWFwID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZnJhZ21lbnRNYXAoZnJhZ21lbnROYW1lKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZhciBmcmFnbWVudCA9IGZyYWdtZW50TWFwICYmIGZyYWdtZW50TWFwW2ZyYWdtZW50TmFtZV07XG4gICAgICAgICAgICBpbnZhcmlhbnQoZnJhZ21lbnQsIDcyLCBmcmFnbWVudE5hbWUpO1xuICAgICAgICAgICAgcmV0dXJuIGZyYWdtZW50IHx8IG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWZyYWdtZW50cy5qcy5tYXAiXSwibmFtZXMiOlsiX19hc3NpZ24iLCJfX3NwcmVhZEFycmF5IiwiaW52YXJpYW50IiwibmV3SW52YXJpYW50RXJyb3IiLCJnZXRGcmFnbWVudFF1ZXJ5RG9jdW1lbnQiLCJkb2N1bWVudCIsImZyYWdtZW50TmFtZSIsImFjdHVhbEZyYWdtZW50TmFtZSIsImZyYWdtZW50cyIsImRlZmluaXRpb25zIiwiZm9yRWFjaCIsImRlZmluaXRpb24iLCJraW5kIiwib3BlcmF0aW9uIiwibmFtZSIsImNvbmNhdCIsInZhbHVlIiwicHVzaCIsImxlbmd0aCIsInF1ZXJ5Iiwic2VsZWN0aW9uU2V0Iiwic2VsZWN0aW9ucyIsImNyZWF0ZUZyYWdtZW50TWFwIiwic3ltVGFibGUiLCJmcmFnbWVudCIsImdldEZyYWdtZW50RnJvbVNlbGVjdGlvbiIsInNlbGVjdGlvbiIsImZyYWdtZW50TWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/utilities/graphql/fragments.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/utilities/graphql/getFromAST.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@apollo/client/utilities/graphql/getFromAST.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkDocument: () => (/* binding */ checkDocument),\n/* harmony export */   getDefaultValues: () => (/* binding */ getDefaultValues),\n/* harmony export */   getFragmentDefinition: () => (/* binding */ getFragmentDefinition),\n/* harmony export */   getFragmentDefinitions: () => (/* binding */ getFragmentDefinitions),\n/* harmony export */   getMainDefinition: () => (/* binding */ getMainDefinition),\n/* harmony export */   getOperationDefinition: () => (/* binding */ getOperationDefinition),\n/* harmony export */   getOperationName: () => (/* binding */ getOperationName),\n/* harmony export */   getQueryDefinition: () => (/* binding */ getQueryDefinition)\n/* harmony export */ });\n/* harmony import */ var _globals_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../globals/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/globals/index.js\");\n/* harmony import */ var _storeUtils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./storeUtils.js */ \"(ssr)/./node_modules/@apollo/client/utilities/graphql/storeUtils.js\");\n\n\nfunction checkDocument(doc) {\n    (0,_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.invariant)(doc && doc.kind === \"Document\", 73);\n    var operations = doc.definitions.filter(function(d) {\n        return d.kind !== \"FragmentDefinition\";\n    }).map(function(definition) {\n        if (definition.kind !== \"OperationDefinition\") {\n            throw (0,_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.newInvariantError)(74, definition.kind);\n        }\n        return definition;\n    });\n    (0,_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.invariant)(operations.length <= 1, 75, operations.length);\n    return doc;\n}\nfunction getOperationDefinition(doc) {\n    checkDocument(doc);\n    return doc.definitions.filter(function(definition) {\n        return definition.kind === \"OperationDefinition\";\n    })[0];\n}\nfunction getOperationName(doc) {\n    return doc.definitions.filter(function(definition) {\n        return definition.kind === \"OperationDefinition\" && !!definition.name;\n    }).map(function(x) {\n        return x.name.value;\n    })[0] || null;\n}\nfunction getFragmentDefinitions(doc) {\n    return doc.definitions.filter(function(definition) {\n        return definition.kind === \"FragmentDefinition\";\n    });\n}\nfunction getQueryDefinition(doc) {\n    var queryDef = getOperationDefinition(doc);\n    (0,_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.invariant)(queryDef && queryDef.operation === \"query\", 76);\n    return queryDef;\n}\nfunction getFragmentDefinition(doc) {\n    (0,_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.invariant)(doc.kind === \"Document\", 77);\n    (0,_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.invariant)(doc.definitions.length <= 1, 78);\n    var fragmentDef = doc.definitions[0];\n    (0,_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.invariant)(fragmentDef.kind === \"FragmentDefinition\", 79);\n    return fragmentDef;\n}\nfunction getMainDefinition(queryDoc) {\n    checkDocument(queryDoc);\n    var fragmentDefinition;\n    for(var _i = 0, _a = queryDoc.definitions; _i < _a.length; _i++){\n        var definition = _a[_i];\n        if (definition.kind === \"OperationDefinition\") {\n            var operation = definition.operation;\n            if (operation === \"query\" || operation === \"mutation\" || operation === \"subscription\") {\n                return definition;\n            }\n        }\n        if (definition.kind === \"FragmentDefinition\" && !fragmentDefinition) {\n            fragmentDefinition = definition;\n        }\n    }\n    if (fragmentDefinition) {\n        return fragmentDefinition;\n    }\n    throw (0,_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.newInvariantError)(80);\n}\nfunction getDefaultValues(definition) {\n    var defaultValues = Object.create(null);\n    var defs = definition && definition.variableDefinitions;\n    if (defs && defs.length) {\n        defs.forEach(function(def) {\n            if (def.defaultValue) {\n                (0,_storeUtils_js__WEBPACK_IMPORTED_MODULE_1__.valueToObjectRepresentation)(defaultValues, def.variable.name, def.defaultValue);\n            }\n        });\n    }\n    return defaultValues;\n} //# sourceMappingURL=getFromAST.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFwb2xsby9jbGllbnQvdXRpbGl0aWVzL2dyYXBocWwvZ2V0RnJvbUFTVC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQW1FO0FBQ0w7QUFDdkQsU0FBU0csY0FBY0MsR0FBRztJQUM3QkosNERBQVNBLENBQUNJLE9BQU9BLElBQUlDLElBQUksS0FBSyxZQUFZO0lBQzFDLElBQUlDLGFBQWFGLElBQUlHLFdBQVcsQ0FDM0JDLE1BQU0sQ0FBQyxTQUFVQyxDQUFDO1FBQUksT0FBT0EsRUFBRUosSUFBSSxLQUFLO0lBQXNCLEdBQzlESyxHQUFHLENBQUMsU0FBVUMsVUFBVTtRQUN6QixJQUFJQSxXQUFXTixJQUFJLEtBQUssdUJBQXVCO1lBQzNDLE1BQU1KLG9FQUFpQkEsQ0FBQyxJQUFJVSxXQUFXTixJQUFJO1FBQy9DO1FBQ0EsT0FBT007SUFDWDtJQUNBWCw0REFBU0EsQ0FBQ00sV0FBV00sTUFBTSxJQUFJLEdBQUcsSUFBSU4sV0FBV00sTUFBTTtJQUN2RCxPQUFPUjtBQUNYO0FBQ08sU0FBU1MsdUJBQXVCVCxHQUFHO0lBQ3RDRCxjQUFjQztJQUNkLE9BQU9BLElBQUlHLFdBQVcsQ0FBQ0MsTUFBTSxDQUFDLFNBQVVHLFVBQVU7UUFDOUMsT0FBT0EsV0FBV04sSUFBSSxLQUFLO0lBQy9CLEVBQUUsQ0FBQyxFQUFFO0FBQ1Q7QUFDTyxTQUFTUyxpQkFBaUJWLEdBQUc7SUFDaEMsT0FBUUEsSUFBSUcsV0FBVyxDQUNsQkMsTUFBTSxDQUFDLFNBQVVHLFVBQVU7UUFDNUIsT0FBT0EsV0FBV04sSUFBSSxLQUFLLHlCQUF5QixDQUFDLENBQUNNLFdBQVdJLElBQUk7SUFDekUsR0FDS0wsR0FBRyxDQUFDLFNBQVVNLENBQUM7UUFBSSxPQUFPQSxFQUFFRCxJQUFJLENBQUNFLEtBQUs7SUFBRSxFQUFFLENBQUMsRUFBRSxJQUFJO0FBQzFEO0FBQ08sU0FBU0MsdUJBQXVCZCxHQUFHO0lBQ3RDLE9BQU9BLElBQUlHLFdBQVcsQ0FBQ0MsTUFBTSxDQUFDLFNBQVVHLFVBQVU7UUFDOUMsT0FBT0EsV0FBV04sSUFBSSxLQUFLO0lBQy9CO0FBQ0o7QUFDTyxTQUFTYyxtQkFBbUJmLEdBQUc7SUFDbEMsSUFBSWdCLFdBQVdQLHVCQUF1QlQ7SUFDdENKLDREQUFTQSxDQUFDb0IsWUFBWUEsU0FBU0MsU0FBUyxLQUFLLFNBQVM7SUFDdEQsT0FBT0Q7QUFDWDtBQUNPLFNBQVNFLHNCQUFzQmxCLEdBQUc7SUFDckNKLDREQUFTQSxDQUFDSSxJQUFJQyxJQUFJLEtBQUssWUFBWTtJQUNuQ0wsNERBQVNBLENBQUNJLElBQUlHLFdBQVcsQ0FBQ0ssTUFBTSxJQUFJLEdBQUc7SUFDdkMsSUFBSVcsY0FBY25CLElBQUlHLFdBQVcsQ0FBQyxFQUFFO0lBQ3BDUCw0REFBU0EsQ0FBQ3VCLFlBQVlsQixJQUFJLEtBQUssc0JBQXNCO0lBQ3JELE9BQU9rQjtBQUNYO0FBQ08sU0FBU0Msa0JBQWtCQyxRQUFRO0lBQ3RDdEIsY0FBY3NCO0lBQ2QsSUFBSUM7SUFDSixJQUFLLElBQUlDLEtBQUssR0FBR0MsS0FBS0gsU0FBU2xCLFdBQVcsRUFBRW9CLEtBQUtDLEdBQUdoQixNQUFNLEVBQUVlLEtBQU07UUFDOUQsSUFBSWhCLGFBQWFpQixFQUFFLENBQUNELEdBQUc7UUFDdkIsSUFBSWhCLFdBQVdOLElBQUksS0FBSyx1QkFBdUI7WUFDM0MsSUFBSWdCLFlBQVlWLFdBQVdVLFNBQVM7WUFDcEMsSUFBSUEsY0FBYyxXQUNkQSxjQUFjLGNBQ2RBLGNBQWMsZ0JBQWdCO2dCQUM5QixPQUFPVjtZQUNYO1FBQ0o7UUFDQSxJQUFJQSxXQUFXTixJQUFJLEtBQUssd0JBQXdCLENBQUNxQixvQkFBb0I7WUFDakVBLHFCQUFxQmY7UUFDekI7SUFDSjtJQUNBLElBQUllLG9CQUFvQjtRQUNwQixPQUFPQTtJQUNYO0lBQ0EsTUFBTXpCLG9FQUFpQkEsQ0FBQztBQUM1QjtBQUNPLFNBQVM0QixpQkFBaUJsQixVQUFVO0lBQ3ZDLElBQUltQixnQkFBZ0JDLE9BQU9DLE1BQU0sQ0FBQztJQUNsQyxJQUFJQyxPQUFPdEIsY0FBY0EsV0FBV3VCLG1CQUFtQjtJQUN2RCxJQUFJRCxRQUFRQSxLQUFLckIsTUFBTSxFQUFFO1FBQ3JCcUIsS0FBS0UsT0FBTyxDQUFDLFNBQVVDLEdBQUc7WUFDdEIsSUFBSUEsSUFBSUMsWUFBWSxFQUFFO2dCQUNsQm5DLDJFQUEyQkEsQ0FBQzRCLGVBQWVNLElBQUlFLFFBQVEsQ0FBQ3ZCLElBQUksRUFBRXFCLElBQUlDLFlBQVk7WUFDbEY7UUFDSjtJQUNKO0lBQ0EsT0FBT1A7QUFDWCxFQUNBLHNDQUFzQyIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1cm5pLWFwcC8uL25vZGVfbW9kdWxlcy9AYXBvbGxvL2NsaWVudC91dGlsaXRpZXMvZ3JhcGhxbC9nZXRGcm9tQVNULmpzP2MyZDkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaW52YXJpYW50LCBuZXdJbnZhcmlhbnRFcnJvciB9IGZyb20gXCIuLi9nbG9iYWxzL2luZGV4LmpzXCI7XG5pbXBvcnQgeyB2YWx1ZVRvT2JqZWN0UmVwcmVzZW50YXRpb24gfSBmcm9tIFwiLi9zdG9yZVV0aWxzLmpzXCI7XG5leHBvcnQgZnVuY3Rpb24gY2hlY2tEb2N1bWVudChkb2MpIHtcbiAgICBpbnZhcmlhbnQoZG9jICYmIGRvYy5raW5kID09PSBcIkRvY3VtZW50XCIsIDczKTtcbiAgICB2YXIgb3BlcmF0aW9ucyA9IGRvYy5kZWZpbml0aW9uc1xuICAgICAgICAuZmlsdGVyKGZ1bmN0aW9uIChkKSB7IHJldHVybiBkLmtpbmQgIT09IFwiRnJhZ21lbnREZWZpbml0aW9uXCI7IH0pXG4gICAgICAgIC5tYXAoZnVuY3Rpb24gKGRlZmluaXRpb24pIHtcbiAgICAgICAgaWYgKGRlZmluaXRpb24ua2luZCAhPT0gXCJPcGVyYXRpb25EZWZpbml0aW9uXCIpIHtcbiAgICAgICAgICAgIHRocm93IG5ld0ludmFyaWFudEVycm9yKDc0LCBkZWZpbml0aW9uLmtpbmQpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBkZWZpbml0aW9uO1xuICAgIH0pO1xuICAgIGludmFyaWFudChvcGVyYXRpb25zLmxlbmd0aCA8PSAxLCA3NSwgb3BlcmF0aW9ucy5sZW5ndGgpO1xuICAgIHJldHVybiBkb2M7XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0T3BlcmF0aW9uRGVmaW5pdGlvbihkb2MpIHtcbiAgICBjaGVja0RvY3VtZW50KGRvYyk7XG4gICAgcmV0dXJuIGRvYy5kZWZpbml0aW9ucy5maWx0ZXIoZnVuY3Rpb24gKGRlZmluaXRpb24pIHtcbiAgICAgICAgcmV0dXJuIGRlZmluaXRpb24ua2luZCA9PT0gXCJPcGVyYXRpb25EZWZpbml0aW9uXCI7XG4gICAgfSlbMF07XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0T3BlcmF0aW9uTmFtZShkb2MpIHtcbiAgICByZXR1cm4gKGRvYy5kZWZpbml0aW9uc1xuICAgICAgICAuZmlsdGVyKGZ1bmN0aW9uIChkZWZpbml0aW9uKSB7XG4gICAgICAgIHJldHVybiBkZWZpbml0aW9uLmtpbmQgPT09IFwiT3BlcmF0aW9uRGVmaW5pdGlvblwiICYmICEhZGVmaW5pdGlvbi5uYW1lO1xuICAgIH0pXG4gICAgICAgIC5tYXAoZnVuY3Rpb24gKHgpIHsgcmV0dXJuIHgubmFtZS52YWx1ZTsgfSlbMF0gfHwgbnVsbCk7XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0RnJhZ21lbnREZWZpbml0aW9ucyhkb2MpIHtcbiAgICByZXR1cm4gZG9jLmRlZmluaXRpb25zLmZpbHRlcihmdW5jdGlvbiAoZGVmaW5pdGlvbikge1xuICAgICAgICByZXR1cm4gZGVmaW5pdGlvbi5raW5kID09PSBcIkZyYWdtZW50RGVmaW5pdGlvblwiO1xuICAgIH0pO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldFF1ZXJ5RGVmaW5pdGlvbihkb2MpIHtcbiAgICB2YXIgcXVlcnlEZWYgPSBnZXRPcGVyYXRpb25EZWZpbml0aW9uKGRvYyk7XG4gICAgaW52YXJpYW50KHF1ZXJ5RGVmICYmIHF1ZXJ5RGVmLm9wZXJhdGlvbiA9PT0gXCJxdWVyeVwiLCA3Nik7XG4gICAgcmV0dXJuIHF1ZXJ5RGVmO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldEZyYWdtZW50RGVmaW5pdGlvbihkb2MpIHtcbiAgICBpbnZhcmlhbnQoZG9jLmtpbmQgPT09IFwiRG9jdW1lbnRcIiwgNzcpO1xuICAgIGludmFyaWFudChkb2MuZGVmaW5pdGlvbnMubGVuZ3RoIDw9IDEsIDc4KTtcbiAgICB2YXIgZnJhZ21lbnREZWYgPSBkb2MuZGVmaW5pdGlvbnNbMF07XG4gICAgaW52YXJpYW50KGZyYWdtZW50RGVmLmtpbmQgPT09IFwiRnJhZ21lbnREZWZpbml0aW9uXCIsIDc5KTtcbiAgICByZXR1cm4gZnJhZ21lbnREZWY7XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0TWFpbkRlZmluaXRpb24ocXVlcnlEb2MpIHtcbiAgICBjaGVja0RvY3VtZW50KHF1ZXJ5RG9jKTtcbiAgICB2YXIgZnJhZ21lbnREZWZpbml0aW9uO1xuICAgIGZvciAodmFyIF9pID0gMCwgX2EgPSBxdWVyeURvYy5kZWZpbml0aW9uczsgX2kgPCBfYS5sZW5ndGg7IF9pKyspIHtcbiAgICAgICAgdmFyIGRlZmluaXRpb24gPSBfYVtfaV07XG4gICAgICAgIGlmIChkZWZpbml0aW9uLmtpbmQgPT09IFwiT3BlcmF0aW9uRGVmaW5pdGlvblwiKSB7XG4gICAgICAgICAgICB2YXIgb3BlcmF0aW9uID0gZGVmaW5pdGlvbi5vcGVyYXRpb247XG4gICAgICAgICAgICBpZiAob3BlcmF0aW9uID09PSBcInF1ZXJ5XCIgfHxcbiAgICAgICAgICAgICAgICBvcGVyYXRpb24gPT09IFwibXV0YXRpb25cIiB8fFxuICAgICAgICAgICAgICAgIG9wZXJhdGlvbiA9PT0gXCJzdWJzY3JpcHRpb25cIikge1xuICAgICAgICAgICAgICAgIHJldHVybiBkZWZpbml0aW9uO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmIChkZWZpbml0aW9uLmtpbmQgPT09IFwiRnJhZ21lbnREZWZpbml0aW9uXCIgJiYgIWZyYWdtZW50RGVmaW5pdGlvbikge1xuICAgICAgICAgICAgZnJhZ21lbnREZWZpbml0aW9uID0gZGVmaW5pdGlvbjtcbiAgICAgICAgfVxuICAgIH1cbiAgICBpZiAoZnJhZ21lbnREZWZpbml0aW9uKSB7XG4gICAgICAgIHJldHVybiBmcmFnbWVudERlZmluaXRpb247XG4gICAgfVxuICAgIHRocm93IG5ld0ludmFyaWFudEVycm9yKDgwKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXREZWZhdWx0VmFsdWVzKGRlZmluaXRpb24pIHtcbiAgICB2YXIgZGVmYXVsdFZhbHVlcyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gICAgdmFyIGRlZnMgPSBkZWZpbml0aW9uICYmIGRlZmluaXRpb24udmFyaWFibGVEZWZpbml0aW9ucztcbiAgICBpZiAoZGVmcyAmJiBkZWZzLmxlbmd0aCkge1xuICAgICAgICBkZWZzLmZvckVhY2goZnVuY3Rpb24gKGRlZikge1xuICAgICAgICAgICAgaWYgKGRlZi5kZWZhdWx0VmFsdWUpIHtcbiAgICAgICAgICAgICAgICB2YWx1ZVRvT2JqZWN0UmVwcmVzZW50YXRpb24oZGVmYXVsdFZhbHVlcywgZGVmLnZhcmlhYmxlLm5hbWUsIGRlZi5kZWZhdWx0VmFsdWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG4gICAgcmV0dXJuIGRlZmF1bHRWYWx1ZXM7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXRGcm9tQVNULmpzLm1hcCJdLCJuYW1lcyI6WyJpbnZhcmlhbnQiLCJuZXdJbnZhcmlhbnRFcnJvciIsInZhbHVlVG9PYmplY3RSZXByZXNlbnRhdGlvbiIsImNoZWNrRG9jdW1lbnQiLCJkb2MiLCJraW5kIiwib3BlcmF0aW9ucyIsImRlZmluaXRpb25zIiwiZmlsdGVyIiwiZCIsIm1hcCIsImRlZmluaXRpb24iLCJsZW5ndGgiLCJnZXRPcGVyYXRpb25EZWZpbml0aW9uIiwiZ2V0T3BlcmF0aW9uTmFtZSIsIm5hbWUiLCJ4IiwidmFsdWUiLCJnZXRGcmFnbWVudERlZmluaXRpb25zIiwiZ2V0UXVlcnlEZWZpbml0aW9uIiwicXVlcnlEZWYiLCJvcGVyYXRpb24iLCJnZXRGcmFnbWVudERlZmluaXRpb24iLCJmcmFnbWVudERlZiIsImdldE1haW5EZWZpbml0aW9uIiwicXVlcnlEb2MiLCJmcmFnbWVudERlZmluaXRpb24iLCJfaSIsIl9hIiwiZ2V0RGVmYXVsdFZhbHVlcyIsImRlZmF1bHRWYWx1ZXMiLCJPYmplY3QiLCJjcmVhdGUiLCJkZWZzIiwidmFyaWFibGVEZWZpbml0aW9ucyIsImZvckVhY2giLCJkZWYiLCJkZWZhdWx0VmFsdWUiLCJ2YXJpYWJsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/utilities/graphql/getFromAST.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/utilities/graphql/print.js":
/*!****************************************************************!*\
  !*** ./node_modules/@apollo/client/utilities/graphql/print.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   print: () => (/* binding */ print)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/./node_modules/graphql/language/printer.mjs\");\n/* harmony import */ var _common_canUse_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/canUse.js */ \"(ssr)/./node_modules/@apollo/client/utilities/common/canUse.js\");\n\n\nvar printCache = _common_canUse_js__WEBPACK_IMPORTED_MODULE_0__.canUseWeakMap ? new WeakMap() : undefined;\nvar print = function(ast) {\n    var result;\n    result = printCache === null || printCache === void 0 ? void 0 : printCache.get(ast);\n    if (!result) {\n        result = (0,graphql__WEBPACK_IMPORTED_MODULE_1__.print)(ast);\n        printCache === null || printCache === void 0 ? void 0 : printCache.set(ast, result);\n    }\n    return result;\n}; //# sourceMappingURL=print.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFwb2xsby9jbGllbnQvdXRpbGl0aWVzL2dyYXBocWwvcHJpbnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTZDO0FBQ087QUFDcEQsSUFBSUcsYUFBYUQsNERBQWFBLEdBQUcsSUFBSUUsWUFBWUM7QUFDMUMsSUFBSUwsUUFBUSxTQUFVTSxHQUFHO0lBQzVCLElBQUlDO0lBQ0pBLFNBQVNKLGVBQWUsUUFBUUEsZUFBZSxLQUFLLElBQUksS0FBSyxJQUFJQSxXQUFXSyxHQUFHLENBQUNGO0lBQ2hGLElBQUksQ0FBQ0MsUUFBUTtRQUNUQSxTQUFTTiw4Q0FBU0EsQ0FBQ0s7UUFDbkJILGVBQWUsUUFBUUEsZUFBZSxLQUFLLElBQUksS0FBSyxJQUFJQSxXQUFXTSxHQUFHLENBQUNILEtBQUtDO0lBQ2hGO0lBQ0EsT0FBT0E7QUFDWCxFQUFFLENBQ0YsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVybmktYXBwLy4vbm9kZV9tb2R1bGVzL0BhcG9sbG8vY2xpZW50L3V0aWxpdGllcy9ncmFwaHFsL3ByaW50LmpzP2UyOGQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcHJpbnQgYXMgb3JpZ1ByaW50IH0gZnJvbSBcImdyYXBocWxcIjtcbmltcG9ydCB7IGNhblVzZVdlYWtNYXAgfSBmcm9tIFwiLi4vY29tbW9uL2NhblVzZS5qc1wiO1xudmFyIHByaW50Q2FjaGUgPSBjYW5Vc2VXZWFrTWFwID8gbmV3IFdlYWtNYXAoKSA6IHVuZGVmaW5lZDtcbmV4cG9ydCB2YXIgcHJpbnQgPSBmdW5jdGlvbiAoYXN0KSB7XG4gICAgdmFyIHJlc3VsdDtcbiAgICByZXN1bHQgPSBwcmludENhY2hlID09PSBudWxsIHx8IHByaW50Q2FjaGUgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHByaW50Q2FjaGUuZ2V0KGFzdCk7XG4gICAgaWYgKCFyZXN1bHQpIHtcbiAgICAgICAgcmVzdWx0ID0gb3JpZ1ByaW50KGFzdCk7XG4gICAgICAgIHByaW50Q2FjaGUgPT09IG51bGwgfHwgcHJpbnRDYWNoZSA9PT0gdm9pZCAwID8gdm9pZCAwIDogcHJpbnRDYWNoZS5zZXQoYXN0LCByZXN1bHQpO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXByaW50LmpzLm1hcCJdLCJuYW1lcyI6WyJwcmludCIsIm9yaWdQcmludCIsImNhblVzZVdlYWtNYXAiLCJwcmludENhY2hlIiwiV2Vha01hcCIsInVuZGVmaW5lZCIsImFzdCIsInJlc3VsdCIsImdldCIsInNldCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/utilities/graphql/print.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/utilities/graphql/storeUtils.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@apollo/client/utilities/graphql/storeUtils.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   argumentsObjectFromField: () => (/* binding */ argumentsObjectFromField),\n/* harmony export */   getStoreKeyName: () => (/* binding */ getStoreKeyName),\n/* harmony export */   getTypenameFromResult: () => (/* binding */ getTypenameFromResult),\n/* harmony export */   isDocumentNode: () => (/* binding */ isDocumentNode),\n/* harmony export */   isField: () => (/* binding */ isField),\n/* harmony export */   isInlineFragment: () => (/* binding */ isInlineFragment),\n/* harmony export */   isReference: () => (/* binding */ isReference),\n/* harmony export */   makeReference: () => (/* binding */ makeReference),\n/* harmony export */   resultKeyNameFromField: () => (/* binding */ resultKeyNameFromField),\n/* harmony export */   storeKeyNameFromField: () => (/* binding */ storeKeyNameFromField),\n/* harmony export */   valueToObjectRepresentation: () => (/* binding */ valueToObjectRepresentation)\n/* harmony export */ });\n/* harmony import */ var _globals_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../globals/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/globals/index.js\");\n/* harmony import */ var _common_objects_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/objects.js */ \"(ssr)/./node_modules/@apollo/client/utilities/common/objects.js\");\n/* harmony import */ var _fragments_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./fragments.js */ \"(ssr)/./node_modules/@apollo/client/utilities/graphql/fragments.js\");\n\n\n\nfunction makeReference(id) {\n    return {\n        __ref: String(id)\n    };\n}\nfunction isReference(obj) {\n    return Boolean(obj && typeof obj === \"object\" && typeof obj.__ref === \"string\");\n}\nfunction isDocumentNode(value) {\n    return (0,_common_objects_js__WEBPACK_IMPORTED_MODULE_1__.isNonNullObject)(value) && value.kind === \"Document\" && Array.isArray(value.definitions);\n}\nfunction isStringValue(value) {\n    return value.kind === \"StringValue\";\n}\nfunction isBooleanValue(value) {\n    return value.kind === \"BooleanValue\";\n}\nfunction isIntValue(value) {\n    return value.kind === \"IntValue\";\n}\nfunction isFloatValue(value) {\n    return value.kind === \"FloatValue\";\n}\nfunction isVariable(value) {\n    return value.kind === \"Variable\";\n}\nfunction isObjectValue(value) {\n    return value.kind === \"ObjectValue\";\n}\nfunction isListValue(value) {\n    return value.kind === \"ListValue\";\n}\nfunction isEnumValue(value) {\n    return value.kind === \"EnumValue\";\n}\nfunction isNullValue(value) {\n    return value.kind === \"NullValue\";\n}\nfunction valueToObjectRepresentation(argObj, name, value, variables) {\n    if (isIntValue(value) || isFloatValue(value)) {\n        argObj[name.value] = Number(value.value);\n    } else if (isBooleanValue(value) || isStringValue(value)) {\n        argObj[name.value] = value.value;\n    } else if (isObjectValue(value)) {\n        var nestedArgObj_1 = {};\n        value.fields.map(function(obj) {\n            return valueToObjectRepresentation(nestedArgObj_1, obj.name, obj.value, variables);\n        });\n        argObj[name.value] = nestedArgObj_1;\n    } else if (isVariable(value)) {\n        var variableValue = (variables || {})[value.name.value];\n        argObj[name.value] = variableValue;\n    } else if (isListValue(value)) {\n        argObj[name.value] = value.values.map(function(listValue) {\n            var nestedArgArrayObj = {};\n            valueToObjectRepresentation(nestedArgArrayObj, name, listValue, variables);\n            return nestedArgArrayObj[name.value];\n        });\n    } else if (isEnumValue(value)) {\n        argObj[name.value] = value.value;\n    } else if (isNullValue(value)) {\n        argObj[name.value] = null;\n    } else {\n        throw (0,_globals_index_js__WEBPACK_IMPORTED_MODULE_0__.newInvariantError)(81, name.value, value.kind);\n    }\n}\nfunction storeKeyNameFromField(field, variables) {\n    var directivesObj = null;\n    if (field.directives) {\n        directivesObj = {};\n        field.directives.forEach(function(directive) {\n            directivesObj[directive.name.value] = {};\n            if (directive.arguments) {\n                directive.arguments.forEach(function(_a) {\n                    var name = _a.name, value = _a.value;\n                    return valueToObjectRepresentation(directivesObj[directive.name.value], name, value, variables);\n                });\n            }\n        });\n    }\n    var argObj = null;\n    if (field.arguments && field.arguments.length) {\n        argObj = {};\n        field.arguments.forEach(function(_a) {\n            var name = _a.name, value = _a.value;\n            return valueToObjectRepresentation(argObj, name, value, variables);\n        });\n    }\n    return getStoreKeyName(field.name.value, argObj, directivesObj);\n}\nvar KNOWN_DIRECTIVES = [\n    \"connection\",\n    \"include\",\n    \"skip\",\n    \"client\",\n    \"rest\",\n    \"export\",\n    \"nonreactive\"\n];\nvar getStoreKeyName = Object.assign(function(fieldName, args, directives) {\n    if (args && directives && directives[\"connection\"] && directives[\"connection\"][\"key\"]) {\n        if (directives[\"connection\"][\"filter\"] && directives[\"connection\"][\"filter\"].length > 0) {\n            var filterKeys = directives[\"connection\"][\"filter\"] ? directives[\"connection\"][\"filter\"] : [];\n            filterKeys.sort();\n            var filteredArgs_1 = {};\n            filterKeys.forEach(function(key) {\n                filteredArgs_1[key] = args[key];\n            });\n            return \"\".concat(directives[\"connection\"][\"key\"], \"(\").concat(stringify(filteredArgs_1), \")\");\n        } else {\n            return directives[\"connection\"][\"key\"];\n        }\n    }\n    var completeFieldName = fieldName;\n    if (args) {\n        var stringifiedArgs = stringify(args);\n        completeFieldName += \"(\".concat(stringifiedArgs, \")\");\n    }\n    if (directives) {\n        Object.keys(directives).forEach(function(key) {\n            if (KNOWN_DIRECTIVES.indexOf(key) !== -1) return;\n            if (directives[key] && Object.keys(directives[key]).length) {\n                completeFieldName += \"@\".concat(key, \"(\").concat(stringify(directives[key]), \")\");\n            } else {\n                completeFieldName += \"@\".concat(key);\n            }\n        });\n    }\n    return completeFieldName;\n}, {\n    setStringify: function(s) {\n        var previous = stringify;\n        stringify = s;\n        return previous;\n    }\n});\nvar stringify = function defaultStringify(value) {\n    return JSON.stringify(value, stringifyReplacer);\n};\nfunction stringifyReplacer(_key, value) {\n    if ((0,_common_objects_js__WEBPACK_IMPORTED_MODULE_1__.isNonNullObject)(value) && !Array.isArray(value)) {\n        value = Object.keys(value).sort().reduce(function(copy, key) {\n            copy[key] = value[key];\n            return copy;\n        }, {});\n    }\n    return value;\n}\nfunction argumentsObjectFromField(field, variables) {\n    if (field.arguments && field.arguments.length) {\n        var argObj_1 = {};\n        field.arguments.forEach(function(_a) {\n            var name = _a.name, value = _a.value;\n            return valueToObjectRepresentation(argObj_1, name, value, variables);\n        });\n        return argObj_1;\n    }\n    return null;\n}\nfunction resultKeyNameFromField(field) {\n    return field.alias ? field.alias.value : field.name.value;\n}\nfunction getTypenameFromResult(result, selectionSet, fragmentMap) {\n    var fragments;\n    for(var _i = 0, _a = selectionSet.selections; _i < _a.length; _i++){\n        var selection = _a[_i];\n        if (isField(selection)) {\n            if (selection.name.value === \"__typename\") {\n                return result[resultKeyNameFromField(selection)];\n            }\n        } else if (fragments) {\n            fragments.push(selection);\n        } else {\n            fragments = [\n                selection\n            ];\n        }\n    }\n    if (typeof result.__typename === \"string\") {\n        return result.__typename;\n    }\n    if (fragments) {\n        for(var _b = 0, fragments_1 = fragments; _b < fragments_1.length; _b++){\n            var selection = fragments_1[_b];\n            var typename = getTypenameFromResult(result, (0,_fragments_js__WEBPACK_IMPORTED_MODULE_2__.getFragmentFromSelection)(selection, fragmentMap).selectionSet, fragmentMap);\n            if (typeof typename === \"string\") {\n                return typename;\n            }\n        }\n    }\n}\nfunction isField(selection) {\n    return selection.kind === \"Field\";\n}\nfunction isInlineFragment(selection) {\n    return selection.kind === \"InlineFragment\";\n} //# sourceMappingURL=storeUtils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/utilities/graphql/storeUtils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/utilities/graphql/transform.js":
/*!********************************************************************!*\
  !*** ./node_modules/@apollo/client/utilities/graphql/transform.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addTypenameToDocument: () => (/* binding */ addTypenameToDocument),\n/* harmony export */   buildQueryFromSelectionSet: () => (/* binding */ buildQueryFromSelectionSet),\n/* harmony export */   removeArgumentsFromDocument: () => (/* binding */ removeArgumentsFromDocument),\n/* harmony export */   removeClientSetsFromDocument: () => (/* binding */ removeClientSetsFromDocument),\n/* harmony export */   removeConnectionDirectiveFromDocument: () => (/* binding */ removeConnectionDirectiveFromDocument),\n/* harmony export */   removeDirectivesFromDocument: () => (/* binding */ removeDirectivesFromDocument),\n/* harmony export */   removeFragmentSpreadFromDocument: () => (/* binding */ removeFragmentSpreadFromDocument)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.mjs\");\n/* harmony import */ var _globals_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../globals/index.js */ \"(ssr)/./node_modules/@apollo/client/utilities/globals/index.js\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/./node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! graphql */ \"(ssr)/./node_modules/graphql/language/visitor.mjs\");\n/* harmony import */ var _getFromAST_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./getFromAST.js */ \"(ssr)/./node_modules/@apollo/client/utilities/graphql/getFromAST.js\");\n/* harmony import */ var _storeUtils_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./storeUtils.js */ \"(ssr)/./node_modules/@apollo/client/utilities/graphql/storeUtils.js\");\n/* harmony import */ var _fragments_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./fragments.js */ \"(ssr)/./node_modules/@apollo/client/utilities/graphql/fragments.js\");\n/* harmony import */ var _common_arrays_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../common/arrays.js */ \"(ssr)/./node_modules/@apollo/client/utilities/common/arrays.js\");\n\n\n\n\n\n\n\nvar TYPENAME_FIELD = {\n    kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.FIELD,\n    name: {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NAME,\n        value: \"__typename\"\n    }\n};\nfunction isEmpty(op, fragmentMap) {\n    return !op || op.selectionSet.selections.every(function(selection) {\n        return selection.kind === graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.FRAGMENT_SPREAD && isEmpty(fragmentMap[selection.name.value], fragmentMap);\n    });\n}\nfunction nullIfDocIsEmpty(doc) {\n    return isEmpty((0,_getFromAST_js__WEBPACK_IMPORTED_MODULE_2__.getOperationDefinition)(doc) || (0,_getFromAST_js__WEBPACK_IMPORTED_MODULE_2__.getFragmentDefinition)(doc), (0,_fragments_js__WEBPACK_IMPORTED_MODULE_3__.createFragmentMap)((0,_getFromAST_js__WEBPACK_IMPORTED_MODULE_2__.getFragmentDefinitions)(doc))) ? null : doc;\n}\nfunction getDirectiveMatcher(configs) {\n    var names = new Map();\n    var tests = new Map();\n    configs.forEach(function(directive) {\n        if (directive) {\n            if (directive.name) {\n                names.set(directive.name, directive);\n            } else if (directive.test) {\n                tests.set(directive.test, directive);\n            }\n        }\n    });\n    return function(directive) {\n        var config = names.get(directive.name.value);\n        if (!config && tests.size) {\n            tests.forEach(function(testConfig, test) {\n                if (test(directive)) {\n                    config = testConfig;\n                }\n            });\n        }\n        return config;\n    };\n}\nfunction makeInUseGetterFunction(defaultKey) {\n    var map = new Map();\n    return function inUseGetterFunction(key) {\n        if (key === void 0) {\n            key = defaultKey;\n        }\n        var inUse = map.get(key);\n        if (!inUse) {\n            map.set(key, inUse = {\n                variables: new Set(),\n                fragmentSpreads: new Set()\n            });\n        }\n        return inUse;\n    };\n}\nfunction removeDirectivesFromDocument(directives, doc) {\n    (0,_getFromAST_js__WEBPACK_IMPORTED_MODULE_2__.checkDocument)(doc);\n    var getInUseByOperationName = makeInUseGetterFunction(\"\");\n    var getInUseByFragmentName = makeInUseGetterFunction(\"\");\n    var getInUse = function(ancestors) {\n        for(var p = 0, ancestor = void 0; p < ancestors.length && (ancestor = ancestors[p]); ++p){\n            if ((0,_common_arrays_js__WEBPACK_IMPORTED_MODULE_4__.isArray)(ancestor)) continue;\n            if (ancestor.kind === graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.OPERATION_DEFINITION) {\n                return getInUseByOperationName(ancestor.name && ancestor.name.value);\n            }\n            if (ancestor.kind === graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.FRAGMENT_DEFINITION) {\n                return getInUseByFragmentName(ancestor.name.value);\n            }\n        }\n        globalThis.__DEV__ !== false && _globals_index_js__WEBPACK_IMPORTED_MODULE_0__.invariant.error(82);\n        return null;\n    };\n    var operationCount = 0;\n    for(var i = doc.definitions.length - 1; i >= 0; --i){\n        if (doc.definitions[i].kind === graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.OPERATION_DEFINITION) {\n            ++operationCount;\n        }\n    }\n    var directiveMatcher = getDirectiveMatcher(directives);\n    var shouldRemoveField = function(nodeDirectives) {\n        return (0,_common_arrays_js__WEBPACK_IMPORTED_MODULE_4__.isNonEmptyArray)(nodeDirectives) && nodeDirectives.map(directiveMatcher).some(function(config) {\n            return config && config.remove;\n        });\n    };\n    var originalFragmentDefsByPath = new Map();\n    var firstVisitMadeChanges = false;\n    var fieldOrInlineFragmentVisitor = {\n        enter: function(node) {\n            if (shouldRemoveField(node.directives)) {\n                firstVisitMadeChanges = true;\n                return null;\n            }\n        }\n    };\n    var docWithoutDirectiveSubtrees = (0,graphql__WEBPACK_IMPORTED_MODULE_5__.visit)(doc, {\n        Field: fieldOrInlineFragmentVisitor,\n        InlineFragment: fieldOrInlineFragmentVisitor,\n        VariableDefinition: {\n            enter: function() {\n                return false;\n            }\n        },\n        Variable: {\n            enter: function(node, _key, _parent, _path, ancestors) {\n                var inUse = getInUse(ancestors);\n                if (inUse) {\n                    inUse.variables.add(node.name.value);\n                }\n            }\n        },\n        FragmentSpread: {\n            enter: function(node, _key, _parent, _path, ancestors) {\n                if (shouldRemoveField(node.directives)) {\n                    firstVisitMadeChanges = true;\n                    return null;\n                }\n                var inUse = getInUse(ancestors);\n                if (inUse) {\n                    inUse.fragmentSpreads.add(node.name.value);\n                }\n            }\n        },\n        FragmentDefinition: {\n            enter: function(node, _key, _parent, path) {\n                originalFragmentDefsByPath.set(JSON.stringify(path), node);\n            },\n            leave: function(node, _key, _parent, path) {\n                var originalNode = originalFragmentDefsByPath.get(JSON.stringify(path));\n                if (node === originalNode) {\n                    return node;\n                }\n                if (operationCount > 0 && node.selectionSet.selections.every(function(selection) {\n                    return selection.kind === graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.FIELD && selection.name.value === \"__typename\";\n                })) {\n                    getInUseByFragmentName(node.name.value).removed = true;\n                    firstVisitMadeChanges = true;\n                    return null;\n                }\n            }\n        },\n        Directive: {\n            leave: function(node) {\n                if (directiveMatcher(node)) {\n                    firstVisitMadeChanges = true;\n                    return null;\n                }\n            }\n        }\n    });\n    if (!firstVisitMadeChanges) {\n        return doc;\n    }\n    var populateTransitiveVars = function(inUse) {\n        if (!inUse.transitiveVars) {\n            inUse.transitiveVars = new Set(inUse.variables);\n            if (!inUse.removed) {\n                inUse.fragmentSpreads.forEach(function(childFragmentName) {\n                    populateTransitiveVars(getInUseByFragmentName(childFragmentName)).transitiveVars.forEach(function(varName) {\n                        inUse.transitiveVars.add(varName);\n                    });\n                });\n            }\n        }\n        return inUse;\n    };\n    var allFragmentNamesUsed = new Set();\n    docWithoutDirectiveSubtrees.definitions.forEach(function(def) {\n        if (def.kind === graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.OPERATION_DEFINITION) {\n            populateTransitiveVars(getInUseByOperationName(def.name && def.name.value)).fragmentSpreads.forEach(function(childFragmentName) {\n                allFragmentNamesUsed.add(childFragmentName);\n            });\n        } else if (def.kind === graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.FRAGMENT_DEFINITION && operationCount === 0 && !getInUseByFragmentName(def.name.value).removed) {\n            allFragmentNamesUsed.add(def.name.value);\n        }\n    });\n    allFragmentNamesUsed.forEach(function(fragmentName) {\n        populateTransitiveVars(getInUseByFragmentName(fragmentName)).fragmentSpreads.forEach(function(childFragmentName) {\n            allFragmentNamesUsed.add(childFragmentName);\n        });\n    });\n    var fragmentWillBeRemoved = function(fragmentName) {\n        return !!(!allFragmentNamesUsed.has(fragmentName) || getInUseByFragmentName(fragmentName).removed);\n    };\n    var enterVisitor = {\n        enter: function(node) {\n            if (fragmentWillBeRemoved(node.name.value)) {\n                return null;\n            }\n        }\n    };\n    return nullIfDocIsEmpty((0,graphql__WEBPACK_IMPORTED_MODULE_5__.visit)(docWithoutDirectiveSubtrees, {\n        FragmentSpread: enterVisitor,\n        FragmentDefinition: enterVisitor,\n        OperationDefinition: {\n            leave: function(node) {\n                if (node.variableDefinitions) {\n                    var usedVariableNames_1 = populateTransitiveVars(getInUseByOperationName(node.name && node.name.value)).transitiveVars;\n                    if (usedVariableNames_1.size < node.variableDefinitions.length) {\n                        return (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_6__.__assign)({}, node), {\n                            variableDefinitions: node.variableDefinitions.filter(function(varDef) {\n                                return usedVariableNames_1.has(varDef.variable.name.value);\n                            })\n                        });\n                    }\n                }\n            }\n        }\n    }));\n}\nvar addTypenameToDocument = Object.assign(function(doc) {\n    return (0,graphql__WEBPACK_IMPORTED_MODULE_5__.visit)(doc, {\n        SelectionSet: {\n            enter: function(node, _key, parent) {\n                if (parent && parent.kind === graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.OPERATION_DEFINITION) {\n                    return;\n                }\n                var selections = node.selections;\n                if (!selections) {\n                    return;\n                }\n                var skip = selections.some(function(selection) {\n                    return (0,_storeUtils_js__WEBPACK_IMPORTED_MODULE_7__.isField)(selection) && (selection.name.value === \"__typename\" || selection.name.value.lastIndexOf(\"__\", 0) === 0);\n                });\n                if (skip) {\n                    return;\n                }\n                var field = parent;\n                if ((0,_storeUtils_js__WEBPACK_IMPORTED_MODULE_7__.isField)(field) && field.directives && field.directives.some(function(d) {\n                    return d.name.value === \"export\";\n                })) {\n                    return;\n                }\n                return (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_6__.__assign)({}, node), {\n                    selections: (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_6__.__spreadArray)([], selections, true), [\n                        TYPENAME_FIELD\n                    ], false)\n                });\n            }\n        }\n    });\n}, {\n    added: function(field) {\n        return field === TYPENAME_FIELD;\n    }\n});\nvar connectionRemoveConfig = {\n    test: function(directive) {\n        var willRemove = directive.name.value === \"connection\";\n        if (willRemove) {\n            if (!directive.arguments || !directive.arguments.some(function(arg) {\n                return arg.name.value === \"key\";\n            })) {\n                globalThis.__DEV__ !== false && _globals_index_js__WEBPACK_IMPORTED_MODULE_0__.invariant.warn(83);\n            }\n        }\n        return willRemove;\n    }\n};\nfunction removeConnectionDirectiveFromDocument(doc) {\n    return removeDirectivesFromDocument([\n        connectionRemoveConfig\n    ], (0,_getFromAST_js__WEBPACK_IMPORTED_MODULE_2__.checkDocument)(doc));\n}\nfunction hasDirectivesInSelectionSet(directives, selectionSet, nestedCheck) {\n    if (nestedCheck === void 0) {\n        nestedCheck = true;\n    }\n    return !!selectionSet && selectionSet.selections && selectionSet.selections.some(function(selection) {\n        return hasDirectivesInSelection(directives, selection, nestedCheck);\n    });\n}\nfunction hasDirectivesInSelection(directives, selection, nestedCheck) {\n    if (nestedCheck === void 0) {\n        nestedCheck = true;\n    }\n    if (!(0,_storeUtils_js__WEBPACK_IMPORTED_MODULE_7__.isField)(selection)) {\n        return true;\n    }\n    if (!selection.directives) {\n        return false;\n    }\n    return selection.directives.some(getDirectiveMatcher(directives)) || nestedCheck && hasDirectivesInSelectionSet(directives, selection.selectionSet, nestedCheck);\n}\nfunction getArgumentMatcher(config) {\n    return function argumentMatcher(argument) {\n        return config.some(function(aConfig) {\n            return argument.value && argument.value.kind === graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.VARIABLE && argument.value.name && (aConfig.name === argument.value.name.value || aConfig.test && aConfig.test(argument));\n        });\n    };\n}\nfunction removeArgumentsFromDocument(config, doc) {\n    var argMatcher = getArgumentMatcher(config);\n    return nullIfDocIsEmpty((0,graphql__WEBPACK_IMPORTED_MODULE_5__.visit)(doc, {\n        OperationDefinition: {\n            enter: function(node) {\n                return (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_6__.__assign)({}, node), {\n                    variableDefinitions: node.variableDefinitions ? node.variableDefinitions.filter(function(varDef) {\n                        return !config.some(function(arg) {\n                            return arg.name === varDef.variable.name.value;\n                        });\n                    }) : []\n                });\n            }\n        },\n        Field: {\n            enter: function(node) {\n                var shouldRemoveField = config.some(function(argConfig) {\n                    return argConfig.remove;\n                });\n                if (shouldRemoveField) {\n                    var argMatchCount_1 = 0;\n                    if (node.arguments) {\n                        node.arguments.forEach(function(arg) {\n                            if (argMatcher(arg)) {\n                                argMatchCount_1 += 1;\n                            }\n                        });\n                    }\n                    if (argMatchCount_1 === 1) {\n                        return null;\n                    }\n                }\n            }\n        },\n        Argument: {\n            enter: function(node) {\n                if (argMatcher(node)) {\n                    return null;\n                }\n            }\n        }\n    }));\n}\nfunction removeFragmentSpreadFromDocument(config, doc) {\n    function enter(node) {\n        if (config.some(function(def) {\n            return def.name === node.name.value;\n        })) {\n            return null;\n        }\n    }\n    return nullIfDocIsEmpty((0,graphql__WEBPACK_IMPORTED_MODULE_5__.visit)(doc, {\n        FragmentSpread: {\n            enter: enter\n        },\n        FragmentDefinition: {\n            enter: enter\n        }\n    }));\n}\nfunction buildQueryFromSelectionSet(document) {\n    var definition = (0,_getFromAST_js__WEBPACK_IMPORTED_MODULE_2__.getMainDefinition)(document);\n    var definitionOperation = definition.operation;\n    if (definitionOperation === \"query\") {\n        return document;\n    }\n    var modifiedDoc = (0,graphql__WEBPACK_IMPORTED_MODULE_5__.visit)(document, {\n        OperationDefinition: {\n            enter: function(node) {\n                return (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_6__.__assign)({}, node), {\n                    operation: \"query\"\n                });\n            }\n        }\n    });\n    return modifiedDoc;\n}\nfunction removeClientSetsFromDocument(document) {\n    (0,_getFromAST_js__WEBPACK_IMPORTED_MODULE_2__.checkDocument)(document);\n    var modifiedDoc = removeDirectivesFromDocument([\n        {\n            test: function(directive) {\n                return directive.name.value === \"client\";\n            },\n            remove: true\n        }\n    ], document);\n    return modifiedDoc;\n} //# sourceMappingURL=transform.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/utilities/graphql/transform.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/utilities/observables/Concast.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@apollo/client/utilities/observables/Concast.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Concast: () => (/* binding */ Concast)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.mjs\");\n/* harmony import */ var _Observable_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Observable.js */ \"(ssr)/./node_modules/zen-observable-ts/module.js\");\n/* harmony import */ var _iteration_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./iteration.js */ \"(ssr)/./node_modules/@apollo/client/utilities/observables/iteration.js\");\n/* harmony import */ var _subclassing_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./subclassing.js */ \"(ssr)/./node_modules/@apollo/client/utilities/observables/subclassing.js\");\n\n\n\n\nfunction isPromiseLike(value) {\n    return value && typeof value.then === \"function\";\n}\nvar Concast = function(_super) {\n    (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__extends)(Concast, _super);\n    function Concast(sources) {\n        var _this = _super.call(this, function(observer) {\n            _this.addObserver(observer);\n            return function() {\n                return _this.removeObserver(observer);\n            };\n        }) || this;\n        _this.observers = new Set();\n        _this.promise = new Promise(function(resolve, reject) {\n            _this.resolve = resolve;\n            _this.reject = reject;\n        });\n        _this.handlers = {\n            next: function(result) {\n                if (_this.sub !== null) {\n                    _this.latest = [\n                        \"next\",\n                        result\n                    ];\n                    _this.notify(\"next\", result);\n                    (0,_iteration_js__WEBPACK_IMPORTED_MODULE_1__.iterateObserversSafely)(_this.observers, \"next\", result);\n                }\n            },\n            error: function(error) {\n                var sub = _this.sub;\n                if (sub !== null) {\n                    if (sub) setTimeout(function() {\n                        return sub.unsubscribe();\n                    });\n                    _this.sub = null;\n                    _this.latest = [\n                        \"error\",\n                        error\n                    ];\n                    _this.reject(error);\n                    _this.notify(\"error\", error);\n                    (0,_iteration_js__WEBPACK_IMPORTED_MODULE_1__.iterateObserversSafely)(_this.observers, \"error\", error);\n                }\n            },\n            complete: function() {\n                var _a = _this, sub = _a.sub, _b = _a.sources, sources = _b === void 0 ? [] : _b;\n                if (sub !== null) {\n                    var value = sources.shift();\n                    if (!value) {\n                        if (sub) setTimeout(function() {\n                            return sub.unsubscribe();\n                        });\n                        _this.sub = null;\n                        if (_this.latest && _this.latest[0] === \"next\") {\n                            _this.resolve(_this.latest[1]);\n                        } else {\n                            _this.resolve();\n                        }\n                        _this.notify(\"complete\");\n                        (0,_iteration_js__WEBPACK_IMPORTED_MODULE_1__.iterateObserversSafely)(_this.observers, \"complete\");\n                    } else if (isPromiseLike(value)) {\n                        value.then(function(obs) {\n                            return _this.sub = obs.subscribe(_this.handlers);\n                        });\n                    } else {\n                        _this.sub = value.subscribe(_this.handlers);\n                    }\n                }\n            }\n        };\n        _this.nextResultListeners = new Set();\n        _this.cancel = function(reason) {\n            _this.reject(reason);\n            _this.sources = [];\n            _this.handlers.complete();\n        };\n        _this.promise.catch(function(_) {});\n        if (typeof sources === \"function\") {\n            sources = [\n                new _Observable_js__WEBPACK_IMPORTED_MODULE_2__.Observable(sources)\n            ];\n        }\n        if (isPromiseLike(sources)) {\n            sources.then(function(iterable) {\n                return _this.start(iterable);\n            }, _this.handlers.error);\n        } else {\n            _this.start(sources);\n        }\n        return _this;\n    }\n    Concast.prototype.start = function(sources) {\n        if (this.sub !== void 0) return;\n        this.sources = Array.from(sources);\n        this.handlers.complete();\n    };\n    Concast.prototype.deliverLastMessage = function(observer) {\n        if (this.latest) {\n            var nextOrError = this.latest[0];\n            var method = observer[nextOrError];\n            if (method) {\n                method.call(observer, this.latest[1]);\n            }\n            if (this.sub === null && nextOrError === \"next\" && observer.complete) {\n                observer.complete();\n            }\n        }\n    };\n    Concast.prototype.addObserver = function(observer) {\n        if (!this.observers.has(observer)) {\n            this.deliverLastMessage(observer);\n            this.observers.add(observer);\n        }\n    };\n    Concast.prototype.removeObserver = function(observer) {\n        if (this.observers.delete(observer) && this.observers.size < 1) {\n            this.handlers.complete();\n        }\n    };\n    Concast.prototype.notify = function(method, arg) {\n        var nextResultListeners = this.nextResultListeners;\n        if (nextResultListeners.size) {\n            this.nextResultListeners = new Set();\n            nextResultListeners.forEach(function(listener) {\n                return listener(method, arg);\n            });\n        }\n    };\n    Concast.prototype.beforeNext = function(callback) {\n        var called = false;\n        this.nextResultListeners.add(function(method, arg) {\n            if (!called) {\n                called = true;\n                callback(method, arg);\n            }\n        });\n    };\n    return Concast;\n}(_Observable_js__WEBPACK_IMPORTED_MODULE_2__.Observable);\n\n(0,_subclassing_js__WEBPACK_IMPORTED_MODULE_3__.fixObservableSubclass)(Concast); //# sourceMappingURL=Concast.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/utilities/observables/Concast.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/utilities/observables/asyncMap.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@apollo/client/utilities/observables/asyncMap.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   asyncMap: () => (/* binding */ asyncMap)\n/* harmony export */ });\n/* harmony import */ var _Observable_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Observable.js */ \"(ssr)/./node_modules/zen-observable-ts/module.js\");\n\nfunction asyncMap(observable, mapFn, catchFn) {\n    return new _Observable_js__WEBPACK_IMPORTED_MODULE_0__.Observable(function(observer) {\n        var promiseQueue = {\n            then: function(callback) {\n                return new Promise(function(resolve) {\n                    return resolve(callback());\n                });\n            }\n        };\n        function makeCallback(examiner, key) {\n            return function(arg) {\n                if (examiner) {\n                    var both = function() {\n                        return observer.closed ? 0 : examiner(arg);\n                    };\n                    promiseQueue = promiseQueue.then(both, both).then(function(result) {\n                        return observer.next(result);\n                    }, function(error) {\n                        return observer.error(error);\n                    });\n                } else {\n                    observer[key](arg);\n                }\n            };\n        }\n        var handler = {\n            next: makeCallback(mapFn, \"next\"),\n            error: makeCallback(catchFn, \"error\"),\n            complete: function() {\n                promiseQueue.then(function() {\n                    return observer.complete();\n                });\n            }\n        };\n        var sub = observable.subscribe(handler);\n        return function() {\n            return sub.unsubscribe();\n        };\n    });\n} //# sourceMappingURL=asyncMap.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFwb2xsby9jbGllbnQvdXRpbGl0aWVzL29ic2VydmFibGVzL2FzeW5jTWFwLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQTZDO0FBQ3RDLFNBQVNDLFNBQVNDLFVBQVUsRUFBRUMsS0FBSyxFQUFFQyxPQUFPO0lBQy9DLE9BQU8sSUFBSUosc0RBQVVBLENBQUMsU0FBVUssUUFBUTtRQUNwQyxJQUFJQyxlQUFlO1lBQ2ZDLE1BQU0sU0FBVUMsUUFBUTtnQkFDcEIsT0FBTyxJQUFJQyxRQUFRLFNBQVVDLE9BQU87b0JBQUksT0FBT0EsUUFBUUY7Z0JBQWE7WUFDeEU7UUFDSjtRQUNBLFNBQVNHLGFBQWFDLFFBQVEsRUFBRUMsR0FBRztZQUMvQixPQUFPLFNBQVVDLEdBQUc7Z0JBQ2hCLElBQUlGLFVBQVU7b0JBQ1YsSUFBSUcsT0FBTzt3QkFDUCxPQUFPVixTQUFTVyxNQUFNLEdBQ2hCLElBQ0FKLFNBQVNFO29CQUNuQjtvQkFDQVIsZUFBZUEsYUFBYUMsSUFBSSxDQUFDUSxNQUFNQSxNQUFNUixJQUFJLENBQUMsU0FBVVUsTUFBTTt3QkFBSSxPQUFPWixTQUFTYSxJQUFJLENBQUNEO29CQUFTLEdBQUcsU0FBVUUsS0FBSzt3QkFBSSxPQUFPZCxTQUFTYyxLQUFLLENBQUNBO29CQUFRO2dCQUM1SixPQUNLO29CQUNEZCxRQUFRLENBQUNRLElBQUksQ0FBQ0M7Z0JBQ2xCO1lBQ0o7UUFDSjtRQUNBLElBQUlNLFVBQVU7WUFDVkYsTUFBTVAsYUFBYVIsT0FBTztZQUMxQmdCLE9BQU9SLGFBQWFQLFNBQVM7WUFDN0JpQixVQUFVO2dCQUNOZixhQUFhQyxJQUFJLENBQUM7b0JBQWMsT0FBT0YsU0FBU2dCLFFBQVE7Z0JBQUk7WUFDaEU7UUFDSjtRQUNBLElBQUlDLE1BQU1wQixXQUFXcUIsU0FBUyxDQUFDSDtRQUMvQixPQUFPO1lBQWMsT0FBT0UsSUFBSUUsV0FBVztRQUFJO0lBQ25EO0FBQ0osRUFDQSxvQ0FBb0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdXJuaS1hcHAvLi9ub2RlX21vZHVsZXMvQGFwb2xsby9jbGllbnQvdXRpbGl0aWVzL29ic2VydmFibGVzL2FzeW5jTWFwLmpzP2FmMjkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gXCIuL09ic2VydmFibGUuanNcIjtcbmV4cG9ydCBmdW5jdGlvbiBhc3luY01hcChvYnNlcnZhYmxlLCBtYXBGbiwgY2F0Y2hGbikge1xuICAgIHJldHVybiBuZXcgT2JzZXJ2YWJsZShmdW5jdGlvbiAob2JzZXJ2ZXIpIHtcbiAgICAgICAgdmFyIHByb21pc2VRdWV1ZSA9IHtcbiAgICAgICAgICAgIHRoZW46IGZ1bmN0aW9uIChjYWxsYmFjaykge1xuICAgICAgICAgICAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSkgeyByZXR1cm4gcmVzb2x2ZShjYWxsYmFjaygpKTsgfSk7XG4gICAgICAgICAgICB9LFxuICAgICAgICB9O1xuICAgICAgICBmdW5jdGlvbiBtYWtlQ2FsbGJhY2soZXhhbWluZXIsIGtleSkge1xuICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIChhcmcpIHtcbiAgICAgICAgICAgICAgICBpZiAoZXhhbWluZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGJvdGggPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gb2JzZXJ2ZXIuY2xvc2VkXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPyAwXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBleGFtaW5lcihhcmcpO1xuICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgICAgICBwcm9taXNlUXVldWUgPSBwcm9taXNlUXVldWUudGhlbihib3RoLCBib3RoKS50aGVuKGZ1bmN0aW9uIChyZXN1bHQpIHsgcmV0dXJuIG9ic2VydmVyLm5leHQocmVzdWx0KTsgfSwgZnVuY3Rpb24gKGVycm9yKSB7IHJldHVybiBvYnNlcnZlci5lcnJvcihlcnJvcik7IH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgb2JzZXJ2ZXJba2V5XShhcmcpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGhhbmRsZXIgPSB7XG4gICAgICAgICAgICBuZXh0OiBtYWtlQ2FsbGJhY2sobWFwRm4sIFwibmV4dFwiKSxcbiAgICAgICAgICAgIGVycm9yOiBtYWtlQ2FsbGJhY2soY2F0Y2hGbiwgXCJlcnJvclwiKSxcbiAgICAgICAgICAgIGNvbXBsZXRlOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgcHJvbWlzZVF1ZXVlLnRoZW4oZnVuY3Rpb24gKCkgeyByZXR1cm4gb2JzZXJ2ZXIuY29tcGxldGUoKTsgfSk7XG4gICAgICAgICAgICB9LFxuICAgICAgICB9O1xuICAgICAgICB2YXIgc3ViID0gb2JzZXJ2YWJsZS5zdWJzY3JpYmUoaGFuZGxlcik7XG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAoKSB7IHJldHVybiBzdWIudW5zdWJzY3JpYmUoKTsgfTtcbiAgICB9KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFzeW5jTWFwLmpzLm1hcCJdLCJuYW1lcyI6WyJPYnNlcnZhYmxlIiwiYXN5bmNNYXAiLCJvYnNlcnZhYmxlIiwibWFwRm4iLCJjYXRjaEZuIiwib2JzZXJ2ZXIiLCJwcm9taXNlUXVldWUiLCJ0aGVuIiwiY2FsbGJhY2siLCJQcm9taXNlIiwicmVzb2x2ZSIsIm1ha2VDYWxsYmFjayIsImV4YW1pbmVyIiwia2V5IiwiYXJnIiwiYm90aCIsImNsb3NlZCIsInJlc3VsdCIsIm5leHQiLCJlcnJvciIsImhhbmRsZXIiLCJjb21wbGV0ZSIsInN1YiIsInN1YnNjcmliZSIsInVuc3Vic2NyaWJlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/utilities/observables/asyncMap.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/utilities/observables/iteration.js":
/*!************************************************************************!*\
  !*** ./node_modules/@apollo/client/utilities/observables/iteration.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   iterateObserversSafely: () => (/* binding */ iterateObserversSafely)\n/* harmony export */ });\nfunction iterateObserversSafely(observers, method, argument) {\n    var observersWithMethod = [];\n    observers.forEach(function(obs) {\n        return obs[method] && observersWithMethod.push(obs);\n    });\n    observersWithMethod.forEach(function(obs) {\n        return obs[method](argument);\n    });\n} //# sourceMappingURL=iteration.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFwb2xsby9jbGllbnQvdXRpbGl0aWVzL29ic2VydmFibGVzL2l0ZXJhdGlvbi5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU8sU0FBU0EsdUJBQXVCQyxTQUFTLEVBQUVDLE1BQU0sRUFBRUMsUUFBUTtJQUM5RCxJQUFJQyxzQkFBc0IsRUFBRTtJQUM1QkgsVUFBVUksT0FBTyxDQUFDLFNBQVVDLEdBQUc7UUFBSSxPQUFPQSxHQUFHLENBQUNKLE9BQU8sSUFBSUUsb0JBQW9CRyxJQUFJLENBQUNEO0lBQU07SUFDeEZGLG9CQUFvQkMsT0FBTyxDQUFDLFNBQVVDLEdBQUc7UUFBSSxPQUFPQSxHQUFHLENBQUNKLE9BQU8sQ0FBQ0M7SUFBVztBQUMvRSxFQUNBLHFDQUFxQyIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1cm5pLWFwcC8uL25vZGVfbW9kdWxlcy9AYXBvbGxvL2NsaWVudC91dGlsaXRpZXMvb2JzZXJ2YWJsZXMvaXRlcmF0aW9uLmpzP2I0NzgiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGl0ZXJhdGVPYnNlcnZlcnNTYWZlbHkob2JzZXJ2ZXJzLCBtZXRob2QsIGFyZ3VtZW50KSB7XG4gICAgdmFyIG9ic2VydmVyc1dpdGhNZXRob2QgPSBbXTtcbiAgICBvYnNlcnZlcnMuZm9yRWFjaChmdW5jdGlvbiAob2JzKSB7IHJldHVybiBvYnNbbWV0aG9kXSAmJiBvYnNlcnZlcnNXaXRoTWV0aG9kLnB1c2gob2JzKTsgfSk7XG4gICAgb2JzZXJ2ZXJzV2l0aE1ldGhvZC5mb3JFYWNoKGZ1bmN0aW9uIChvYnMpIHsgcmV0dXJuIG9ic1ttZXRob2RdKGFyZ3VtZW50KTsgfSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pdGVyYXRpb24uanMubWFwIl0sIm5hbWVzIjpbIml0ZXJhdGVPYnNlcnZlcnNTYWZlbHkiLCJvYnNlcnZlcnMiLCJtZXRob2QiLCJhcmd1bWVudCIsIm9ic2VydmVyc1dpdGhNZXRob2QiLCJmb3JFYWNoIiwib2JzIiwicHVzaCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/utilities/observables/iteration.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/utilities/observables/subclassing.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@apollo/client/utilities/observables/subclassing.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fixObservableSubclass: () => (/* binding */ fixObservableSubclass)\n/* harmony export */ });\n/* harmony import */ var _Observable_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Observable.js */ \"(ssr)/./node_modules/zen-observable-ts/module.js\");\n/* harmony import */ var _common_canUse_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/canUse.js */ \"(ssr)/./node_modules/@apollo/client/utilities/common/canUse.js\");\n\n\nfunction fixObservableSubclass(subclass) {\n    function set(key) {\n        Object.defineProperty(subclass, key, {\n            value: _Observable_js__WEBPACK_IMPORTED_MODULE_0__.Observable\n        });\n    }\n    if (_common_canUse_js__WEBPACK_IMPORTED_MODULE_1__.canUseSymbol && Symbol.species) {\n        set(Symbol.species);\n    }\n    set(\"@@species\");\n    return subclass;\n} //# sourceMappingURL=subclassing.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFwb2xsby9jbGllbnQvdXRpbGl0aWVzL29ic2VydmFibGVzL3N1YmNsYXNzaW5nLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUE2QztBQUNNO0FBQzVDLFNBQVNFLHNCQUFzQkMsUUFBUTtJQUMxQyxTQUFTQyxJQUFJQyxHQUFHO1FBQ1pDLE9BQU9DLGNBQWMsQ0FBQ0osVUFBVUUsS0FBSztZQUFFRyxPQUFPUixzREFBVUE7UUFBQztJQUM3RDtJQUNBLElBQUlDLDJEQUFZQSxJQUFJUSxPQUFPQyxPQUFPLEVBQUU7UUFDaENOLElBQUlLLE9BQU9DLE9BQU87SUFDdEI7SUFDQU4sSUFBSTtJQUNKLE9BQU9EO0FBQ1gsRUFDQSx1Q0FBdUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdXJuaS1hcHAvLi9ub2RlX21vZHVsZXMvQGFwb2xsby9jbGllbnQvdXRpbGl0aWVzL29ic2VydmFibGVzL3N1YmNsYXNzaW5nLmpzP2ExZjIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gXCIuL09ic2VydmFibGUuanNcIjtcbmltcG9ydCB7IGNhblVzZVN5bWJvbCB9IGZyb20gXCIuLi9jb21tb24vY2FuVXNlLmpzXCI7XG5leHBvcnQgZnVuY3Rpb24gZml4T2JzZXJ2YWJsZVN1YmNsYXNzKHN1YmNsYXNzKSB7XG4gICAgZnVuY3Rpb24gc2V0KGtleSkge1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoc3ViY2xhc3MsIGtleSwgeyB2YWx1ZTogT2JzZXJ2YWJsZSB9KTtcbiAgICB9XG4gICAgaWYgKGNhblVzZVN5bWJvbCAmJiBTeW1ib2wuc3BlY2llcykge1xuICAgICAgICBzZXQoU3ltYm9sLnNwZWNpZXMpO1xuICAgIH1cbiAgICBzZXQoXCJAQHNwZWNpZXNcIik7XG4gICAgcmV0dXJuIHN1YmNsYXNzO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3ViY2xhc3NpbmcuanMubWFwIl0sIm5hbWVzIjpbIk9ic2VydmFibGUiLCJjYW5Vc2VTeW1ib2wiLCJmaXhPYnNlcnZhYmxlU3ViY2xhc3MiLCJzdWJjbGFzcyIsInNldCIsImtleSIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwidmFsdWUiLCJTeW1ib2wiLCJzcGVjaWVzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/utilities/observables/subclassing.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@apollo/client/version.js":
/*!************************************************!*\
  !*** ./node_modules/@apollo/client/version.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   version: () => (/* binding */ version)\n/* harmony export */ });\nvar version = \"3.8.7\"; //# sourceMappingURL=version.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGFwb2xsby9jbGllbnQvdmVyc2lvbi5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU8sSUFBSUEsVUFBVSxRQUFRLENBQzdCLG1DQUFtQyIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1cm5pLWFwcC8uL25vZGVfbW9kdWxlcy9AYXBvbGxvL2NsaWVudC92ZXJzaW9uLmpzPzZmZGIiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHZhciB2ZXJzaW9uID0gXCIzLjguN1wiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dmVyc2lvbi5qcy5tYXAiXSwibmFtZXMiOlsidmVyc2lvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@apollo/client/version.js\n");

/***/ })

};
;